
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NOME

dsc - formato Debian de ficheiro de controle de pacotes fonte

=head1 RESUMO

I<filename>B<.dsc>

=head1 DESCRIÇÃO

Cada pacote fonte Debian é composto de um ficheiro .dsc, o qual contém um número de campos, em formato L<deb822(5)>.

Cada campo começa com uma etiqueta, tal como B<Source> ou B<Binary> (insensível a maiúsculas/minúsculas), seguida do símbolo dois pontos, e o corpo do campo (sensível a maiúsculas/minúsculas a menos que declarado o contrário). Os campos são delimitados apenas por etiquetas de campos. Por outras palavras, o texto do campo pode ter várias linhas de comprimento, mas as ferramentas de instalação irão geralmente juntar as linhas quando processam o corpo do campo (excepto no caso de B<Package-List>, B<Files>, B<Checksums-Sha1> e B<Checksums-Sha256> de múltiplos campos, ver abaixo).

Os dados de controle podem estar inclusos numa assinatura OpenPGP ASCII Armored, como especificado em RFC9580.

=head1 CAMPOS

=over 

=item B<Format:> I<format-version> (necessário)

O valor deste campo declara a versão de formato do pacote fonte. O valor do campo é usado por programas que actuam no pacote fonte para interpretar a lista de ficheiros no pacote fonte e determinar como desempacota-los. A sintaxe do valor do campo é uma revisão maior numérica (“0-9”), um ponto (“.”), uma revisão menor numérica (“0-9”), e depois um subtipo opcional após um espaço em branco (“ \t”), o qual é especificado numa palavra alfanumérica em minúsculas (“a-z0-9”) em parêntesis (“()”).  O subtipo é opcional na sintaxe mas pode ser obrigatória para revisões particulares de formato fonte.

Os formatos fonte actualmente suportados pelo B<dpkg> são B<1.0>, B<2.0>, B<3.0 (native)>, B<3.0 (quilt)>, B<3.0 (git)>, B<3.0 (bzr)> e B<3.0 (custom)>. Veja L<dpkg-source(1)> para as suas descrições.

=item B<Source:> I<source-name> (necessário)

O valor deste campo determina o nome do pacote, e é usado para gerar nomes de ficheiros pela maioria das ferramentas de instalação.

=item B<Binary:> I<binary-package-list>

Este campo dobrado lista pacotes binários, separados por vírgulas, que este pacote fonte pode produzir.

Este campo está agora a ser suplantado pelo campo B<Package-List>, o qual fornece informação suficiente sobre que pacotes binários são produzidos em qual arquitectura, perfil de compilação e outras restrições envolvidas.

=item B<Architecture:> I<arch-list> (recomendado)

Uma lista de arquitecturas e wildcards de arquitecturas separadas por espaços que especificam o tipo de hardware para o qual este pacote por ser compilado. Nomes de arquitecturas comuns são B<amd64>, B<armel>, B<i386>, B<linux-any>, B<any-amd64>, etc.

Note que o valor B<all> destina-se a pacotes que são independentes da arquitectura, e B<any> a pacotes que são dependentes da arquitectura. A lista pode incluir (ou consistir apenas de) o valor especial B<all>.  Quando a lista contem a wildcard de arquitectura B<any>, o outro único valor permitido na lista é B<all>.

O valor do campo é geralmente gerado a partir de campos B<Architecture> a partir de I<debian/control> no pacote fonte.

=item B<Version:>I< string-de-versão> (obrigatório)

Tipicamente, isto é o número de versão do pacote original seja em que formato o autor do programa usa. Pode também incluir um número de revisão Debian (para pacotes não-nativos). O formato exacto e algoritmo de ordenação estão descritos em L<deb-version(7)>.

=item B<Origin:> I<name>

O nome da distribuição de onde este pacote originou.

=item B<Maintainer:> I<fullname-email> (recomendado)

Deverá estar no formato "Joe Bloggs E<lt>jbloggs@foo.comE<gt>", e é tipicamente a pessoa que criou o pacote, e não o autor do software que foi empacotado.

=item B<Uploaders:> I<fullname-email-list>

Lista todos os nomes e endereços de email de co-maintainers do pacote, no mesmo formato que o campo Maintainer. Vários co-maintainers devem ser separados por uma vírgula.

=item B<Description> I<short-description>

=item S< >I<long-description>

O formato da descrição do pacote fonte é um sumário breve e curto na primeira linha (após o campo B<Description>). As linhas seguintes devem ser usadas para uma descrição longa e mais detalhada. Cada linha da descrição longa tem de ser precedida com um espaço, e as linhas em branco na descrição longa têm de conter um único ‘B<.>’  a seguir ao espaço que precede.

=item B<Homepage:> I<url>

O I<url> da página inicial do projecto do autor.

=item B<Standards-Version:> I<version-string> (recomendado)

Isto documenta a versão mais recente dos standards de política da distribuição com que este pacote está em conformidade.

=item B<Vcs-Browser:> I<url>

O I<url> da uma interface web para explorar o repositório do Sistema de Controlo de Versão.

=item B<Vcs-Arch:> I<url>

=item B<Vcs-Bzr:> I<url>

=item B<Vcs-Cvs:> I<url>

=item B<Vcs-Darcs:> I<url>

=item B<Vcs-Git:> I<url>

=item B<Vcs-Hg:> I<url>

=item B<Vcs-Mtn:> I<url>

=item B<Vcs-Svn:> I<url>

Estes campos declaram o I<url> do repositório do Sistema de Controle de Versão usado para manter este pacote. Veja L<deb-src-control(5)> para mais detalhes.

=item B<Testsuite:> I<name-list>

Este campo declara que o pacote fonte contem as suites de teste especificadas. O valor é uma lista de suites de teste separadas por vírgulas. Se o valor B<autopkgtest> estiver presente, espera-se a presença de um I<debian/tests/control>, se o ficheiro está presente mas não o valor, então B<dpkg-source> irá automaticamente adiciona-lo, preservando valores anteriores.

=item B<Testsuite-Triggers:> I<package-list>

Este campo declara a união de todas as dependências de todos os testes, separadas por espaços (campos B<Depends> no ficheiro I<debian/tests/control>), com todas as restrições removidas, e dependências OU achatadas (isto é, convertidas para relações E separadas), excepto para binários gerados por este pacote fonte e seus equivalentes de meta-dependência B<@>.

B<Fundamento>: este campo é necessário porque caso contrário, para puderem obter as dependências de teste, cada pacote fonte teria que ser desempacotado.

=item B<Build-Depends:> I<package-list>

=item B<Build-Depends-Arch:> I<package-list>

=item B<Build-Depends-Indep:> I<package-list>

=item B<Build-Conflicts:> I<package-list>

=item B<Build-Conflicts-Arch:> I<package-list>

=item B<Build-Conflicts-Indep:> I<package-list>

Estes campos declaram relacionamentos entre o pacote fonte e pacotes usados para o construir. Eles são discutidos no manual L<deb-src-control(5)>.

=item B<Package-List:>

=item S< >I<package> I<package-type> I<section> I<priority> I<key-value-list>

Este campo multi-linha contem uma lista de pacotes binários gerados por este pacote fonte.

O I<package> é o nome do pacote binário.

O I<package-type> é o tipo de pacote binário, normalmente B<deb>, outro valor comum é B<udeb>.

I<section> e I<priority> correspondem aos campos do pacote binário do mesmo nome, ou se omitidos são predefinidos para B<unknown> e B<optional> respetivamente (desde dpkg 1.22.13).

A I<key-value-list> é uma lista is de I<key>B<=>I<value> separados por espaços, a as chaves opcionais actualmente conhecidas são:

=over 

=item B<arch>

A restrição de arquitectura do campo B<Architecture> do pacote binário, com espaços convertidos para ‘,’.

=item B<profile>

A fórmula de restrição do perfil-de-compilação normalizada a partir do campo B<Build-Profile> do pacote binário, com os ORs convertidos para ‘+’ e os ANDs para ‘,’.

=item B<protected>

Se o pacote binário for protegido, esta chave irá conter o valor do campo B<Protected>, que é um valor B<yes>.

Suportado desde dpkg 1.20.1.

=item B<essential>

Se o pacote binário for essencial,esta chave ir+a conter o valor do campo B<Essential>, que é um valor B<yes>.

=back

=item B<Files:> (necessário, fraco)

=item B<Checksums-Sha1:> (necessário, fraco)

=item B<Checksums-Sha256:> (necessário, forte)

=item S< >I<checksum> I<size> I<filename>

Estes campos multi-linha contêm uma lista de ficheiros com um sumário de verificação e tamanho para cada um deles. Estes campos têm a mesma sintaxe e diferem apenas no algoritmo de checksum usado: MD5 para B<Files>, SHA-1 para B<Checksums-Sha1> e SHA-256 para B<Checksums-Sha256>.

A primeira linha do campo valor (a parte na mesma linha que tem o campo nome seguido de dois pontos) é sempre vazia. O conteúdo do campo é expressado como linhas de continuação, uma linha por ficheiro. Cada linha consiste do checksum, um espaço, o tamanho do ficheiro, um espaço, e o nome do ficheiro.

Estes campos listam todos os ficheiros que fazem o pacote fonte. A lista de ficheiros nestes campos tem de corresponder à lista de ficheiros nos outros campos relacionados.

B<Nota>: Os sumários de verificação MD5 e SHA-1são considerados fracos, e nunca devem ser assumidos como suficientes para verificação de segurança.

=back

=head1 BUGS

O campo B<Format> field conflui o formato para o próprio ficheiro B<.dsc> e o formato do pacote fonte extraído.

=head1 VEJA TAMBÉM

L<deb822(5)>, L<deb-src-control(5)>, L<deb-version(7)>, L<dpkg-source(1)>.


=head1 TRADUÇÃO

Américo Monteiro

Se encontrar algum erro na tradução deste documento, por favor comunique para
Américo Monteiro <a_monteiro@gmx.com>.
