
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NOME

deb-buildinfo - formato Debian de ficheiro de informação de compilação

=head1 RESUMO

I<filename>B<.buildinfo>

=head1 DESCRIÇÃO

Cada compilação de pacote fonte Debian pode gravar a informação de compilação num ficheiro de controle B<.buildinfo>, o qual contem um número de campos em formato L<deb822(5)>.

Cada campo começa com uma etiqueta, tal como B<Source> ou B<Binary> (insensível a maiúsculas/minúsculas), seguida de dois pontos, e do corpo do campo (sensível a maiúsculas/minúsculas a menos que declarado o contrário). Os campos são delimitados apenas pelas etiquetas (tags) dos campos. Por outras palavras, o campo de texto pode ter várias linhas de comprimento, mas as ferramentas de instalação irão geralmente juntar as linhas quando processam o corpo do campo (excepto no caso de campos multi-linha B<Binary-Only-Changes>, B<Installed-Build-Depends>, B<Environment>, B<Checksums-Md5>, B<Checksums-Sha1> e B<Checksums-Sha256>, ver abaixo).

Os dados de controle podem estar inclusos numa assinatura OpenPGP ASCII Armored, como especificado em RFC9580.

O nome do ficheiro B<.buildinfo> irá depender do tipo de compilação e será tão específico quanto necessário mas não mais; o nome irá ser:

=over 

=item I<source-name>B<_>I<binary-version>B<_>I<arch>B<.buildinfo>

para uma compilação que inclua B<any>

=item I<source-name>B<_>I<binary-version>B<_>B<all.buildinfo>

caso contrário para uma compilação que inclua B<all>

=item I<source-name>B<_>I<source-version>B<_>B<source.buildinfo>

caso contrário para uma compilação que inclua B<source>

=back

=head1 CAMPOS

=over 

=item B<Format:> I<format-version> (necessário)

O valor deste campo declara a versão de formato do ficheiro. A sintaxe do valor do campo é um número de versão com um componente maior ou menor. Alterações incompatíveis com versões anteriores ao formato irão colidir com a versão maior, e alterações compatíveis com versões anteriores (tais como adições de campos) irão colidir com a versão menor. A versão de formato actual é B<1.0>.

=item B<Source:> I<source-name> [B<(>I<source-version>B<)>] (necessário)

O nome do pacote fonte. Se a versão fonte diferir da versão binário, então o I<source-name> será seguido por um I<source-version> em parênteses. Isto pode acontecer quando a compilação é para envio de não-maintainer apenas-binário.

=item B<Binary:> I<binary-package-list> (necessário em contexto)

Este campo dobrado é uma lista de pacotes binários compilados separados por espaços. Se a compilação for de "apenas-fonte", então o campo é omitido (desde dpkg 1.20.0).

=item B<Architecture:> I<arch-list> (necessário)

Este campo separado por espaços lista as arquitecturas de todos os ficheiros actualmente a serem compilados. Arquitecturas comuns são B<amd64>, B<armel>, B<i386>, etc. Note que o valor B<all> destina-se a pacotes que são independentes da arquitectura. Se o pacote fonte for também compilado, está também presente a entrada especial B<source>. Wildcards de arquitectura nunca devem estar presentes na lista.

=item B<Version:>I< string-de-versão> (obrigatório)

Tipicamente, isto é o número de versão do pacote original seja em que formato o autor do programa usa. Pode também incluir um número de revisão Debian (para pacotes não-nativos). O formato exacto e algoritmo de ordenação estão descritos em L<deb-version(7)>.

=item B<Binary-Only-Changes:>

=item S< >I<changelog-entry>

Este campo multi-linha contem o texto concatenado da entrada changelog para um envio de não-maintainer apenas binário (binNMU) se esse for o caso. Para tornar isto numa entrada multi-linha válida as linhas vazias são substituídas com um único ponto final (‘.’) e todas as linhas são indentadas por um caractere de espaço. O conteúdo exacto depende do formato do changelog.

=item B<Checksums-Md5:> (necessário, fraco)

=item B<Checksums-Sha1:> (necessário, fraco)

=item B<Checksums-Sha256:> (necessário, forte)

=item S< >I<checksum> I<size> I<filename>

Estes campos multi-linha contêm uma lista de ficheiros com um sumário de verificação e tamanho para cada um deles. Estes campos têm a mesma sintaxe e diferem apenas no algoritmo de checksum usado: MD5 para B<Checksums-Md5>, SHA-1 para B<Checksums-Sha1> e SHA-256 para B<Checksums-Sha256>.

B<Nota>: Os sumários de verificação MD5 e SHA-1são considerados fracos, e nunca devem ser assumidos como suficientes para verificação de segurança.

A primeira linha do campo valor (a parte na mesma linha que tem o campo nome seguido de dois pontos) é sempre vazia. O conteúdo do campo é expressado como linhas de continuação, uma linha por ficheiro. Cada linha consiste de entradas separadas por espaços que descrevem o ficheiro: o sumário de verificação (checksum), o tamanho do ficheiro, e o nome do ficheiro.

Estes campos listam todos os ficheiros que fazem a compilação.

=item B<Build-Origin:> I<name>

O nome da distribuição de onde este pacote originou.

=item B<Build-Architecture:> I<arch> (necessário)

A arquitectura Debian para a instalação dos pacotes que estão a ser compilados. Arquitecturas comuns são B<amd64>, B<armel>, B<i386>, etc.

=item B<Build-Date:> I<build-date>

A data em que o pacote foi compilado. Tem de estar no mesmo formato que a data duma entrada L<deb-changelog(5)>.

=item B<Build-Kernel-Version:> I<build-kernel-version>

O lançamento e versão (num formato não especificado) do kernel que corre no sistema de compilação. Este campo só vai estar presente se o compilador o tiver explicitamente requerido, para evitar fugir informação possivelmente sensível.

=item B<Build-Path:> I<build-path>

O caminho de compilação absoluto, que corresponde à árvore fonte desempacotada. Este campo apenas vai estar presente se o fornecedor o permitiu via algum padrão de correspondência para evitar denunciar informação possivelmente sensível.

Em Debian e derivados apenas os caminhos de compilação começados com I</build/> irão emitir este campo.

=item B<Build-Tainted-By:>

=item S< >I<taint-reason-list>

Este campo dobrado contem uma lista separada por espaços de etiquetas de razão não-exaustiva (formadas por caracteres alfanuméricos e traços) as quais identificam porque a compilação actual foi contaminada (desde dpkg 1.19.5).

Em Debian e derivados as seguintes etiquetas de razão podem ser emitidas:

=over 

=item B<usr-local-has-configs>

O sistema tem ficheiros de configuração sob I</usr/local/etc>.

=item B<usr-local-has-includes>

O sistema tem ficheiros cabeçalho sob I</usr/local/include>.

=item B<usr-local-has-programs>

O sistema tem programas sob I</usr/local/bin> ou I</usr/local/sbin>.

=item B<usr-local-has-libraries>

O sistema tem bibliotecas, sejam estáticas ou partilhadas sob I</usr/local/lib>.

=item B<can-execute-cross-built-programs>

O sistema pode executar programas de compilação cruzada, seja diretamente ou via algum tipo de emulação.

Desde dpkg 1.21.10.

=back

=item B<Installed-Build-Depends:> (necessário)

=item S< >I<package-list>

A lista de pacotes instalados e configurados que podem afectar o processo de compilação do pacote.

A lista consiste do nome de cada pacote, opcionalmente tem a qualificação da arquitectura para outras arquitecturas, com uma restrição de versão exacta, separados por vírgulas.

A lista inclui todos os pacotes essenciais, os pacotes listados em B<Build-Depends>, B<Build-Depends-Arch>, campos de controle de fonte B<Build-Depends-Indep>, quaisquer dependências de compilação específicas do fornecedor, e todas as suas dependências recursivas. Em Debian e derivados a dependência embutida é B<build-essential>.

Para as dependências que venham de campos de controle da fonte, todas as alternativas a dependências e todos os fornecedores de pacotes virtuais de quais se depende serão incluídos.

=item B<Environment:>

=item S< >I<variable-list>

A lista de variáveis de ambiente que se sabe afectarem o processo de compilação do pacote, com cada variável de ambiente seguida por um sinal igual (‘=’)  e o valor da variável citando entre aspas (‘"’), e barras escapadas (‘\\’).

=back

=head1 VEJA TAMBÉM

L<deb822(5)>, L<deb-changes(5)>, L<deb-version(7)>, L<dpkg-genbuildinfo(1)>.


=head1 TRADUÇÃO

Américo Monteiro

Se encontrar algum erro na tradução deste documento, por favor comunique para
Américo Monteiro <a_monteiro@gmx.com>.
