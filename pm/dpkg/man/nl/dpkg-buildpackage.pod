
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAAM

dpkg-buildpackage - binaire of broncodepakketten bouwen uit de broncode

=head1 OVERZICHT

B<dpkg-buildpackage> [I<optie>...] [B<-->] [I<bestandsnaam>.dsc|I<map>]

=head1 BESCHRIJVING

B<dpkg-buildpackage> is een programma dat het proces van het bouwen van een Debian pakket automatiseert.

De argumenten I<bestandsnaam>.dsc en I<map> worden ondersteund sinds dpkg 1.22.7. Hun semantiek is experimenteel.

Het bestaat uit de volgende stappen:

=over 

=item B<1.>

Het voert de uitbreiding (hook) B<preinit> uit voordat een bronbestand wordt gelezen. Als een B<.dsc>-bestand werd opgegeven, pakt het dit opnieuw uit en gaat het naar de map ervan. Als een I<map> werd opgegeven, wordt er naar die map gegaan. Anders wordt verwacht dat de huidige map de broncodeboom bevat. Het bereidt de bouwomgeving voor door verschillende omgevingsvariabelen in te stellen(zie B<OMGEVING>), voert de uitbreiding B<init> uit en roept B<dpkg-source --before-build> aan (tenzij B<-T> of B<--target> gebruikt werd).

=item B<2.>

Het controleert of voldaan is aan de bouw-vereisten en de bouw-tegenstrijdigheden (tenzij B<-d> of B<--no-check-builddeps> opgegeven werd).

=item B<3.>

Indien met de optie B<-T> of B<--target> een of meer specifieke doelen geselecteerd werden, roept het deze doelen aan en stopt dan. Anders voert het de uitbreiding (hook) B<preclean> uit en roept het B<fakeroot debian/rules clean> aan om de bouwboom zuiver te maken (tenzij B<-nc> of B<--no-pre-clean> opgegeven werd).

=item B<4.>

Het voert de uitbreiding (hook) B<source> uit en roept B<dpkg-source -b> aan om het broncodepakket te genereren (indien het bouwen van B<source> aangevraagd werd met B<--build> of gelijkwaardige opties en als geen B<.dsc> werd opgegeven).

=item B<5.>

Het voert de uitbreiding (hook) B<build> uit en roept B<debian/rules> I<build-target> aan. Het voert vervolgens de uitbreiding (hook) B<binary> uit, gevolgd door B<fakeroot debian/rules> I<binary-target> (tenzij enkel de bouw van het broncodepakket gevraagd werd met B<--build=source> of gelijkwaardige opties). Merk op dat I<build-target> en I<binary-target> ofwel B<build> en B<binary> zijn (de standaardsituatie, of indien een bouw van het type B<any> en B<all> aangevraagd werd met B<--build> of gelijkwaardige opties), ofwel B<build-arch> en B<binary-arch> (indien een bouw van het type B<any> maar niet B<all> aangevraagd werd met B<--build> of gelijkwaardige opties), ofwel B<build-indep> en B<binary-indep> (indien een bouw van het type B<all> maar niet B<any> aangevraagd werd met B<--build> of gelijkwaardige opties).

=item B<6.>

Het voert de uitbreiding (hook) B<buildinfo> uit en roept B<dpkg-genbuildinfo> aan om een bestand B<.buildinfo> aan te maken. Verschillende opties van B<dpkg-buildpackage> worden aan B<dpkg-genbuildinfo> overgemaakt. Als er een I<.dsc> werd opgegeven, wordt hiernaar verwezen in het gegenereerde B<.buildinfo>-bestand, zodat we de herkomst van de broncodeboom kunnen vaststellen.

=item B<7.>

Het voert de uitbreiding (hook) B<changes> uit en roept B<dpkg-genchanges> aan om een B<.changes>-bestand te genereren. De naam van het bestand B<.changes> zal afhangen van het type bouw en zal zo specifiek zijn als nodig, maar niet meer dan dat; de naam zal als volgt zijn:

=over 

=item I<broncode-naam>B<_>I<binaire-versie>B<_>I<arch>B<.changes>

voor een bouw die B<any> bevat

=item I<broncode-naam>B<_>I<binaire-versie>B<_>B<all.changes>

voor een bouw die daarentegen B<all> bevat

=item I<broncode-naam>B<_>I<broncode-versie>B<_>B<source.changes>.

voor een bouw die daarentegen B<source> bevat

=back

Veel B<dpkg-buildpackage>-opties worden doorgestuurd naar B<dpkg-genchanges>.

=item B<8.>

Het voert de uitbreiding (hook) B<postclean> uit en als B<-tc> of B<--post-clean> werd opgegeven zal het nogmaals B<fakeroot debian/rules clean> aanroepen.

=item B<9.>

Het roept B<dpkg-source --after-build> aan.

=item B<10.>

Het voert de uitbreiding (hook) B<check> uit en roept een pakketcontroleprogramma aan voor nazicht van het bestand B<.changes> (indien er in B<DEB_CHECK_COMMAND> of met B<--check-command> een commando opgegeven werd).

=item B<11.>

Het voert de uitbreiding (hook) B<sign> uit en ondertekent met behulp van de OpenPGP-backend (voor zover het geen bouw van het type UNRELEASED is of tenzij B<--no-sign> werd opgegeven) voor het ondertekenen van het bestand B<.dsc> (als dat bestaat, tenzij B<-us> of B<--unsigned-source> opgegeven werden), van het bestand B<.buildinfo> (tenzij B<-ui>, B<--unsigned-buildinfo>, B<-uc> of B<--unsigned-changes> opgegeven werden) en van het bestand B<.changes> (tenzij B<-uc> of B<--unsigned-changes> opgegeven werden).

=item B<12.>

Als een B<.dsc>-bestand werd opgegeven, wordt de uitgepakte broncodemap verwijderd.

=item B<13.>

Het voert de uitbreiding (hook) B<done> uit.

=back

=head1 OPTIES

Alle opties kunnen zowel opgegeven worden aan de commandoregel als in de systeem- en gebruikersconfiguratiebestanden voor B<dpkg-buildpackage>. Elke regel in het configuratiebestand is ofwel een optie (exact hetzelfde als de commandoregeloptie, maar zonder de verbindingsstreepjes aan het begin) of commentaar (als hij begint met een ‘B<#>’).

=over 

=item B<--build=>I<type>

Geeft het bouw-I<type> op vanuit een lijst van door komma's gescheiden componenten (sinds dpkg 1.18.5). Alle opgegeven componenten worden gecombineerd om het enige te gebruiken bouwtype uit te kiezen, wat inhoudt dat één enkele compilatie wordt uitgevoerd met één enkel F<.changes>-bestand. Wordt doorgegeven aan B<dpkg-genchanges>.

De waarden die gebruikt mogen worden zijn:

=over 

=item B<source>

Bouwt het broncodepakket.

B<Opmerking:> Indien u deze waarde op zichzelf staand gebruikt en indien uw enige bedoeling is om het bronpakket gewoon (opnieuw) te bouwen vanuit een zuivere broncodeboom, dan is het altijd beter om rechtstreeks B<dpkg-source> te gebruiken, aangezien dat niet vereist dat eventuele bouwvereisten geïnstalleerd worden, welke anders nodig zijn om in staat te zijn het doelwit B<clean> te aanroepen.

=item B<any>

Bouwt de architectuurspecifieke binaire pakketten.

=item B<all>

Bouwt de architectuuronafhankelijke binaire pakketten.

=item B<binary>

Bouwt de architectuurspecifieke en de architectuuronafhankelijke binaire pakketten. Dit is een alias voor B<any,all>.

=item B<full>

Bouwt alles. Dit is een alias voor B<source,any,all> en identiek aan de standaardsituatie wanneer geen bouwoptie opgegeven werd..

=back

=item B<-g>

Het equivalent van B<--build=source,all> (sinds dpkg 1.17.11).

=item B<-G>

Het equivalent van B<--build=source,any> (sinds dpkg 1.17.11).

=item B<-b>

Het equivalent van B<--build=binary> of B<--build=any,all>.

=item B<-B>

Het equivalent van B<--build=any>.

=item B<-A>

Het equivalent van B<--build=all>.

=item B<-S>

Het equivalent van B<--build=source>.

=item B<-F>

Het equivalent van B<--build=full>, B<--build=source,binary> of B<--build=source,any,all> (sinds dpkg 1.15.8).

=item B<--target=>I<target>[,...]

=item B<--target> I<doel>[,...]

=item B<-T>, B<--rules-target=>I<target>[,...]

Roept na het opzetten van de bouwomgeving per opgegeven target eenmaal B<debian/rules> I<doel> aan en stopt het proces van het bouwen van het pakket hier (sinds dpkg 1.15.0, de lange optie sinds dpkg 1.18.8, de ondersteuning voor meerdere targets sinds dpkg 1.18.16). Indien ook B<--as-root> opgegeven werd, dan wordt het commando als systeembeheerder uitgevoerd (zie B<--root-command>). Merk op dat gekende targets die verplicht als systeembeheerder moeten uitgevoerd worden, deze optie niet nodig hebben (d.w.z. de targets B<clean>, B<binary>, B<binary-arch> en B<binary-indep>).

=item B<--as-root>

Enkel zinvol in samenhang met B<--target> (sinds dpkg 1.15.0). Vereist dat het doel met systeembeheerdersrechten uitgevoerd wordt.

=item B<-si>

=item B<-sa>

=item B<-sd>

=item B<-v>I<versie>

=item B<-C>I<beschrijving-van-de-wijzigingen>

=item B<-m>I<adres-van-de-beheerder>

=item B<-e>I<adres-van-de-beheerder>

Wordt ongewijzigd doorgegeven aan B<dpkg-genchanges>. Zie de man-pagina ervan.

=item B<--build-by=>I<adres-van-de-beheerder>

=item B<--source--by=>I<adres-van-de-beheerder> (sinds dpkg 1.21.10)

Doorgeven als B<-m> aan B<dpkg-genchanges>. Zie de man-pagina ervan.

=item B<--release-by=>I<adres-van-de-beheerder>

=item B<--changed-by=>I<adres-van-de-beheerder> (sinds dpkg 1.21.10)

Doorgeven als B<-e> aan B<dpkg-genchanges>. Zie de man-pagina ervan.

=item B<-a>, B<--host-arch> I<architectuur>

De Debian-architectuur waarvoor we bouwen specificeren (lange optie sinds dpkg 1.17.17). De architectuur van de machine waarop we bouwen, wordt automatisch vastgesteld en ze wordt ook als standaard genomen voor de hostmachine.

=item B<-t>, B<--host-type> I<gnu-systeemtype>

Het GNU-systeemtype waarvoor we bouwen specificeren (lange optie sinds dpkg 1.17.17). Het kan gebruikt worden in de plaats van B<--host-arch> of als een aanvulling om het standaard GNU-systeemtype voor de Debian-architectuur van de host aan te passen.

=item B<--target-arch> I<architectuur>

De Debian-architectuur specificeren waarvoor de gebouwde programma's gebouwd zullen worden (sinds dpkg 1.17.17). De standaardwaarde is de hostmachine.

=item B<--target-type> I<gnu-systeemtype>

Het GNU-systeemtype specificeren waarvoor de gebouwde programma's gebouwd zullen worden (sinds dpkg 1.17.17). Het kan gebruikt worden in de plaats van B<--target-arch> of als een aanvulling om het standaard GNU-systeemtype voor de Debian doelarchitectuur aan te passen.

=item B<-P>, B<--build-profiles=>I<profiel>[B<,>...]

Het/de profiel(en) welke we bouwen specificeren in een lijst met een komma als scheidingsteken (sinds dpkg 1.17.2, de lange optie sinds dpkg 1.18.8). Het standaardgedrag is om niet voor een specifiek profiel te bouwen. Stelt ze ook in (als een lijst met een spatie als scheidingsteken) als de omgevingsvariabele B<DEB_BUILD_PROFILES>, hetgeen bijvoorbeeld toelaat aan B<debian/rules>-bestanden om gebruik te maken van deze informatie bij voorwaardelijke bouwoperaties.

=item B<-j>, B<--jobs>[=I<taken>|B<auto>]

Geeft het aantal taken aan dat gelijktijdig mag worden uitgevoerd (sinds dpkg 1.14.7, lange optie sinds dpkg 1.18.8). Waarbij het aantal taken overeenkomt met het aantal online-processors indien B<auto> werd opgegeven (sinds dpkg 1.17.10), of een onbeperkt aantal indien I<taken> niet werd opgegeven. Het standaardgedrag is B<auto> (sinds dpkg 1.18.11) in niet-opgelegde modus (sinds dpkg 1.21.10), en als zodanig is het altijd veiliger om dit te gebruiken voor elk pakket, inclusief voor pakketten die niet op een veilige manier parallel kunnen worden gebouwd. Als u het aantal taken instelt op B<1>, wordt de seriële uitvoering hersteld.

Het voegt B<parallel=>I<taken> of B<parallel> toe aan de omgevingsvariabele B<DEB_BUILD_OPTIONS>, hetgeen debian/rules-bestanden in staat stelt van deze informatie gebruik te maken voor eigen doeleinden (opt-in modus genaamd). De waarde I<taken> heeft voorrang op de optie B<parallel=>I<taken> of B<parallel> in de omgevingsvariabele B<DEB_BUILD_OPTIONS>. Merk op dat de waarde B<auto> zal vervangen worden door het effectieve aantal momenteel actieve processoren en ze dus als zodanig naar geen enkel onderliggend proces doorgegeven zal worden. Indien het aantal beschikbare online-processoren niet afgeleid kan worden, dan zal de code terugvallen op het gebruiken van seriële uitvoering (sinds dpkg 1.18.15), hoewel dit enkel zou mogen gebeuren op exotische en niet-ondersteunde systemen.

=item B<-J>, B<--jobs-try>[=I<taken>|B<auto>]

Deze optie (sinds dpkg 1.18.2, lange optie sinds dpkg 1.18.8) is gelijkwaardig aan de optie B<-j> hierboven.

Aangezien het gedrag van B<-j> in dpkg 1.21.10 veranderde naar de opt-in modus, kunt u in plaats daarvan deze optie gebruiken als u over de verschillende uitgaven van dpkg heen eenzelfde betekenis moet kunnen garanderen.

=item B<--jobs-force>[=I<taken>|B<auto>]

Deze optie (sinds dpkg 1.21.10) is gelijkwaardig aan de optie B<--jobs> behalve dat ze de opgelegde parallelle modus zal activeren door de optie B<-j> voor B<make> met het berekende aantal parallelle taken toe te voegen aan de omgevingsvariabele B<MAKEFLAGS>.

Dit zou ertoe moeten leiden dat alle volgende aanroepen van make die optie overerven, waardoor de parallelle instelling voor het verpakken (en mogelijk voor het bovenstroomse bouwsysteem als dat L<make(1)> gebruikt) wordt opgelegd, ongeacht hun ondersteuning voor een parallelle bouw, wat bouwfouten zou kunnen veroorzaken.

Opmerking: elke Makefile die niet parallel-aangepast is, moet als een fouten bevattende Makefile beschouwd worden. Deze zouden ofwel parallel-aangepast moeten gemaakt worden of als niet veilig gemarkeerd worden met het target L<make(1)> B<.NOTPARALLEL>.

=item B<-D>, B<--check-builddeps>

Bouwvereisten en tegenstrijdigheden controleren en afbreken als er niet aan voldaan is (de lange optie sinds dpkg 1.18.8). Dit is het standaardgedrag.

=item B<-d>, B<--no-check-builddeps>

Bouwvereisten en tegenstrijdigheden niet controleren (de lange optie sinds dpkg 1.18.8).

=item B<--ignore-builtin-builddeps>

Ingebouwde bouwvereisten en tegenstrijdigheden niet controleren (sinds dpkg 1.18.2). Dit zijn de distributiespecifieke impliciete bouwvereisten die gewoonlijk noodzakelijk zijn in een bouwomgeving, de zogenaamde set van pakketten van het type Build-Essential.

=item B<--rules-requires-root>

Het veld B<Rules-Requires-Root> niet honoreren; er wordt teruggevallen op zijn verouderde standaardwaarde B<binary-targets> (since dpkg 1.19.1).

=item B<-nc>, B<--no-pre-clean>

Voor het bouwen de broncodeboom niet opschonen (de lange optie sinds dpkg 1.18.8). Impliceert B<-b> indien geen van de opties B<-F>, B<-g>, B<-G>, B<-B>, B<-A> of B<-S> gekozen werd. Gecombineerd met B<-S> impliceert dit B<-d> (sinds dpkg 1.18.0).

=item B<--pre-clean>

Voor het bouwen de broncodeboom opschonen (sinds dpkg 1.18.8). Dit is het standaardgedrag.

=item B<-tc>, B<--post-clean>

De broncodeboom opschonen (met I<commando-om-root-te-worden> B<debian/rules clean>) nadat het pakket gebouwd werd (de lange optie sinds dpkg 1.18.8).

=item B<--no-post-clean>

De broncodeboom niet opschonen na het bouwen van het pakket (sinds dpkg 1.19.1). Dit is het standaardgedrag.

=item B<--sanitize-env>

De bouwomgeving saneren (sinds dpkg 1.20.0). Dit houdt het verwijderen of opnieuw instellen in van omgevingsvariabelen, van umask en van eventuele andere procesattributen welke anders de bouw van pakketten negatief zouden kunnen beïnvloeden. Omdat het officiële startpunt voor het bouwen van pakketten B<debian/rules> is, kunnen pakketten er niet op vertrouwen dat deze instellingen aanwezig zijn en moeten ze dus werken indien dat niet het geval is. Wat gesaneerd moet worden is leverancierspecifiek.

=item B<-r>, B<--root-command=>I<commando-om-root-te-worden>

Wanneer B<dpkg-buildpackage> een deel van het bouwproces in de hoedanigheid van root (systeembeheerder) moet uitvoeren, laat het het commando dat het uitvoert voorafgaan door I<commando-om-root-te-worden> indien er een opgegeven werd (de lange optie sinds dpkg 1.18.8). Anders, als er geen opgegeven werd, wordt standaard B<fakeroot> gebruikt als het beschikbaar is. I<commando-om-root-te-worden> moet beginnen met de naam van een programma in het B<PATH> en krijgt als argumenten de naam van het echte commando dat uitgevoerd moet worden en de argumenten die het moet krijgen. I<commando-om-root-te-worden> kan parameters bevatten (ze moeten met spaties van elkaar gescheiden worden) maar geen shell-metatekens. Doorgaans is I<commando-om-root-te-worden> B<fakeroot>, B<sudo>, B<super> of B<really>. B<su> is niet geschikt, aangezien het enkel de shell van de gebruiker kan aanroepen met B<-c> in plaats van afzonderlijke argumenten door te geven aan het uit te voeren commando.

=item B<-R>, B<--rules-file=>I<rules-bestand>

Een Debian-pakket bouwen houdt meestal het aanroepen van B<debian/rules> in als een commando met verschillende standaardparameters (sinds dpkg 1.14.17, de lange optie sinds dpkg 1.18.8). Met deze optie is het mogelijk om een andere programma-aanroep te gebruiken om het pakket te bouwen (ze kan parameters bevatten die onderling door spaties gescheiden worden). Anderzijds kan de optie ook gebruikt worden om het standaard rules-bestand uit te voeren met een ander make-programma (bijvoorbeeld door B</usr/local/bin/make -f debian/rules> te gebruiken als I<rules-bestand>).

=item B<--check-command=>I<controlecommando>

Commando dat gebruikt wordt om het bestand B<.changes> zelf en eventuele gebouwde artefacten waarnaar in het bestand verwezen wordt, te controleren (sinds dpkg 1.17.6). Het commando moet als argument de padnaam van B<.changes> krijgen. Gewoonlijk is dit commando B<lintian>.

=item B<--check-option=>I<optie>

Optie I<optie> doorgeven aan het I<controlecommando> dat gespecificeerd werd met B<DEB_CHECK_COMMAND> of met B<--check-command> (sinds dpkg 1.17.6). Kan meermaals gebruikt worden.

=item B<--hook->I<hook-naam>B<=>I<hook-commando>

Stelt de opgegeven shell-code I<hook-commando> in als de uitbreiding (hook) I<hook-naam>, die zal uitgevoerd worden op de momenten die in de uitvoeringsstappen gepreciseerd worden (sinds dpkg 1.17.6). De uitbreidingen (hooks) zullen steeds uitgevoerd worden, zelfs als de volgende actie niet uitgevoerd wordt (met uitzondering voor de uitbreiding (hook) B<binary>). Alle uitbreidingen (hooks) zullen uitgevoerd worden in de map van de uitgepakte broncode.

Sommige uitbreidingen (hooks) kunnen aanvullende informatie ontvangen via omgevingsvariabelen (sinds dpkg 1.22.0). Alle hooks krijgen hun hooknaam in de omgevingsvariabele B<DPKG_BUILDPACKAGE_HOOK_NAME> (sinds dpkg 1.22.0).

B<Opmerking:> uitbreidingen (hooks) kunnen het bouwproces beïnvloeden en leiden tot het mislukken van de bouw als hun commando's falen. Wees dus alert voor onbedoelde consequenties.

Momenteel worden de volgende I<hook-namen> ondersteund:

=over 

=item B<preinit>

=item B<init>

=item B<preclean>

=item B<source>

Haalt B<DPKG_BUILDPACKAGE_HOOK_SOURCE_OPTIONS> op met de door spaties gescheiden lijsten met opties die worden doorgegeven aan de B<dpkg-source>-aanroep.

=item B<build>

Haalt B<DPKG_BUILDPACKAGE_HOOK_BUILD_TARGET> op met de naam van het aangeroepen bouwdoel uit B<debian/rules>. Vóór dpkg 1.22.7 werd de variabele alleen ingesteld als het doel werd aangeroepen.

=item B<binary>

Haalt B<DPKG_BUILDPACKAGE_HOOK_BINARY_TARGET> op met de naam van het aangeroepen binaire doel uit B<debian/rules>, maar alleen als het wordt aangeroepen.

=item B<buildinfo>

Haalt B<DPKG_BUILDPACKAGE_HOOK_BUILDINFO_OPTIONS> op met de door spaties gescheiden lijsten met opties die worden doorgegeven aan de B<dpkg-genbuildinfo>-aanroep.

=item B<changes>

Haalt B<DPKG_BUILDPACKAGE_HOOK_CHANGES_OPTIONS> op met de door spaties gescheiden lijsten met opties die worden doorgegeven aan de B<dpkg-genchanges>-aanroep.

=item B<postclean>

=item B<check>

Haalt B<DPKG_BUILDPACKAGE_HOOK_CHECK_OPTIONS> op met de door spaties gescheiden lijsten met opties die worden doorgegeven aan het aangeroepen controlecommando.

=item B<sign>

=item B<done>

=back

Het I<hook-commando> ondersteunt de volgende substitutie-indelingstekenreeksen, die er voorafgaand aan de uitvoering op toegepast zullen worden:

=over 

=item B<%%>

Eén enkel %-teken.

=item B<%a>

Een booleaanse waarde (0 of 1), die aangeeft of de volgende actie uitgevoerd wordt of niet.

=item B<%p>

De naam van het broncodepakket.

=item B<%v>

De versie van het broncodepakket.

=item B<%s>

De versie van het broncodepakket (zonder de epoch).

=item B<%u>

Het bovenstroomse versienummer (toeleveraarsversie).

=back

=item B<--buildinfo-file=>I<bestandsnaam>

De I<bestandsnaam> instellen voor het gegenereerde B<.buildinfo>-bestand (sinds dpkg 1.21.0).

=item B<--buildinfo-option=>I<optie>

Optie I<optie> doorgeven aan B<dpkg-genbuildinfo> (sinds dpkg 1.18.11). Kan meermaals gebruikt worden.

=item B<--sign-backend=>I<ondertekeningsbackend>

Een OpenPGP-backendinterface opgeven welke gebruikt moet worden bij het aanroepen van het I<ondertekeningscommando> (sinds dpkg 1.21.10).

De standaardinstelling is B<auto>, waarbij de beste beschikbare backend wordt gebruikt. De specifieke ondersteunde OpenPGP-backends in volgorde van voorkeur zijn:

=over 4

=item B<sop>

(elke conforme Stateless OpenPGP-implementatie)

=item B<sq>

(van Sequoia-PGP)

=item B<gpg>

(van GnuPG)

=back

=item B<-p>, B<--sign-command=>I<ondertekeningscommando>

Als B<dpkg-buildpackage> een OpenPGP backend-commando moet uitvoeren om een controlebestand (B<.dsc>) van de broncode, een B<.buildinfo>-bestand of een B<.changes>-bestand te ondertekenen, zal het I<ondertekeningscommando> uitvoeren (en indien nodig daarbij het B<PATH> doorzoeken) in plaats van het standaard of automatisch gedetecteerde backend-commando (de lange optie sinds dpkg 1.18.8). Aan I<ondertekeningscommando> zullen alle backend-specifieke argumenten meegegeven worden volgens de geselecteerde B<--sign-backend>. I<ondertekeningscommando> mag geen spaties bevatten en geen andere shell-metatekens.

=item B<-k>, B<--sign-keyid=>I<sleutel-id>

=item B<--sign-key=>I<sleutel-id>

Een OpenPGP sleutel-ID (hetzij een vingerafdruk of een gebruikers-ID) opgeven voor de geheime sleutel die moet worden gebruikt bij het ondertekenen van pakketten (B<--sign-key> sinds dpkg 1.18.8, B<--sign-keyid> sinds dpkg 1.21.10).

=item B<--sign-keyfile=>I<sleutel-bestand>

Een OpenPGP I<sleutel-bestand> opgeven dat de geheime sleutel bevat die moet worden gebruikt bij het ondertekenen van pakketten (sinds dpkg 1.21.10).

B<Opmerking>: uit veiligheidsoverwegingen kan het I<sleutel-bestand> best met een wachtwoord vergrendeld worden gehouden.

=item B<-us>, B<--unsigned-source>

Het broncodepakket niet ondertekenen (de lange optie sinds dpkg 1.18.8).

=item B<-ui>, B<--unsigned-buildinfo>

Het bestand B<.buildinfo> niet ondertekenen (sinds dpkg 1.18.19).

=item B<-uc>, B<--unsigned-changes>

De bestanden B<.buildinfo> en B<.changes> niet ondertekenen (de lange optie sinds dpkg 1.18.8).

=item B<--no-sign>

Geen enkel bestand ondertekenen; dit omvat het broncodepakket, het bestand B<.buildinfo> en het bestand B<.changes> (sinds dpkg 1.18.20).

=item B<--force-sign>

Het ondertekenen van de resulterende bestanden afdwingen (sinds dpkg 1.17.0), ongeacht B<-us>, B<--unsigned-source>, B<-ui>, B<--unsigned-buildinfo>, B<-uc>, B<--unsigned-changes> of overige interne heuristiek.

=item B<-sn>

=item B<-ss>

=item B<-sA>

=item B<-sk>

=item B<-su>

=item B<-sr>

=item B<-sK>

=item B<-sU>

=item B<-sR>

=item B<-i>, B<--diff-ignore>[=I<regex>]

=item B<-I>, B<--tar-ignore>[=I<patroon>]

=item B<-z>, B<--compression-level=>I<niveau>

=item B<-Z>, B<--compression=>I<compressor>

Wordt ongewijzigd doorgegeven aan B<dpkg-source>. Zie de man-pagina ervan.

=item B<--source-option=>I<optie>

Optie I<optie> doorgeven aan B<dpkg-source> (sinds dpkg 1.15.6). Kan meermaals gebruikt worden.

=item B<--changes-file=>I<bestandsnaam>

De I<bestandsnaam> instellen voor het gegenereerde B<.changes>-bestand (sinds dpkg 1.21.0).

=item B<--changes-option=>I<optie>

Optie I<optie> doorgeven aan B<dpkg-genchanges> (sinds dpkg 1.15.6). Kan meermaals gebruikt worden.

=item B<--admindir=>I<map>

=item B<--admindir> I<map>

Een andere locatie opgeven voor de database van B<dpkg> (sinds dpkg 1.14.0). De standaardlocatie is I<%ADMINDIR%>.

=item B<-?>, B<--help>

Info tonen over het gebruik en afsluiten.

=item B<--version>

De versie tonen en afsluiten.

=back

=head1 OMGEVING

=head2 Externe omgeving

=over 

=item B<DEB_CHECK_COMMAND>

Indien dit ingesteld werd, zal het gebruikt worden als het commando waarmee het bestand B<.changes> gecontroleerd wordt (sinds dpkg 1.17.6). De optie B<--check-command> heeft hierop voorrang.

=item B<DEB_SIGN_KEYID>

Indien dit ingesteld werd, zal het gebruikt worden om de bestanden B<.changes>, B<.buildinfo> en B<.dsc> te ondertekenen (sinds dpkg 1.17.2). De optie B<--sign-keyid> heeft hierop voorrang.

=item B<DEB_SIGN_KEYFILE>

Indien dit ingesteld werd, zal het gebruikt worden om de bestanden B<.changes>, B<.buildinfo> en B<.dsc> te ondertekenen (sinds dpkg 1.21.10). De optie B<--sign-key> heeft hierop voorrang.

=item B<DEB_BUILD_OPTIONS>

Indien dit ingesteld werd, zal het een door spaties gescheiden lijst met opties bevatten die het gedrag beïnvloeden van sommige dpkg-gereedschappen die betrokken zijn bij het bouwen van pakketten, en die het bouwproces van pakketten kunnen beïnvloeden als de code in F<debian/rules> deze opties erkent. Deze opties kunnen parameters hebben die direct na een gelijkheidsteken ('B<=>') worden opgegeven. Bij opties die meerdere parameters ondersteunen, worden deze niet gescheiden door spaties, omdat die gereserveerd zijn voor het scheiden van opties.

Hieronder volgen de opties die bekend zijn en worden ondersteund door dpkg-gereedschappen; andere opties die worden erkend door F<debian/rules> kunnen worden gedefinieerd door distributiespecifiek beleid.

=over 

=item B<parallel=>I<N>

In het verpakkingsproces kan men in het bestand F<debian/rules> deze optie gebruiken om het bouwproces zo in te stellen dat I<N> parallelle taken worden gebruikt. Deze optie wordt overschreven door de opties B<--jobs> en B<--jobs-force>.

=item B<nocheck>

B<dpkg-buildpackage> negeert de variabele B<DEB_CHECK_COMMAND>. In het verpakkingsproces wordt van F<debian/rules> niet verwacht dat het testsuites uitvoert tijdens het bouwen.

=item B<noopt>

Als F<debian/rules> B<dpkg-buildflags> aanroept om de bouwvlaggen in te stellen, dan zullen deze zo worden ingesteld dat er geen optimalisaties mogelijk zijn.

=item B<nostrip>

In het verpakkingsproces moet F<debian/rules> ervoor zorgen dat geen foutopsporingsinformatie wordt verwijderd van objecten. Als F<debian/rules> het make-fragment B<mk/buildtools.mk> bevat, zal de make-variabele B<STRIP> deze optie respecteren.

=item B<terse>

B<dpkg-buildpackage> zal de L<make(1)>-vlag B<--no-print-directory> toevoegen aan de omgevingsvariabele B<MAKEFLAGS>. In het verpakkingsproces moet F<debian/rules> de breedsprakigheid beperken, maar niet helemaal stil zijn.

=item B<hardening=>I<functie-spec>

=item B<reproducible=>I<functie-spec>

=item B<abi=>I<functie-spec>

=item B<future=>I<functie-spec>

=item B<qa=>I<functie-spec>

=item B<optimize=>I<functie-spec>

=item B<sanitize=>I<functie-spec>

Dit zijn functiegebieden die de bouwvlagfuncties regelen. Zie L<dpkg-buildflags(1)> voor verdere details.

=back

=item B<DEB_BUILD_PROFILES>

Indien dit ingesteld werd, zal het gebruikt worden als het/de actieve bouwprofiel(en) voor het pakket dat gebouw wordt (sinds dpkg 1.17.2). Het is een lijst van profielnamen die onderling door een spatie gescheiden zijn. De optie B<-P> heeft hierop voorrang.

=item B<DPKG_COLORS>

Stelt de kleurmodus in (sinds dpkg 1.18.5). Waarden die momenteel gebruikt mogen worden zijn: B<auto> (standaard), B<always> en B<never>.

=item B<DPKG_NLS>

Indien dit ingesteld is, zal het gebruikt worden om te beslissen over het activeren van moedertaalondersteuning, ook gekend als internationaliseringsondersteuning (of i18n) (sinds dpkg 1.19.0). Geldige waarden zijn: B<0> and B<1> (standaard).

=back

=head2 Interne omgeving

Zelfs al exporteert B<dpkg-buildpackage> sommige variabelen, toch mag B<debian/rules> er niet op rekenen dat ze aanwezig zijn en moet het in de plaats daarvan gebruik maken van de desbetreffende interface om de benodigde variabelen op te halen, aangezien dat bestand.het belangrijkste aanspreekpunt is voor het bouwen van pakketten en de op zichzelf staande uitvoering ervan ondersteund moet zijn.

=over 

=item B<DEB_BUILD_*>

=item B<DEB_HOST_*>

=item B<DEB_TARGET_*>

B<dpkg-architecture> wordt aangeroepen met de doorgegeven parameters B<-a> en B<-t>. Eventuele variabelen die zijn optie B<-s> als uitvoer geeft, worden in de bouwomgeving geïntegreerd.

=item B<DEB_RULES_REQUIRES_ROOT>

Deze variabele wordt ingesteld op de waarde die verkregen wordt uit het veld B<Rules-Requires-Root>, het niveau van dpkg-build-api of vanuit de commandoregel. Indien ze ingesteld is, zal ze een geldige waarde zijn voor het veld B<Rules-Requires-Root>. Ze wordt gebruikt om B<debian/rules> te informeren of de specificatie B<rootless-builds.txt> ondersteund wordt.

=item B<DEB_GAIN_ROOT_CMD>

Deze variabele wordt ingesteld op I<gain-root-command> wanneer het veld B<Rules-Requires-Root> ingesteld staat op een andere waarde dan B<no> of B<binary-targets>.

=item B<SOURCE_DATE_EPOCH>

Deze variabele wordt ingesteld op de Unix-tijd (timestamp) sinds het tijdstip (de epoch) van het laatste item in I<debian/changelog>, voor zover hij niet reeds gedefinieerd is.

=back

=head1 BESTANDEN

=over 

=item I<%PKGCONFDIR%/buildpackage.conf>

Configuratiebestand dat voor het hele systeem geldt

=item I<$XDG_CONFIG_HOME/dpkg/buildpackage.conf> of

=item I<$HOME/.config/dpkg/buildpackage.conf>

Configuratiebestand dat gebruikersafhankelijk is.

=back

=head1 OPMERKINGEN

=head2 Compileervlaggen worden niet langer geëxporteerd

Tussen dpkg 1.14.17 en 1.16.1 exporteerde B<dpkg-buildpackage> compileervlaggen (B<CFLAGS>, B<CXXFLAGS>, B<FFLAGS>, B<CPPFLAGS> en B<LDFLAGS>) met de waarden die door B<dpkg-buildflags> teruggegeven werden. Dit is niet langer het geval.

=head2 Standaard bouwtargets

B<dpkg-buildpackage> gebruikt de targets B<build-arch> en B<build-indep> sinds dpkg 1.16.2. Vóór dpkg 1.22.7 was er code om te proberen de ontbrekende targets te detecteren en terug te vallen op de B<build> target. Die targets zijn dus verplicht.

=head1 BEVEILIGING

Het bouwen van binaire of bronpakketten mag alleen worden uitgevoerd op basis van vertrouwde brongegevens.

=head1 BUGS

Het zou mogelijk moeten zijn om spaties en shell-metatekens en initiële argumenten op te geven voor I<commando-om-root-te-worden> en I<ondertekeningscommando>.

=head1 ZIE OOK

I<%PKGDOCDIR%/spec/rootless-builds.txt>, L<dpkg-source(1)>, L<dpkg-architecture(1)>, L<dpkg-buildflags(1)>, L<dpkg-genbuildinfo(1)>, L<dpkg-genchanges(1)>, L<fakeroot(1)>, L<lintian(1)>, L<https://datatracker.ietf.org/doc/draft-dkg-openpgp-stateless-cli/>, L<sq(1)>, L<gpg(1)>.

