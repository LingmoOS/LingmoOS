
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NOM

deb-substvars - Variables de substitution de source Debian

=head1 SYNOPSIS

B<debian/substvars>, B<debian/>I<paquet-binaire>B<.substvars>, variables

=head1 DESCRIPTION

Avant que B<dpkg-source>, B<dpkg-gencontrol> et B<dpkg-genchanges> n'écrivent leurs informations de contrôle (dans le fichier source de contrôle B<.dsc> pour B<dpkg-source> et sur la sortie standard pour B<dpkg-gencontrol> et B<dpkg-genchanges>), ils réalisent quelques substitutions de variables dans le fichier de sortie.

=head2 Syntaxe des variables

Une substitution de variable est de la forme : B<${>I<nom-variable>B<}>. Les noms de variable consistent en caractères alphanumériques (a-zA-Z0-9), traits d'union (-) et « deux points » (:) ; ils commencent par une lettre ou un chiffre et sont sensibles à la casse même si ils se réfèrent à d'autres entités qui préservent la casse. La substitution se fait répétitivement jusqu'à ce qu'il n'en reste aucune à faire ; le texte entier du champ après la substitution est réexaminé pour chercher d'autres substitutions.

=head2 Syntaxe des fichiers

Substitution variables can be specified in a file.  These files consist of lines of the form I<name>B<=>I<value>, I<name>B<?=>I<value>, or I<name>B<!=>I<value>.  The B<=> operator assigns a normal substitution variable, the B<?=> operator (since dpkg 1.21.8) assigns an optional substitution variable which will emit no warnings even if unused, and the B<!=> operator (since dpkg 1.22.7) assigns a required substitution variable which will error out if unused.  Trailing whitespace on each line, blank lines, and lines starting with a B<#> symbol (comments) are ignored.

=head2 Substitution

On peut définir les variables en utilisant l'option commune B<-V>. On peut aussi se servir du fichier B<debian/substvars> (ou tout autre fichier avec l'option commune B<-T>).

Quand toutes les substitutions ont été faites, chaque occurrence de la chaîne B<${}> (laquelle n'est pas une variable de substitution réelle) est remplacée par un signe B<$>. Cela peut être utilisé comme une séquence d'échappement telle que B<${}{>I<VARIABLE>B<}> qui finira sous la forme B<${>I<VARIABLE>B<}> sur la sortie.

Quand une variable est référencée mais n'est pas définie, cela produit un avertissement et une valeur vide est supposée.

Alors que le remplacement de variables est effectué sur tous les champs de contrôle, certains de ces champs sont utilisés et nécessaires pendant la construction alors même que la substitution n'a pas encore pu être effectuée. Cela explique pourquoi il n'est pas possible d'utiliser de variables dans les champs B<Package>, B<Source> et B<Architecture>.

La substitution de variables se fait dans le contenu des champs après leur analyse. En conséquence, si vous souhaitez qu'une variable soit remplacée sur plusieurs lignes, il n'est pas nécessaire de placer une espace après le retour à la ligne. Cela se fait implicitement quand le champ est affiché. Par exemple, si la variable B<${Description}> est positionnée sur « toto est truc.${Newline}toto est super. » et si vous avez le champ suivant :

 Description: application toto
  ${Description}
  .
  Encore du texte.

Le résultat final sera :

 Description: application toto
  toto est truc.
  toto est super.
  .
  Encore du texte.

=head2 Variables internes

En outre, les variables standard suivantes sont toujours disponibles :

=over 

=item B<Arch>

L'architecture de l'hôte actuel (c'est-à-dire l'architecture pour laquelle le paquet est construit, équivalent de B<DEB_HOST_ARCH>).

=item B<vendor:Nom>

The current vendor name (since dpkg 1.20.0).  This value comes from the B<Vendor> field for the current vendor's origin file, as L<dpkg-vendor(1)> would retrieve it.

=item B<vendor:Id>

L'identifiant du fabricant actuel (depuis dpkg 1.20.0). C'est simplement la variante en bas de casse de B<vendor:Name>.

=item B<source:Version>

Version du paquet source (depuis dpkg 1.13.19).

=item B<source:Upstream-Version>

La version amont du paquet source, avec éventuellement l'« epoch » de la version Debian (depuis dpkg 1.13.19).

=item B<binary:Version>

La version du paquet binaire (qui peut être différente de B<source:Version> dans un binNMU par exemple ; depuis dpkg 1.13.19).

=item B<Source-Version>

La version du paquet source, selon le fichier changelog. Cette variable est maintenant B<obsolète> et produit une erreur lors de son utilisation, car sa signification est distincte de sa fonction. Utilisez plutôt B<source:Version> ou B<binary:Version>.

=item B<source:Synopsis>

Le synopsis du paquet source, extrait du champ B<Description> du paragraphe source, s'il existe (depuis dpkg 1.19.0).

=item B<source:Extended-Description>

La description étendue du paquet source, extraite du champ B<Description> du paragraphe source, s'il existe (depuis dpkg 1.19.0).

=item B<Installed-Size>

La taille approximative de tous les fichiers installés du paquet. Cette valeur est copiée dans le champ adéquat du fichier « control » ; quand on fixe cette variable, cela modifie la valeur de ce champ. Quand elle est indéterminée, B<dpkg-gencontrol> calcule la valeur par défaut en additionnant la taille de chaque fichier ordinaire et lien symbolique arrondie en unité d'un kio utilisée et sur la base d'un kio pour n'importe quel type d'objet du système de fichiers, les liens physiques étant comptés une seule fois comme des fichiers ordinaires.

B<Note>: Take into account that this can only ever be an approximation, as the actual size used on the installed system will depend greatly on the filesystem used and its parameters, which might end up using either more or less space than the specified in this field.

=item B<Extra-Size>

L'espace disque supplémentaire utilisé pour l'installation du paquet. Quand on fixe cette variable, on ajoute sa valeur à la valeur de la variable B<Installed-Size> (qu'elle soit définie explicitement ou calculée par défaut) avant qu'elle soit copiée dans le champ B<Installed-Size> du fichier « control ».

=item B<S:>I<field-name>

The value of the source stanza field I<field-name> (which must be given in the canonical capitalization; since dpkg 1.18.11).  Setting these variables has no effect other than on places where they are expanded explicitly. These variables are only available when generating binary control files.

=item B<F:>I<field-name>

The value of the output field I<field-name> (which must be given in the canonical capitalization).  Setting these variables has no effect other than on places where they are expanded explicitly.

=item B<Format>

La version du format du fichier B<.changes> produite par la version des scripts construisant le source. Quand on détermine cette variable, le contenu du champ B<Format> dans le fichier B<.changes> est aussi modifié.

=item B<Newline>, B<Space>, B<Tab>

Ces variables contiennent chacune le caractère correspondant.

=item B<shlibs:>I<champ-dépendance>

Les variables déterminées de cette façon sont produites par B<dpkg-shlibdeps>.

=item B<dpkg:Upstream-Version>

La version amont de dpkg (depuis dpkg 1.13.19).

=item B<dpkg:Version>

La version complète de dpkg (depuis dpkg 1.13.19).

=back

=head1 FICHIERS

=over 

=item B<debian/substvars>

La liste des variables de substitution et leurs valeurs.

=back

=head1 VOIR AUSSI

L<dpkg(1)>, L<dpkg-vendor(1)>, L<dpkg-genchanges(1)>, L<dpkg-gencontrol(1)>, L<dpkg-shlibdeps(1)>, L<dpkg-source(1)>.


=head1 TRADUCTION

Ariel VARDI <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas François, 2006.
Veuillez signaler toute erreur à <debian-l10n-french@lists.debian.org>.
