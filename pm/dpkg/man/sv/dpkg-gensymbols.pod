
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAMN

dpkg-gensymbols - generera symbolfiler (information om delade bibliotek)

=head1 SYNOPS

B<dpkg-gensymbols> [I<flagga>...]

=head1 BESKRIVNING

B<dpkg-gensymbols> söker genom en temporärt byggträd (som standard debian/tmp) efter bibliotek och skapar en I<symbols>-fil som beskriver dem. Denna fil kommer sedan, såvida den inte är tom, att installeras i DEBIAN-underkatalogen i byggträdet så att den hamnar i styrinformationen i paketet.

När dessa filer skapas, används ett par symbolfiler från paketansvariga som indata. Programmet söker efter följande filer (och använder den första det finner):

=over 

=item *

debian/I<paket>.symbols.I<arkitektur>

=item *

debian/symbols.I<arkitektur>

=item *

debian/I<paket>.symbols

=item *

debian/symbols

=back

Dessa filer är i huvudsak intressanta för att kunna tillhandahålla den minimala version associerad med varje symbol i biblioteken. Detta motsvarar normalt den första version av paketet som tillhandahöll symbolen, men det kan manuellt inkrementeras av de ansvariga om symbolens ABI utökas med bibehållen bakåtkompatibilitet. Det är den ansvarigas ansvar att hålla dessa filer àjourförda och korrekta, men B<dpkg-gensymbols> kan hjälpa till med detta.

När den genererade symbolfilen skiljer sig mot den version som tillhandahållits av de paketansvariga kommer B<dpkg-gensymbols> att skriva ut en differens mellan de två versionerna. Om ändringarna är för stora kommer programmet dessutom att misslyckas (du kan justera hur stora ändringar du kan tolerera, se flaggan B<-c>).

Programmet introducerades i dpkg 1.14.8.

=head1 UNDERHÅLLA SYMBOLFILER

Det grundläggande utväxlingsformatet för symbolfilen beskrivs i L<deb-symbols(5)>, vilket används av symbolfilerna som inkluderas i bärpaket. Dessa genereras från mallsymbolfiler med ett format som baseras på det tidigare nämnda, beskrivet i L<deb-src-symbols(5)> och inkluderas i källkodspaket.

Symbolfilerna är bara riktigt nyttiga om de motsvarar hur paketet har utvecklats över flera versioner. De paketansvariga måste därför uppdatera dem varje gång en ny symbol läggs till så att dess associerade minimala version motsvarar verkligheten.

Diffarna som inkluderas i byggloggarna kan användas som en startpunkt, men den paketansvarige måste dessutom se till att beteendet för symbolerna inte har ändrats på ett sätt som gör att något som använder symbolerna och länkar mot den nya versionen slutar fungera med den gamla versionen.Diffarna som finns i byggloggarna kan användas som startpunkt, men paketansvariga måste dessutom se till att beteendet på dessa symboler inte på något sätt har ändrat sig på ett sådant sätt att något som använder symbolerna och länkar mot den nya versionen slutar fungera med den gamla versionen.

I de flesta fall kan differensfilen appliceras direkt på filen debian/I<paket>.symbols. Med det i åtanke så behövs det oftast ytterligare justeringar: det rekommenderas till exempel att skippa Debianrevisionen från det minimala versionsnummer så att bakåtanpassningar med ett lägre versionsnummer, men med samma uppströmsversion, fortfarande uppfyller de genererade beroendena. Om Debianrevisionen inte kan tas bort på grund av att en symbol faktiskt lades till av en Debianspecifik ändring så bör ett ”B<~>” läggs till i slutet av versionen.

Innan man applicerar en patch på symbolfilen bör de ansvariga dubbelchecka att den är korrekt. Publicerade symboler bör inte försvinna, så patchen bör ideellt sett bara lägga till nya rader.

Observera att du kan lägga in kommentarer i symbolfilerna

Glöm inte att kontrollera om de gamla symbolversionerna måste ökas. Det finns inget sätt för B<dpkg-gensymbols> att varna om detta. Att blint applicera diffen eller utgå från att inget har ändrats om diffen är tom, utan att se efter sådana ändringar, kan leda till att paket med lösa beroenden kan deklarera att de fungerar med äldre paket de inte kan fungera tillsammans med. Detta kommer introducera svårfunna problem vid (delvisa) uppgraderingar.{

=head2 God hantering av bibliotek

Ett välunderhållet bibliotek har följande funktioner:

=over 

=item *

dess API är stabilt (publika symboler tas aldrig bort, endast nya publika symboler läggs till) och inkompatibla ändringar görs endast när SONAME ändras;

=item *

ideellt använder det en versionhanterade symboler för att upprätthålla ABI-stabilitet trots interna ändringar och API-utökningar;

=item *

det exporterar inte privata symboler (sådana symboler kan taggas med ”optional” för att gå runt detta).

=back

När man underhåller symbolfilen är det lätt att upptäcka symboler som dyker upp och försvinner. Det är svårare att upptäcka inkompatibla API- och ABI-ändringar. Den paketansvarige bör därför noggrant läsa igenom uppströmsändringsloggen för fall då reglerna för god hantering av bibliotek bryts. Om ett möjligt fel upptäcks bör uppströmsförfattaren meddelas, då det alltid är bättre att problemet rättas uppströms än specifikt i Debian.

=head1 FLAGGOR

=over 

=item B<-P>I<paketbyggkatalog>

Sök I<paketbyggkatalog> istället för debian/tmp.

=item B<-p>I<paket>

Definiera paketnamnet. Krävs om mer än ett binärpaket listas i debian/control (eller om det inte finns någon debian/control-fil).

=item B<-v>I<version>

Definiera paketversion. Standardvärdet är versionen som hämtas från debian/changelog. Krävs om programmet anropas utanför ett källkodspaketträd.

=item B<-e>I<biblioteksfil>

Analyserar endast bibliotek som listats explicit istället för att hitta alla publika bibliotek. Du kan använda ett jokertecken för filnamn (se manualsidan L<File::Glob> för detaljer) i I<biblioteksfil> för att träffa multipla bibliotek med ett enda argument (annars behöver du flera B<-e>).

=item B<-l>I<katalog>

Lägg till I<katalog> till först i listan över kataloger som ska eftersökas efter privata delade bibliotek (sedan dpkg 1.19.1). Flaggan kan användas flera gånger.

B<Observera>: Använd den här flaggan istället för att sätta B<LD_LIBRARY_PATH>, eftersom miljövariabeln används för att styra körtidslänkaren, och genom att utnyttja det för att ange sökvägen till delade bibliotek vid kompilering kan det uppstå problem, till exempel vid korskompilering.

=item B<-I>I<filnamn>

Använd I<filnamn> som referensfil för att generera symbolfilen som integreras i själva paketet.

=item B<-O>[I<filnamn>]

Visa den genererade symbolfilen på standard ut eller spara som I<filnamn> om det anges, istället för B<debian/tmp/DEBIAN/symbols> (eller I<paketbyggkatalog>B</DEBIAN/symbols> om B<-P> användes). Om I<filnamn> redan existerar kommer dess innehåll att användas som bas för den genererade symbolfilen. Du kan använda den här funktionen för att uppdatera en symbolfil så att den motsvarar en nyare uppströmsversion av ditt bibliotek.

=item B<-t>

Skriv symbolfilen i mall-läge istället för i formatet kompatibelt med L<deb-symbols(5)>. Huvudskillnaden är att symbolnamn och taggar skrivs i sin originalform i mall-läget, till skillnad från de efterbehandlade symbolnamnen med borttagna taggar som skrivs i det kompatibla läget. Dessutom kan vissa symboler uteslutas när en vanlig L<deb-symbols(5)>-fil skrivs (i enlighet med tagghanteringsreglerna) medan alla symboler alltid skrivs till symbolfilsmallen.

=item B<-c>I<[0-4]>

Definiera vilka kontroller som ska utföras när den genererade symbolfilen jämförs med den mallfil som används som startpunkt. Som standard är nivån 1. Genom att öka nivån utförs flera kontroller, inklusive alla kontroller på lägre nivå.

=over 

=item Nivå 0

Misslyckas aldrig.

=item Nivå 1

Misslyckas om några symboler har försvunnit.

=item Nivå 2

Misslyckas om nya symboler har introducerats.

=item Nivå 3

Misslyckas om några bibliotek har försvunnit.

=item Nivå 4

Misslyckas om några bibliotek har introducerats.

=back

Värdet kan överstyras med miljövariabeln B<DPKG_GENSYMBOLS_CHECK_LEVEL>.

=item B<-q>

Håll tyst och generera aldrig en differens mellan den genererade symbolfilen och mallfilen som användes som startpunkt eller visa varningar om nya/förlorade bibliotek eller nya/förlorade symboler. Den här flaggan tar endast bort informationsutdata, inte själva kontrolleran (se flaggan B<-c>).

=item B<-a>I<arkitektur>

Anta I<arkitektur> som värdarkitektur vid hantering av symbolfiler. Använd den här flaggan för att generera en symbolfil eller differens för valfri arkitektur så länge dess binärer är tillgängliga.

=item B<-d>

Aktiverar felsökningsläge. Flera meddelanden visas för att förklara vad B<dpkg-gensymbols> gör.

=item B<-V>

Aktivera pratsamt läge. Den genererade symbolfilen innehåller ej längre rekommenderade symboler som kommentarer. I mall-läge följs dessutom mönstersymboler av kommentarer som visar vilka verkliga symboler som har träffats av mönstret.

=item B<-?>, B<--help>

Visar hjälpskärm och avslutar.

=item B<--version>

Visar version och avslutar.

=back

=head1 MILJÖVARIABLER

=over 

=item B<DEB_HOST_ARCH>

Anger värdarkitekturen om flaggan B<--arch> inte har angivits.

=item B<DPKG_GENSYMBOLS_CHECK_LEVEL>

Överstyr kommandokontrollnivån, även om kommandoradsflaggan B<-c> gavs (observera att detta går mot den normala konventionen att kommandoardsflaggor har företräde över miljövariabler).

=item B<DPKG_COLORS>

Väljer färgläge (sedan dpkg 1.18.5). För närvarande godtas följande värden: B<auto> (förval), B<always> och B<never>.

=item B<DPKG_NLS>

Om satt, används för att bestämma om lokalt språkstöd ska aktiveras, även känt som internationaliseringsstöd (eller i18n) (sedan dpkg 1.19.0). Tillåtna värden är: B<0> och B<1> (förval).

=back

=head1 SE ÄVEN

L<https://people.redhat.com/drepper/symbol-versioning>, L<https://people.redhat.com/drepper/goodpractice.pdf>, L<https://people.redhat.com/drepper/dsohowto.pdf>, L<deb-src-symbol(5)>, L<deb-symbols(5)>, L<dpkg-shlibdeps(1)>.


=head1 ÖVERSÄTTNING

Peter Krefting och Daniel Nylander.
