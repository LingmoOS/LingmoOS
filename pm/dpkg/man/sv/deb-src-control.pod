
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAMN

deb-src-control - Debians filformat för källkodspakets mallstyrfil

=head1 SYNOPS

B<debian/control>

=head1 BESKRIVNING

Varje Debiankällkodspaket innehåller mallstyrfilen ”B<debian/control>”, och dess L<deb822(5)>-format är en övermängd av B<control>-filen som medföljer Debianbinärpaket, se B<deb-control>(5).

Filen innehåller åtminstone två stycken, avdelade med en tomrad. Det första stycket kallas källkodspaketstycket och innehåller all generell information om källkodspaketet, medan de följande styckena kallas binärpaketstycken och beskriver exakt ett binärpaket per stycke. Varje stycke består av åtminstone ett fält. Ett fält inleds med ett fältnamn, till exempel B<Package> eller B<Section> (skiftlägesokänsligt), följt av ett kolon, fältinnehållet (skiftlägekänsligt om inte annat anges) och ett nyradstecken. Flerradiga fält är också tillåtna, men varje ytterligare rad som inte innehåller ett fältnamn, måste starta med minst ett blanksteg. Innehållet i flerradsfält slås normalt samman till en enda rad av verktygen (förutom i fallet fältet B<Description>, se nedan). För att sätta in tomma rader i ett flerradsfält, skriver du en punkt efter blanksteget. Rader som börjar med ett ”B<#>” tolkas som kommentarer.

=head1 KÄLLKODSFÄLT

=over 

=item B<Source:> I<källkodspaketnamn> (krävs)

Värdet på det här fältet är namnet på källkodspaketet, och måste motsvara namnet på källkodspaketet i filen debian/changelog. Paketnamnet måste bestå endast av små bokstäver (a-z), siffror (0-9), plus- (+) och minustecken (-) och punkt (.). Paketnamn måste vara minst två tecken långa och måste börja med ett liten bokstav eller siffra (a-z0-9).

=item B<Maintainer:> I<fullt-namn-epost> (rekommenderas)

Ska vara på formatet ”Joe Bloggs E<lt>jbloggs@foo.comE<gt>” och refererar till den person som för närvarande underhåller paketet, till skillnad från programmets författare eller den ursprunglige paketeraren.

=item B<Uploaders:> I<fullt-namn-epost>

Räknar upp namn och e-postadresser till med-underhållare av paketet, i samma format som fältet B<Maintainer>. Flera med-underhållare bör avdelas med kommatecken.

=item B<Standards-Version:> I<versionssträng>

Dokumenterar den senaste versionen av distributionens policystandard som paketet uppfyller.

=item B<Description:> I<kort-beskrivning>)

=item S< >I<lång-beskrivning>

Formatet för källkodspaketbeskrivningen är en kortfattad sammanfattning på den första raden (efter fältet B<Description>). Följande rader bör användas för en längre, mer detaljerad beskrivning. Varje rad i den lägre beskrivningen måste inledas med ett blanksteg, och blanka rader i den långa beskrivningen måste innehålla en ensam ”B<.>” efter det inledande blanksteget.

=item B<Homepage:> I<url>

URL till uppströmsprojektets hemsida.

=item B<Bugs:> I<url>

I<Url>:en till felrapporteringssystemet för detta paket. Det nuvarande formatet är I<systemtyp>://I<address>, till exempel B<debbugs://bugs.debian.org>. Det här fältet är normalt sett inte nödvändigt.

=item B<Build-Driver:> I<drivrutinsnamn>

Det här experimentella fältet anger namnet på byggdrivrutinen som används för att bygga paketet. Om det inte anges är standardvärdet för I<driver-name> B<debian-rules>.

Fältet stöds sedan dpkg 1.22.7.

=item B<Rules-Requires-Root:> B<no>|B<binary-targets>|I<impl-nyckelord>

Det här fältet används för att ange om filen B<debian/rules> kräver (fake)root-privilegier för att köra några av sina mål, och i så fall när.

=over 

=item B<no> (nej)

Binärmålen kommer inte kräva (fake)root överhuvudtaget. Detta är förval om B<dpkg-build-api>-nivån är ≥ 1, eller sedan dpkg 1.22.13.

=item B<binary-targets>

Binärmålen måste alltid köras under (fake)root. Detta är förvalet i B<dpkg-build-api>-nivå 0 till och med dpkg 1.22.13, om fältet inte anges; även om det inte är strikt nödvändigt att lägga till fältet med värdet B<binary-targets> så anger det att paketet har analyserats för det här kravet.

=item I<impl-nyckelord>

Det här är en blankstegsavdelad lista med nyckelord som kan ange när (fake)root krävs.

Nyckelord består av I<namnrymd>/I<fall>. Delen I<namnrymd> kan inte innehålla "/" eller blanksteg. Delen I<fall> kan inte innehålla blanksteg. Dessutom måste bägge delarna i sin helhet bestå av skrivbara ASCII-tecken.

Varje verktyg/paket definierar en namnrymd med samma namn som sig själv och anger ett antal fall där (fake)root krävs. (Se "Implementation provided keywords" i I<rootless-builds.txt>).

När fältet är satt till ett av I<impl-nyckelord> kommer byggaren att exponera ett gränssnitt som används för att köra ett kommando under (fake)root. (Se "Gain Root API" i I<rootless-builds.txt>.)

=back

=item B<Testsuite:> I<namnlist>

=item B<Testsuite-Triggers:> I<paketlista>

Dessa fält beskrivs i manualsidan L<dsc(5)>, eftersom de genereras från information hämtad från B<debian/tests/control> eller kopieras ordagrant till källkodsstyrfilen.

=item B<Vcs-Arch:> I<url>

=item B<Vcs-Bzr:> I<url>

=item B<Vcs-Cvs:> I<url>

=item B<Vcs-Darcs:> I<url>

=item B<Vcs-Git:> I<url>

=item B<Vcs-Hg:> I<url>

=item B<Vcs-Mtn:> I<url>

=item B<Vcs-Svn:> I<url>

I<Url>:en till versionshanteringsarkivet som används för att underhålla det här paketet. För närvarande stöds B<Arch>, B<Bzr> (Bazaar), B<Cvs>, B<Darcs>, B<Git>, B<Hg> (Mercurial), B<Mtn> (Monotone) och B<Svn> (Subversion). Fältet pekar normalt till den senaste versionen av paketet, såsom huvudgrenen (main eller trunk).

=item B<Vcs-Browser:> I<url>

I<Url>:en till ett webbgränssnitt för att bläddra i versionshanteringsarkivet.

=item B<Origin:> I<namn>

Namnet på den distribution paketet härstammar från. Det här fältet är normalt sett inte nödvändigt.

=item B<Section:> I<sektion>

Detta är ett generellt fält som ger paketet en kategori baserat på programvara som det installerar. Några vanliga sektioner är B<utils>, B<net>, B<mail>, B<text>, B<x11>, osv.

Om det utelämnas sätts I<section> till förvalet B<unknown> (sedan dpkg 1.22.13).

Godtagna värden baseras på den specifika distributionens policy.

=item B<Priority:> I<prioritet>

Ställer in hur viktigt paketet är jämfört med systemet som helhet. Kända prioriteter är B<required> (nödvändig), B<important> (viktig), B<standard> (normal), B<optional> (valfritt), B<extra> (extra), och B<unknown> (okänd), men andra värden kan också användas.

Om det utelämnas sätts I<priority> till förvalet B<optional> (sedan dpkg 1.22.13).

Hur dessa värden ska användas beror på den specifika distributionens policy.

=item B<Build-Depends:> I<paketlista>

En lista över paket som måste installeras och konfigureras för att kunna bygga källkodspaketet. Dessa beroenden måste tillfredsställas när binärarkitekturberoende eller -oberoende paket och källkodspaket byggs. Ett beroende som beskrivs i den här listan har inte exakt samma effekt som att inkludera det i både B<Build-Depends-Arch> och B<Build-Depends-Indep>, eftersom beroendet också måste tilfredsställas när källkodspaketet byggs.

=item B<Build-Depends-Arch:> I<paketlista>

Motsvarar B<Build-Depends>, men de behövs endast för att bygga de arkitekturoberoende paketen. B<Build-Depends> installeras också i detta fall. Det här fältet stöds sedan dpkg 1.16.4; för att bygga med äldre dpkg-versioner bör B<Build-Depends> användas istället.

=item B<Build-Depends-Indep:> I<paketlista>

Motsvarar B<Build-Depends>, men de behövs endast för att bygga de arkitekturoberoende paketen. B<Build-Depends> installeras också i detta fall.

=item B<Build-Conflicts:> I<paketlista>

En lista över paket som inte bör vara installerade när paketet byggs, till exempel på grund av att de stör byggsystemet som används. Ett beroende som beskrivs i den här listan har samma effekt som att inkludera det i både B<Build-Conflicts-Arch> och B<Build-Conflicts-Indep>, med den ytterligare effekten att den används för byggen av endast källkod.

=item B<Build-Conflicts-Arch:> I<paketlista>

Motsvarar B<Build-Conflicts>, men endast när arkitekturoberoende paket byggs. Fältet stöds sedan dpkg 1.16.4; för att bygga med äldre versioner av dpkg bör B<Build-Conflicts> användas istället.

=item B<Build-Conflicts-Indep:> I<paketlista>

Motsvarar B<Build-Conflicts>, men endast när de arkitekturoberoende paketen byggs.

=back

Syntaxen för fälten B<Build-Depends>, B<Build-Depends-Arch> och B<Build-Depends-Indep>-fälten är en lista med grupper av alternativa paket. Varje grupp innehåller en lista med paket avdelade med ett vertikalstreck (rör), ”B<|>”. Grupperna avdelas med kommatecken ”B<,>”, och kan avslutas med ett släpande komma som tas bort när fälten genereras till L<deb-control(5)> (sedan dpkg 1.10.14). Komma utläses som ”OCH”, och vertikalstrecken som ”ELLER”, där vertikalstrecken binder hårdare. Varje paketnamn kan eventuellt följas av en versionsnummerangivelse inom parenteser ”B<(>” och ”B<)>”, en arkitekturangivelse inom hakparenteser ”B<[>” och ”B<]>” samt en begränsningsformel som består av en eller flera listor med profilnamn inom vinkelparenteser ”B<E<lt>>” och ”B<E<gt>>”.

Syntaxen för fälten B<Build-Conflicts>, B<Build-Conflicts-Arch> och B<Build-Conflicts-Indep>-fälten är en kommaseparerad lista med paketnamn, där komma utläses som ”OCH”, och där listan kan avslutas med ett släpande komma som tas bort när fälten genereras till L<deb-control(5)> (sedan dpkg 1.10.14). Det är inte möjligt att ange alternativa paket med ”rör”. Varje paketnamn kan eventuellt följas av en versionsnummerangivelse inom parenteser, en arkitekturangivelse inom hakparenteser samt en begränsningsformel bestående av en eller flera listor med profilnamn inom vinkelparenteser.

Ett arkitekturkvalificeringsnamn kan vara ett existerande Debianarkitekturnamn (sedan dpkg 1.16.5), B<any> (sedan dpkg 1.16.2) eller B<native> (sedan dpkg 1.16.5). Om det utesluts är förvalet för fältet B<Build-Depends> den aktuella värdarkitekturen, förvalet för B<Build-Conflicts> är B<any>. Ett existerande Debianarkitekturnamn motsvarar exakt den arkitekturen för det paketnamnet, B<any> motsvarar valfri arkitektur för paketnamnet om paketet har markerats som B<Multi-Arch: allowed> och B<native> motsvarar nuvarande byggarkitektur om paketet inte har markerats som B<Multi-Arch: foreign>.

Ett versionsnummer kan börja med ”B<E<gt>E<gt>>”, vilket betyder att vilken som helst senare version matchar, där det är valfritt att ange Debianuppdateringen (avdelad med bindestreck).  Tillåtna versionrelationer är ”B<E<gt>E<gt>>” för större än, ”B<E<lt>E<lt>>” för mindre än, ”B<E<gt>=>” för större än eller lika med, ”B<E<lt>=>” för mindre än eller lika med, och ”B<=>” för lika med.

En arkitekturangivelse består av ett eller flera arkitekturnamn, avdelade med blanktecken. Varje namn kan föregås av ett utropstecken, vilket betyder ”ICKE”.

En begränsningsformel består av en eller flera begränsningslistor, avdelade med blanksteg. Varje begränsningslista skrivs inom vinkelparenteser. Poster i begränsningslistan är namn på byggprofiler, avdelade av blanksteg och kan föregås av ett utropstecken, vilket betyder ”ICKE”. En begränsningsformel representerar ett uttryck i disjunktiv normalform.

Observera att beroenden på paket i B<build-essential>-uppsättningen kan utelämnas och att det är omöjligt att deklarera byggkonflikter mot dem. En lista över dessa paket finns i paketet build-essential.

=head1 BINÄRFÄLT

Observera att fälten B<Priority>, B<Section> och B<Homepage> även kan användas i de stycken som beskriver binärpaket för att överstyra de globala värdena för källkodspaketet.

=over 

=item B<Package:> I<binärpaketnamn> (krävs)

Detta fält används för att namnge det binära paketet. Samma begränsningar gäller som för källkodspaketets namn.

=item B<Package-Type:> B<deb>|B<udeb>|I<typ>

Detta fält anger paketets typ. B<udeb> används för storleksbegränsade paket som används av debians installationsprogram. B<deb> är standardvärdet, och antas om fältet saknas. Fler typer kan komma att läggas till i framtiden.

=item B<Architecture:> I<ark>|B<all>|B<any> (krävs)

Arkitekturen anger på vilken typ av maskinvara paketet körs. För paket som körs på alla arkitekturer används värdet B<any> (någon). För paket som är arkitekturoberoende, som skal- och Perlskript eller dokumentation, används värdet B<all> (alla). För att begränsa paket till en specifik uppsättning arkitekturer, anger du namnen på arkitekturerna avdelade med blanksteg. Det är även möjligt att ange arkitekturer med jokertecken i listan (se L<dpkg-architecture(1)> för mer information om dessa).

=item B<Build-Profiles:> I<begränsningsformel>

Det här fältet anger villkor för när binärpaketet ska eller inte ska byggas. För att uttrycka villkoret används samma syntax för begränsningsformeln som för fältet B<Build-Depends> (inklusive vinkelparenteserna).

Om ett stycke för ett binärpaket inte innehåller det här fältet betyder det implicit att det bygger i alla byggprofiler (inklusive ingen alls).

Med andra ord, om ett stycke för ett binärpaket är försett med ett icke-tomt B<Build-Profiles>-fält kommer det binärpaketet byggas om, och endast om, villkoret, uttryckt i konjunktiv normalform, utvärderas till sant.

=item B<Protected:> B<yes>|B<no>

=item B<Essential:> B<yes>|B<no>

=item B<Build-Essential:> B<yes>|B<no>

=item B<Multi-Arch:> B<same>|B<foreign>|B<allowed>|B<no>

=item B<Tag:> I<lista-med-märken>

=item B<Description:> I<kort-beskrivning> (rekommenderas)

Dessa fält beskrivs i manualsidan L<deb-control(5)>, eftersom de kopieras ordagrant till binärpaketets styrfil.

=item B<Depends:> I<paketlista>

=item B<Pre-Depends:> I<paketlista>

=item B<Recommends:> I<paketlista>

=item B<Suggests:> I<paketlista>

=item B<Breaks:> I<paketlista>

=item B<Enhances:> I<paketlista>

=item B<Replaces:> I<paketlista>

=item B<Conflicts:> I<paketlista>

=item B<Provides:> I<paketlista>

=item B<Built-Using:> I<paketlista>

=item B<Static-Built-Using:> I<paketlista>

Det här fältet anger beroenden mellan paket. De diskuteras i manualsidan L<deb-control(5)>. När fälten förekommer i I<debian/control> kan de också avslutas med ett släpande kommatecken (sedan dpkg 1.10.14), ha arkitekturangivelser och begränsningsformler som alla reduceras när fälten för L<deb-control(5)> genereras.

=item B<Subarchitecture:> I<värde>

=item B<Kernel-Version:> I<värde>

=item B<Installer-Menu-Item:> I<värde>

Dessa fält används av debian-installer i B<udeb>-formatet och behövs normalt inte. För mer information om dem, se L<https://salsa.debian.org/installer-team/debian-installer/-/raw/master/doc/devel/modules.txt>.

=back

=head1 ANVÄNDARDEFINIERADE FÄLT

Det är tillåtet att lägga till ytterligare användardefinierade fält till styrfilen. Verktygen kommer ignorera dessa fält. Om du vill att fältet ska kopieras över till utdatafilerna, så som binärpaketen, måste du använda ett skräddarsytt namngivningsformat: fälten ska börja på B<X>, följt av noll eller flera av tecknen S<SBC> och ett bindestreck.

=over 

=item B<S>

Fältet kommer tas med i styrfilen för källkodspaket, se L<dsc(5)>.

=item B<B>

Fältet kommer tas med i styrfilen för binärpaketet, se L<deb-control(5)>.

=item B<C>

Fältet kommer tas med i styrfilen för insändningen (.changes), se L<deb-changes(5)>.

=back

Observera att prefix på formen B<X>[B<SBC>]B<-> tas bort när fälten kopieras över till utdatafilerna. Fältet B<XC-Approved-By> kommer tas med som B<Approved-By> i ”changes”-filen och inte tas med i styrfilerna för binär- och källkodspaketen.

Tänk på att dess användardefinierade fält använder den globala namnrymden, vilket en gång i framtiden kan komma att kollidera med officiellt erkända fält. För att undvika sådana potentiella situationer kan du använda prefixet B<Private-> för dessa fält, som B<XB-Private-New-Field>.

=head1 EXEMPEL

 # Kommentar
 Source: dpkg
 Section: admin
 Priority: required
 Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>
 # det här fältet kopieras till binär- och källkodspaketen.
 XBS-Upstream-Release-Status: stable
 Homepage: https://wiki.debian.org/Teams/Dpkg
 Vcs-Browser: https://git.dpkg.org/cgit/dpkg/dpkg.git
 Vcs-Git: https://git.dpkg.org/git/dpkg/dpkg.git
 Standards-Version: 4.7.0
 Build-Depends:
  debhelper-compat (= 13),
  debhelper (>= 13.10~),
  pkgconf,
  libselinux1-dev (>= 1.28-4) [!linux-any],

 Package: dpkg-dev
 Section: utils
 Priority: optional
 Architecture: all
 # det här är ett skräddarsytt fält i binärpaketet.
 XB-Mentoring-Contact: Raphael Hertzog <hertzog@debian.org>
 Depends:
  binutils,
  bzip2,
  cpio (>= 2.4.2-2),
 # Det här är en kommentar mitt i ett fältvärde.
  dpkg (>= 1.14.6),
  libtimedate-perl,
  lzma,
  make,
  patch (>= 2.2-1),
  perl-modules,
  perl5,
 Recommends:
  gcc | c-compiler,
  build-essential,
 Suggests:
  gnupg,
  debian-keyring,
 Conflicts:
  dpkg-cross (<< 2.0.0),
  devscripts (<< 2.10.26),
 Replaces:
  manpages-pl (<= 20051117-1),
 Replaces: manpages-pl (<= 20051117-1)
 Description: Debian package development tools
  This package provides the development tools (including dpkg-source)
  required to unpack, build and upload Debian source packages.
  .
  Most Debian source packages will require additional tools to build;
  for example, most packages need make and the C compiler gcc.

=head1 SE ÄVEN

I<%PKGDOCDIR%/spec/rootless-builds.txt>, L<deb822(5)>, L<deb-control(5)>, L<deb-version(7)>, L<dpkg-source(1)>


=head1 ÖVERSÄTTNING

Peter Krefting och Daniel Nylander.
