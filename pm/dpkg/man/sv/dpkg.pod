
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAMN

dpkg - en mellannivåpakethanterare för Debian

=head1 SYNOPS

B<dpkg> [I<flagga>...] I<åtgärd>

=head1 VARNING

Manualen är avsedd för användare som vill få en mer detaljerad förståelse för B<dpkg>s kommandoradsflaggor och pakettillstånd än vad som berättas med B<dpkg --help>.

Den bör I<inte> användas av paketansvariga som vill lära sig hur B<dpkg> kommer att installera deras paket. Beskrivningen över vad B<dpkg> gör när paket installeras och tas bort är speciellt otillräckliga.

=head1 BESKRIVNING

B<dpkg> är ett mellannivåverktyg för att installera, bygga, ta bort och hantera Debianpaket. Det primära och mer användarvänliga skalet runt B<dpkg> som ett CLI (kommandoradsgränssnitt) är L<apt(8)> och som ett TUI (terminalanvändargränssnitt) är L<aptitude(8)>. B<dpkg> kontrolleras helt och hållet via kommandoradsparametrar, vilka består av exakt en åtgärd och noll eller fler flaggor. Åtgärdsparametern talar om för dpkg vad som ska göras, och flaggorna styr på vilket sätt åtgärden ska utföras.

B<dpkg> kan också användas som ett skal runt L<dpkg-deb(1)> och L<dpkg-query(1)>. En förteckning över tillgängliga åtgärder beskrivs nedan i stycket B<ÅTGÄRDER>. Om B<dpkg> upptäcker en sådan åtgärd anropas bara B<dpkg-dpkg> eller B<dpkg-query> med de givna flaggorna, men inga specifika flaggor sänds direkt till dem, för att använda sådana flaggor måste bakgrundsprogrammen anropas direkt.

=head1 INFORMATION OM PAKET

B<dpkg> upprätthåller viss användbar information om tillgängliga paket. Informationen delas in i tre klasser: B<tillstånd>, B<markeringstillstånd> och B<flaggor>. Dessa värden är avsedda att huvudsakligen ändras via B<dselect>.

=head2 Pakettillstånd

=over 

=item B<ej installerat> (”not-installed”)

Paketet är inte installerat på ditt system.

=item B<konfigurationsfiler> (”config-files”)

Endast konfigurationsfilerna eller skriptet B<postrm> och de data det behöver för att ta bort för paketet finns på systemet.

=item B<halvt installerat> (”half-installed”)

Installationen av paketet har påbörjats, men av någon orsak inte slutförts.

=item B<uppackat> (”unpacked”)

Paketet är uppackat, men inte konfigurerat.

=item B<halvt konfigurerat> (”half-configured”)

Paketet är uppackat och konfigurationen har påbörjats, men av någon orsak inte slutförts.

=item B<väntar på utlösare> (”triggers-awaited”)

Paketet väntar på hantering av utlösare av ett annat paket.

=item B<utlösare väntar> (”triggers-pending”)

Paketet har utlösts.

=item B<installerat> (installed)

Paketet är uppackat och korrekt inställt.

=back

=head2 Paketvalstillstånd

=over 

=item B<installera> (”install”)

Paketet är markerat för installation.

=item B<håll> (”hold”)

Ett paket markerat för B<håll> behålls i samma version, det vill säga, inga automatiska nya installationer, uppgraderingar eller borttagningar kommer att utföras på dem, såvida inte dessa åtgärder anges explicit, eller tillåts göra automatiskt med flaggan B<--force-hold>.

=item B<ta bort> (”deinstall”)

Paketet är markerat för avinstallation (dvs. vi vill ta bort alla filer förutom konfigurationsfilerna).

=item B<rensa> (”purge”)

Paketet är markerat för rensning (dvs. vi vill ta bort allting från systemkataloger, även konfigurationsfiler).

=item B<okänt> (”unknown”)

Paketvalet är okänt. Ett paket som också är i tillståndet B<ej installerat>, och med en B<ok>-flagga kommer glömmas bort nästa gång databasen lagras.

=back

=head2 Paketflaggor

=over 

=item B<ok>

Ett paket märkt B<ok> är i ett känt tillstånd, men kan behöva ytterligare behandling.

=item B<ominstallation krävs> (”reinstreq”)

Ett paket markerat B<ominstallation krävs> är trasigt och kräver ominstallation. Dessa paket kan inte tas bort, såvida inte det framtvingas med flaggan B<--force-remove-reinstreq>.

=back

=head1 ÅTGÄRDER

=over 

=item B<-i>, B<--install> I<paketfil>...

Installera paketet.  Om flaggan B<--recursive> eller B<-R> anges måste I<paketfil> istället vara en katalog.

Installationen består av följande steg:

=over 4

=item B<1.>

Extrahera styrfilerna ur det nya paketet.

=item B<2.>

Om en annan version av samma paket redan fanns installerat vid nyinstallationen exekveras I<prerm>-skriptet för det gamla paketet.

=item B<3.>

Kör I<preinst>-skriptet, om ett sådant medföljer paketet.

=item B<4.>

Packa upp de nya filerna och säkerhetskopiera samtidigt de gamla filerna så att de kan återställas om någonting går fel.

=item B<5.>

Om en annan version av samma paket redan fanns installerat vid nyinstallationen exekveras I<postrm>-skriptet för det gamla paketet. Observera att skriptet exekveras efter I<preinst> för det nya paketet eftersom de nya filerna skrivs samtidigt som de gamla tas bort.

=item B<6.>

Konfigurera paketet. Se B<--configure> för detaljerad information om hur man gör det.

=back

=item B<--unpack> I<paketfil> ...

Packa upp paketet, men konfigurera det inte. Om flaggan B<--recursive> eller B<-R> anges måste I<paketfil> istället vara en katalog.

Hanterar utlösare för B<Pre-Depends> såvida inte B<--no-triigers> har angivits.

=item B<--configure> I<paket>...|B<-a>|B<--pending>

Konfigurera ett paket som har packats upp men ännu inte konfigurerats. Om B<-a> eller B<--pending> anges istället för I<paket> konfigureras alla paket som har packats upp men ännu inte konfigurerats.

För att omkonfigurera ett paket som redan har konfigurerats kan du istället använda kommandot L<dpkg-reconfigure(8)> (som ingår i B<debconf>-projektet).

Konfigurering består av följande steg:

=over 4

=item B<1.>

Packa upp konfigurationsfilerna och säkerhetskopiera samtidigt de gamla konfigurationsfilerna så att de kan återställas om någonting går fel.

=item B<2.>

Kör I<postinst>-skriptet, om ett sådant finns i paketet.

=back

Hanterar utlösare såvida inte B<--no-triggers> har angivits.

=item B<--triggers-only> I<paket>...|B<-a>|B<--pending>

Hanterar bara utlösare (sedan dpkg 1.14.17). Alla avvaktande utlösare kommer att hanteras. Om paketnamn anges kommer endast dessa pakets utlösare att hanteras, precis en gång, om nödvändigt. Om du använder denna flagga kan det hända att paket hamnar i felaktiga B<väntar på utlösare>- och B<utlösare väntar>-tillstånd. Detta kan rättas senare genom att köra: B<dpkg --configure --pending>.

=item B<-r>, B<--remove> I<paket>...|B<-a>|B<--pending>

Ta bort ett installerat paket. Detta tar bort allt utom konffiler och annan data som städas upp av skriptet I<postrm>, vilket kan göra att du kan undvika att konfigurera om paketet om du ominstallerar det senare (konffiler är konfigurationsfiler som listas i styrfilen I<DEBIAN/conffiles>). Om det inte finns någon styrfil I<DEBIAN/conffiles> eller något skript I<DEBIAN/postrm>, motsvarar det här kommandot att köra B<--purge>. Om B<-a> eller B<--pending> anges istället för ett paketnamn kommer alla paket som är uppackade, men markerade för borttagning i filen I<%ADMINDIR%/status>, att tas bort.

Borttagning av ett paket består av följande steg:

=over 4

=item B<1.>

Kör I<prerm>-skriptet.

=item B<2.>

Ta bort de installerade filerna.

=item B<3.>

Kör I<postrm>-skriptet.

=back

Hanterar utlösare såvida inte B<--no-triggers> har angivits.

=item B<-P>, B<--purge> I<paket>...|B<-a>|B<--pending>

Rensa ett installerat eller redan borttaget paket. Detta tar bort allting, inklusive konffiler, och allt annat som städas upp från I<postrm>. Om B<-a> eller B<--pending> anges instället för ett paketnamn kommer alla paket som packats upp eller tagits bort, men som är markerade för rensning i filen I<%ADMINDIR%/status>, att rensas.

B<Observera>: det är möjligt att B<dpkg> inte känner till vissa konfigurationsfiler på grund av att de skapas och hanteras separat via konfigurationsskript. I så fall kommer inte B<dpkg> självt ta bort dem, utan paketets I<postrm>-skript (som anropas av B<dpkg>) måste ta hand om att de tas bort när paketet tas bort med B<--purge>. Detta gäller naturligtvis endast för filer i systemkatalogerna, inte konfigurationsfiler som skrivs i enstaka användares hemkataloger.

Rensning av ett paket består av följande steg:

=over 4

=item B<1.>

Ta bort paketet, om det inte redan är borttaget. Se B<--remove> för detaljerad information om hur det görs.

=item B<2.>

Kör I<postrm>-skriptet.

=back

Hanterar utlösare såvida inte B<--no-triggers> har angivits.

=item B<-V>, B<--verify> I<paketnamn> ...

Bekräftar integriteten för I<paketnamn> eller, om det inte anges, alla paket, genom att jämföra informationen från de filer paketet installerar med metadatainformationen som lagras i B<dpkg>-databasen (sedan dpkg 1.17.2). Ursprunget till filernas metadatainformation i databasen är binärpaketen själva. Metadata samlas in från paketen när de packas upp under installationsprocessen.

Det enda funktionstest som utförs är för närvarande en md5sum-verifiering av filinnehållet mot det värde som lagrats i fildatabasen. Det kontrolleras bara om databasen innehåller filens md5-summa. Kommandot B<--audit> kan användas för att söka efter saknad metadata i databasen. Detta är endast en integritetskontroll och ska inte tolkas som någon som helst form av säkerhetskontroll.

Utdataformatet kan väljas med flaggan B<--verify-format>, vilket som standard använder formatet B<rpm>, men detta kan komma att ändras i framtiden, varför program som tolkar kommandots utdata bör välja vilket format de förväntar sig explicit.

=item B<-C>, B<--audit> [I<paketnamn>...]

Utför sundhets- och konsekvenskontroll för I<paketnamn> eller alla paket om det inte anges (kontroller för enskilda paket sedan dpkg 1.17.10). Söker, till exempel, efter paket som endast har installerats delvis på ditt system eller som har skande, trasiga eller föråldrade styrdata eller filer. B<dpkg> kommer att föreslå vad du ska göra för att få dem rättade.

=item B<--update-avail> [I<Packages-fil>]

=item B<--merge-avail> [I<Packages-fil>]

Uppdatera B<dpkg>s och B<dselect>s lista över vilka paket som finns tillgängliga. Med B<--merge-avail> kombineras den gamla informationen med informationen från I<Packages-filen>. Med B<--update-avail> ersätts den gamla informationen med informationen från I<Packages-filen>. I<Packages-filerna> som medföljer Debian heter helt enkelt ”I<Packages>”. Om I<Packages-fil>-argumentet saknas eller namnet ”B<->” anges kommer det att läsas från standard in (sedan dpkg 1.17.7). B<dpkg> skriver sin lista över tillgängliga paket i I<%ADMINDIR%/available>.

Ett lättare enkelkommando för att hämta och uppdater I<available>-filen är B<dselect update>. Observera att den här filen i huvudsak är onödig om du använder ett APT-baserat skal istället för B<dselect>: APT har ett eget system för att hålla reda på tillgängliga paket.

=item B<-A>, B<--record-avail> I<paketfil> ...

Uppdatera B<dpkg>s och B<dselect>s lista över vilka paket som finns tillgängliga med information från paketet I<paketfil>. Om flaggan B<--recursive> eller B<-R> anges måste I<paketfil> istället vara en katalog.

=item B<--forget-old-unavail>

En numera B<föråldrad> flagga som inte utför någonting, då B<dpkg> automatiskt glömmer ej installerade och ej tillgängliga paket (sedan dpkg 1.15.4), men endast de som inte innehåller användarinformation såsom paketval.

=item B<--clear-avail>

Radera existerande information om vilka paket som är tillgängliga.

=item B<--get-selections> [I<paketnamnsmönster>...]

Hämta en lista över paketval och skriv den till standard ut. Paket som inte är installerats (dvs. de som tidigare helt har tagits bort) kommer inte att visas om inte ett mönster anges.

=item B<--set-selections>

Sätt paketvalslistan med den fil som läses från standard in. Filen måste vara på formatet ”I<paket> I<status>”, där status är en av B<install>, B<hold>, B<deinstall> eller B<purge>. Tomrader och kommentarsrader som börjar med ”B<#>” är också tillåtna.

Filen I<available> måste vara àjourförd för att kommandot ska vara av något värde, annars kommer okända paket att ignoreras med en varning. Se kommandona B<--update-avail> och B<--merge-avail> för mer information.

=item B<--clear-selections>

Sätt det önskade tillståndet för varje icke-grundläggande paket till avinstallera (sedan dpkg 1.13.18). Detta är avsett att användas direkt före B<--set-selections>, för att avinstallera alla paket som inte finns med i listan som anges av B<--set-selections>.

=item B<--yet-to-unpack>

Söker efter paket som markerats för installation men som av någon anledning ännu inte har installerats.

B<Observera>: Kommandot använder både available-filen och paketvalen.

=item B<--predep-package>

Skriv ut ett enda paket som är målet för en eller flera relevanta förhandsberoenden och som själv inte har ouppfyllda förberoenden.

Om ett sådant paket finns är utdatan en post från Packages-filen, som Kan hanteras som nödvändigt.

B<Observera>: Kommandot använder både available-filen och paketvalen.

Returnerar 0 om ett paket skrivs ut, 1 om inget lämpligt paket finns och 2 vid fel.

=item B<--add-architecture> I<arkitektur>

Lägg till I<arkitektur> i listan över arkitekturer för vilka paket kan installeras utan att använda B<--force-architecture> (sedan dpkg 1.16.2). Arkitekturen B<dpkg> har byggts för (dvs. utdata från B<--print-architecture>) är alltid en del av listan.

=item B<--remove-architecture> I<arkitektur>

Ta bort I<arkitektur> från listan över arkitekturer för vilka paket kan installeras utan att använda B<--force-architectures> (sedan dpkg 1.16.2). Om arkitekturen för närvarande används i databasen kommer operationen att vägras, såvida inte B<--force-architectures> anges. Arkitekturen B<dpkg> byggs för (dvs. utdata från B<--print-architecture>) kan aldrig tas bort från listan.

=item B<--print-architecture>

Visa arkitektur för paketen B<dpkg> installerar (till exempel ”i386”).

=item B<--print-foreign-architectures>

Visa en lista, avdelad med nyradstecken, över extraarkitekturer B<dpkg> har konfigurerats att tillåta installation av paket för (sedan dpkg 1.16.2).

=item B<--assert-help>

Ge hjälp om B<--assert->I<funktion>-flaggorna (sedan dpkg 1.21.0).

=item B<--assert->I<funktion>

Påstå att B<dpkg> stöder den önskade funktionen. Returnerar 0 om funktionen stöds i sin helhet, 1 om funktionen är känd men B<dpkg> inte kan stöda den ännu, och 2 om funktionen är okänd. Aktuell lista över funktioner som kan hävdas är:

=over 

=item B<support-predepends>

Stöder fältet B<Pre-Depends> (sedan dpkg 1.1.0).

=item B<working-epoch>

Stöder epoker i versionssträngar (sedan dpkg 1.4.0.7).

=item B<long-filenames>

Stöder långa filnamn i L<deb(5)>-arkiv (sedan dpkg 1.4.1.17).

=item B<multi-conrep>

Stöder flera B<Conflicts> och B<Replaces> (sedan dpkg 1.4.1.19).

=item B<multi-arch>

Stöder fält och semantik för flera arkitekturer (sedan dpkg 1.16.2)

=item B<versioned-provides>

Stöder versioner i B<Provides> (sedan dpkg 1.17.11).

=item B<protected-field>

Stöder fältet B<Protected> (sedan dpkg 1.20.1).

=back

=item B<--validate->I<saker> I<sträng>

Bekräftar att I<saker>-I<sträng> har korrekt syntax (sedan dpkg 1.18.16). Returnerar 0 om I<sträng> är giltig, 1 om I<sträng> är ogiltig men kan tänkas godtas i slapp kontext och 2 om I<sträng> är ogiltig. Aktuell lista över I<saker> som kan bekräftas är:

=over 

=item B<pkgname>

Bekräftar det givna paketnamnet (sedan dpkg 1.18.16).

=item B<trigname>

Bekräftar det givna utlösarnamnet (sedan dpkg 1.18.16).

=item B<archname>

Bekräftar det givna arkitekturnamnet (sedan dpkg 1.18.16).

=item B<version>

Bekräftar den givna versionen (sedan dpkg 1.18.16).

=back

=item B<--compare-versions> I<ver1> I<op> I<ver2>

Jämför versionsnummer, där I<op> är en binär operator. B<dpkg> returnerar sant (B<0>) om det angivna värdet uppfylls, och falskt (B<1>) i annat fall. Det finns två grupper operatorer, vilka endast skiljer sig i hur de hanterar när I<ver1> eller I<ver2> är tom. Dessa hanterar tom version som om den är tidigare än alla andra versioner: B<lt le eq ne ge gt>. Dessa hanterar tom version som om den är senare än alla andra versioner: B<lt-nl le-nl ge-nl gt-nl>. Dessa tillhandahålls endast för kompatibilitet med styrfilssyntaxen: B<E<lt> E<lt>E<lt> E<lt>= = E<gt>= E<gt>E<gt> E<gt>>. Operatorerna B<E<lt>> och B<E<gt>> är föråldrade och bör B<inte> användas, på grund av förvirrande semantik. Till exempel: B<0.1 E<lt> 0.1> utvärderas som sant.

=begin inaktiverad

=item B<--command-fd> I<n>

Läser en följd av kommandon från indatafilhandtag I<n>.

B<Observera>: Ytterligare flaggor som sätts på kommandoraden, och genom filhandtaget, återställs inte för kommandon som körs i en följd under samma körning.

=end inaktiverad

=item B<-?>, B<--help>

Visar en kortfattad hjälptext.

=item B<--force-help>

Get hjälp om B<--force->I<nånting>-flaggorna.

=item B<-Dh>, B<--debug=help>

Ger hjälp om felsökningsflaggorna.

=item B<--version>

Visar B<dpkg>s versionsinformation.

När det används tillsammans med B<--robot> kommer utdata vara programmets versionsnummer i ett numeriskt format avdelat med punkt, utan radbrytningstecken.

=item B<dpkg-deb-åtgärder>

Se L<dpkg-deb(1)> för ytterligare information om följande åtgärder, och andra åtgärder och flaggor som inte är tillgängliga via skalet B<dpkg>.

=over 

=item B<-b>, B<--build> I<katalog> [I<arkiv>|I<katalog>]

Bygg ett deb-paket.

=item B<-c>, B<--contents> I<arkiv>

Lista innehållet i ett deb-paket.

=item B<-e>, B<--control> I<arkiv> [I<katalog>]

Extraherar styrfilsinformation från ett paket.

=item B<-x>, B<--extract> I<arkiv> I<katalog>

Extrahera filerna som finns i paketet.

=item B<-X>, B<--vextract> I<arkiv> I<katalog>

Extrahera och visa filnamnen som finns i paketet.

=item B<-f>, B<--field> I<arkiv> [I<control-fält> ...]

Visa paketets styrfilfält.

=item B<--ctrl-tarfile> I<arkiv>

Mata ut styr-tarfilen från ett Debianpaket.

=item B<--fsys-tarfile> I<arkiv>

Mata ut filsystems-tarfilen från ett Debianpaket.

=item B<-I>, B<--info> I<arkiv> [I<control-fil> ...]

Visa information om ett paket.

=back

=item B<dpkg-query-åtgärder>

Se L<dpkg-query(1)> för ytterligare information om följande åtgärder, och andra åtgärder och flaggor som inte är tillgängliga via skalet B<dpkg>.

=over 

=item B<-l>, B<--list> I<paketnamnsmönster>...

Visa paket som motsvarar givet mönster.

=item B<-s>, B<--status> I<paketnamn>...

Rapportera status för angivet paket.

=item B<-L>, B<--listfiles> I<paketnamn> ...

Visa filer installerade på ditt system från I<paketnamn>.

=item B<-S>, B<--search> I<filnamnssökmönster> ...

Sök efter ett filnamn från installerade paket.

=item B<-p>, B<--print-avail> I<paketnamn>...

Visar detaljer om I<paketnamn> från I<%ADMINDIR%/available>. Användare av APT-baserade skal bör istället använda B<apt show> I<paketnamn>.

=back

=back

=head1 FLAGGOR

Alla flaggorna kan ges både på kommandoraden och i B<dpkg>s konfigurationsfil I<%PKGCONFDIR%/dpkg.cfg> eller fragmentfilerna (vars namn motsvarar skalmönstret '[0-9a-zA-Z_-]*') i konfigurationskatalogen I<%PKGCONFDIR%/dpkg.cfg.d/>. En rad i konfigurationsfilen är antingen en flagga (precis samma som på kommandoraden, men utan inledande bindestreck) eller en kommentar (om den börjar med ett ”B<#>”).

=over 

=item B<--abort-after=>I<antal>

Ställer in efter hur många fel B<dpkg> ska avbryta. Förvalet är 50.

=item B<-B>, B<--auto-deconfigure>

När ett paket tas bort är det möjligt att ett annat paket beror på det borttagna paketet. Om du anger flaggan kommer de paket som beror på det borttagna paketet automatiskt att avkonfigureras.

=item B<-D>I<oktalvärde>, B<--debug=>I<oktalvärde>

Aktiverar felsökning. I<oktalvärde>t skapas genom att utföra bitvis logisk ”eller” av de önskade värdena från listan nedan (observera att dessa värden kan ändras i framtida versioner). B<-Dh> eller B<--debug=help> visar dessa felsökningsvärden.

       Tal   Beskrivning
         1   Allmänt hjälpsam förloppsinformation
         2   Anrop och status för utvecklarskript
        10   Utdata för varje fil som hanteras
       100   Massvis med utdata för varje fil som hanteras
        20   Utdata för varje konfigurationsfil
       200   Massvis med utdata för varje konfigurationsfil
        40   Beroenden och konflikter
       400   Massvis av beroende-/konfliktutdata
     10000   Aktivering och hantering av utlösare
     20000   Massvis av utdata om utlösare
     40000   Dumma mängder utdata om utlösare
      1000   Massvis av pladder om till exempel dpkg/info-katalogen
      2000   Knäppa mängder pladder

=item B<--force->I<saker>

=item B<--force->I<saker>, B<--refuse->I<saker>

Tvinga eller vägra (B<no-force> och B<refuse> betyder detsamma) att göra vissa saker. I<saker> är en kommaavdelad lista med saker som anges nedan. B<--force-help> visar en lista med beskrivningar. Saker som markeras med (*) är tvingade som förval.

B<Varning>: Dessa flaggor är huvudsakligen avsedda att endast användas av experter. Om du använder dem utan att fullt ut förstå vad de går ut på kan du förstöra din systeminstallation.

=over 2

=item B<all>:

Slår på (eller av) alla tvingande flaggor.

=item B<downgrade>(*):

Installera ett paket även om en nyare version redan är installerad.

B<Varning>: För närvarande undersöker inte B<dpkg> beroenden vid nedgradering och kommer därför inte att varna dig om nedgraderingen bryter ett beroende för något paket. Detta kan ha allvarliga sidoeffekter, genom att nedgradera grundläggande systemkomponenter kan du riskera att göra hela systemet instabilt. Använd med tillförsikt.

=item B<configure-anny>:

Konfigurera även alla uppackade men ej konfigurerade paket på vilka det aktuella paketet beror.

=item B<hold>:

Tillåt automatiska installationer, uppgraderingar eller borttagningar av paket även när de är märkts som ”håll”. B<Obervera:> När dessa åtgärder anges explicit ignoreras alltid paketvalstatusen ”håll”.

=item B<remove-reinstreq>_

Ta bort ett paket även om det är trasigt och markerat att vara i behov av ominstallation. Detta kan, till exempel, göra så att delar av paketet blir kvar på systemet, men glöms bort av B<dpkg>.

=item B<remove-protected>:

Ta bort paketet även om det anses som skyddat (protected, sedan dpkg 1.20.1). Skyddade paket är huvudsakligen viktig infrastruktur för systemstart eller används för skräddarsydda systemlokala metapaket. Om du tar bort dem kan det göra så att hela systemet inte klarar att starta eller förlora krävd funktionalitet, så använd med tillförsikt.

=item B<remove-essential>:

Ta bort paketet även om det anses som viktigt (essential). Viktiga paket är huvudsakligen de mest grundläggande Unixkommandona, vilka krävs för pakethanteringssystemet, för att systemet generellt ska fungera korrekt eller under start (även om det sistnämnda bör skrivas om till skyddade (protected) paket). Om du tar bort dem kan det göra så att hela systemet slutar fungera, så använd med tillförsikt.

=item B<depends>:

Gör alla beroendeproblem till varningar. Detta påverkar fälten B<Pre-Depends> och B<Depends>.

=item B<depends-version>:

Ignorera versionsnummer när beroenden kontrolleras. Detta påverkar fälten B<Pre-Depends> och B<Depends>.

=item B<breaks>:

Installera, även om det skulle förstöra ett annat paket (sedan dpkg 1.14.16). Detta påverkar fältet B<Breaks>.

=item B<conflicts>:

Installera även om paket som är i konflikt (krockar) med ett annat paket. Detta är farligt, eftersom det oftast leder till att vissa filer skrivs över. Detta påverkar fältet B<Conflicts>.

=item B<confmiss>:

Installera alltid saknade konfigurationsfiler utan att fråga. Detta är farligt, eftersom det inte bibehåller ändringar (tar bort) av filer.

=item B<confnew>:

Om en konfigurationsfil har modifierats och versionsnumret i paketet ändrades, installera alltid nya versioner av ändrade konfigurationsfiler utan att fråga, såvida inte B<--force-confdef> också anges, i vilket fall det förvalda alternativet kommer att utföras.

=item B<confold>:

Om en konfigurationsfil har modifierats och versionsnumret i paketet ändrades, behåll alltid gamla versioner av ändrade konfigurationsfiler utan att fråga, såvida inte B<--force-confdef> också anges, i vilket fall det förvalda alternativet kommer att utföras.

=item B<confdef>:

Om en konfigurationsfil har modifierats och versionsnumret i paketet ändrades, välj alltid det förvalda alternativt för ändrade konfigurationsfiler. Om inget förval har angivits kommer programmet stanna och fråga användaren såvida inte B<--force-confnew> eller B<--force-confold> också angetts, i så fall används den för att bestämma vad som ska utföras.

=item B<confask>:

Erbjud alltid att ersätta en modifierad konfigurationsfil med versionen i paketet, även om versionen i paketet inte ändrades (sedan dpkg 1.15.8). Om någon av B<--force-confnew>, B<--force-confold> eller B<--force-confdef> också angetts, så används den för att bestämma vad som ska utföras.

=item B<overwrite>:

Skriv över ett pakets filer med ett annats.

=item B<overwrite-dir>:

Skriv över ett pakets kataloger med ett annats filer.

=item B<overwrite-diverted>:

Skriv över en omdirigerad fil med en ej omdirigerad version.

=item B<statoverride-add>

Skriver över en existerande stat-överstyrning när den läggs till (sedan dpkg 1.19.5).

=item B<statoverride-remove>:

Ignorera en saknad stat-överstyrning när den tas bort (sedan dpkg 1.19.5).

=item B<security-mac>(*):

Använd platformsspecifik säkerhet baserad på obligatorisk åtkomststyrning (Mandatory Access Controls, MAC) när filer installeras i filsystemet (sedan dpkg 1.19.5). På Linuxsystem använder implementationen SELinux.

=item B<unsafe-io>:

Utför inte säkra I/O-operationer vid uppackning (sedan dpkg 1.15.8.6). Detta innebär för närvarande att filsystemssynkroniseringar inte utförs innan namn på filer ändras, något som vi vet kan påverka prestanda betydligt negativt för vissa filsystem, vilket tyvärr är samma system som behöver säker I/O på grund av att de har ett otillförlitligt beteende som orsakar tomma filer vid tvära systemkrascher.

I<Observera>: För ext4, den värsta syndaren, kan det vara värt att istället använda monteringsflaggan B<nodelalloc>, vilken både korrigerar prestandaförlusten och datasäkerhetsproblemen, det sistnämnda genom att inte låta filsystemet skapa tomma filer vid tvära krascher för programvara som inte utför synkronisering före atomära namnbyten.

B<Varning>: Den här flaggan kan ge bättre prestanda på bekostnad av dataförluster, använd med tillförsikt.

=item B<script-chrootless>:

Kör utvecklarskript utan att L<chroot(2)>:a in i B<instdir> även om paketet inte stöder detta arbetssätt (sedan dpkg 1.18.5).

B<Varning>: Detta kan förstöra ditt värdsystem, använd med extrem tillförsikt.

=item B<architecture>:

Hantera även paket med fel eller saknad maskinvaruarkitektur.

=item B<bad-version>:

Hantera även paket med fel versioner (sedan dpkg 1.16.1).

=item B<bad-path>:

Sökvägen i B<PATH> saknar viktiga program, så problem är troliga.

=item B<not-root>:

Försök (av)installera saker även utan att vara root.

=item B<bad-verify>:

Installera ett paket även om det inte går att verifiera dess äkthet.

=back

=item B<--ignore-depends>=I<paket>,...

Ignorera beroendekontroll för angivna paket (i verkligheten utförs kontrollen, men det ges endast varningar, ingenting annat). Detta påverkar fälten B<Pre-Depends>, B<Depends> och B<Breaks>.

=item B<--no-act>, B<--dry-run>, B<--simulate>

Gör allting som efterfrågas, men skriv inte några ändringar. Detta används för att se vad som skulle ha hänt med åtgärden utan att faktiskt ändra något.

Se till att du anger B<--no-act> före åtgärdsflaggan, annars kan du få oönskade biverkningar (t.ex så kommer B<dpkg --purge foo --no-act> först att rensa ut paketet ”foo” för att sedan försöka rensa ut paketet ”--no-act”, trots att du troligen förväntade dig att ingenting skulle utföras).

=item B<-R>, B<--recursive>

Hantera alla vanliga filer som matchar sökmönstret B<*.deb> rekursivt i de kataloger som anges, med alla sina underkataloger. Flaggan kan användas tillsammans med åtgärderna B<-i>, B<-A>, B<--install>, B<--unpack> och B<--record-avail>.

=item B<-G>

Installera inte paketet om en nyare version av samma paket redan är installerat. Detta är ett alias för B<--refuse-downgrade>.

=item B<--admindir=>I<kat>

Ställ in administrationskatalogen till I<katalog>. Katalogen innehåller flera filer som beskriver status för installerade eller avinstallerade paket, osv. Standardvärde är ”I<%ADMINDIR%>” om B<DPKG_ADMINDIR> inte har satts.

=item B<--instdir=>I<katalog>

Ställ in installationskatalogen, vilket anger katalogen där paket ska installeras. B<instdir> är även katalogen som skickas som argument till L<chroot(2)> innan paketets installationsfiler körs, vilket betyder att skripten ser B<instdir> som rotkatalog. (Förval är ”I</>”)

=item B<--root=>I<katalog>

Ställ in rotkatalogen till B<katalog>, vilket sätter installationskatalogen till ”I<katalog>” och den administrativa katalogen till ”I<katalog>B<%ADMINDIR%>”.

=item B<-O>, B<--selected-only>

Hantera endast paket som markerats för installation. Själva markeringen utförs med B<dselect> eller av B<dpkg> när paketen hanteras. Till exempel kommer paket som tas bort att markeras för installation.

=item B<-E>, B<--skip-same-version>

Installera inte paketet om samma version och arkitektur av paketet redan är installerat.

Sedan dpkg 1.21.10 tar även arkitekturen med i beräkningen, vilket gör det möjligt att korsgradera paket eller installera ytterligare sidoinstallerbara instanser med samma version, men olika arkitektur.

=item B<--pre-invoke=>I<kommando>

=item B<--post-invoke=>I<kommando>

Ange en anropskrok I<kommando> som körs via ”%DPKG_DEFAULT_SHELL% -c” före eller efter B<dpkg> körs för åtgärderna I<unpack>, I<configure>, I<install>, I<triggers-only>, I<remove> och I<purge> (sedan dpkg 1.15.4) samt I<add-architecture> och I<remove-architecture> (sedan dpkg 1.17.19). Flaggan kan anges flera gånger. Ordningen på flaggorna som anges behålls och de som anges i konfigurationsfilen har företräde. Miljövariabeln B<DPKG_HOOK_ACTION> sätts för hakar i den nuvarande B<dpkg>-åtgärden. 

Anropskrokarna körs inte när B<--no-act> anges, eller vid körning som icke-root utan B<--force-not-root>.

B<Observera>: Skal kan anropa B<dpkg> flera gånger per körning, vilket kan göra att hakarna körs fler gånger än förväntat.

=item B<--path-exclude=>I<filnamnsmönster>

=item B<--list>I<filnamnsmönster>

Sätt I<filnamnsmönster> som ett sökvägsfilter, antingen genom att exkludera eller åter inkludera tidigare exkluderade sökvägar som motsvarar det angivna mönstret under installationen (sedan dpkg 1.15.8).

B<Varning>: Tänk på att du kan totalt ödelägga ditt system, beroende på vilka sökvägar du exkluderar, så använd med tillförsikt.

Filnamnsmönstrena använder samma sorts jokertecken som skalet, där ”*” motsvarar en sekvens av valfritt antal tecken, inklusive den tomma strängen och även ”/”. Till exempel på motsvarar I<”/usr/*/READ*”> I<”/usr/share/doc/paket/README”>. ”?” motsvarar som vanligt ett ensamt tecken (även här ingår ”/”). Och ”[” inleder en teckenklass, som kan innehålla en lista över tecken, intervall och komplement. Se L<glob(7)> för detaljerad information om filnamnsmönster. B<Observera>: den nuvarande implementationen kan återinkludera fler kataloger och symboliska länkar än nödvändigt, speciellt nänär det finns en mer specifik återinkludering, för att vara på den säkra sidan och undvika möjliga uppackningsfel, framtida ändringar kan komma att rätta detta.

Detta kan användas för att ta bort alla sökvägar förutom några specifika; ett typiskt användningsområde är:

 --path-exclude=/usr/share/doc/*
 --path-include=/usr/share/doc/*/copyright

för att ta bort alla dokumentationsfiler förutom upphovsrättsinformation.

Dessa två flaggor kan anges flera gånger, och kan interfolieras med varandra. De hanteras båda i den givna ordningen och det är den sista regeln som motsvarar ett filnamn som fäller avgörandet.

Filtren appliceras när binärpaketen packas upp, och därför har de bara information om vilken sorts objekt som filtreras just nu (t.ex. en normal fil eller en katalog) och kan inte se vilka objekt som kommer härnäst. Eftersom filtren har sidoeffekter (i motsats till L<find(1)>-filter), får inte det att exkludera exakta sökvägsnamn som råkar vara ett katalogobjekt som I</usr/share/doc> önskat resultat, och endast sökvägsnamnet kommer att exkluderas (vilket kan komma att automatiskt tas med igen om koden ser behovet). Eventuella senare filer som finns i den katalogen kommer inte att kunna packas upp.

B<Tips>: se till att mönstren inte expanderas av ditt skal.

=item B<--verify-format> I<formatnamn>

Väljer utdataformat för kommandot B<--verify> (sedan dpkg 1.17.2).

Det enda utdataformatet som stöds är för närvarande B<rpm>, som består av en rad för varje sökväg där ett test misslyckas. Dessa rader har följande format:

Z<>
 B<missing  > [B<c>] I<sökvägsnamn> [B<(>I<felmeddelande>B<)>]
 B<?M5??????> [B<c>] I<sökvägsnamn>

De första 9 tecknen används för att rapportera resultaten från testerna, antingen ett bokstavligt B<missing> (saknas) om filen inte finns eller dess metadata inte kan hämtas, eller ett av följande specialtecken som rapporterar resultatet från varje enskilt test:

=over 

=item ”B<?>”

Anger at testet inte kunde utföras (stöd saknas, filbehörigheter, osv).

=item ”B<.>”

Antyder att testet lyckades.

=item ”I<A-Za-z0-9>”

Antyder att testet misslyckades. Följande positioner och alfanumeriska tecken stöds för närvarande:

=over 

=item 1 ”B<?>”

Dessa test stöds för närvarande inte och är alltid ”B<?>”.

=item 2 ”B<M>”

Testet för filens läge misslyckades (sedan dpkg 1.21.0). Eftersom metadata för sökvägsnamn för närvarande inte spåras kan testet endast delvis emuleras genom en väldigt enkel heuristik för sökvägsnamn som har ett känt kondensat, vilket antyder att de bör vara vanliga filer, där testet misslyckas om sökvägsnamnet inte är en vanlig fil i filsystemet. Testet kan för närvarande aldrig lyckas eftersom tillräcklig information inte är tillgänglig.

=item 3 ”B<5>”

Kontrollen av kondensatet misslyckades, vilket betyder att filens innehåll kan ha ändrats. Detta är endast en integritetskontroll och ska inte tolkas som någon som helst form av säkerhetskontroll.

=item 4-9 ”B<?>”

Dessa test stöds för närvarande inte och är alltid ”B<?>”.

=back

=back

Raden följs av ett blanksteg och ett attributtecken. Följande attributtecken stöds:

=over 

=item ”B<c>”

Sökvägsnamnet är en konffil

=back

Slutligen följs det av ytterligare ett blanksteg och sökvägsnamnet.

Om posten var av typen B<missing> och filen faktiskt inte finns i filsystemet komemrr aden följas av ett blanksteg och felmeddelandet inom parenteser.

=item B<--status-fd> I<n>

Sänd maskinläsbar paketstatus och förloppsinformation till filhandtag I<n>. Flaggan kan anges flera gånger. Informationen lagras vanligtvis rad för rad, i följande format:

=over 

=item B<status:> I<paket>B<:> I<status>

Paketstatus ändrad; I<status> är som i statusfilen.

=item B<status:> I<paket> B<: error :> I<utökat-felmeddelande>

Ett fel uppstod. Eventuella nyradstecken i I<utökat-felmeddelanden> kommer ersättas med blanksteg innan de skrivs ut.

=item B<status:> I<fil> B<: conffile-prompt : '>I<riktig-gammal>B<'
'>I<riktig-ny>B<'> I<användarredigerad> I<distredigerad>

Användaren får en fråga om konfigurationsfiler.

=item B<processing:> I<skede>B<:> I<paket>

Sänds precis innan ett hanteringsskede påbörjas. I<Skede> är något av B<upgrade>, B<install> (båda sänds innan paketet packas upp), B<configure>, B<trigproc>, B<disappear>, B<remove>, B<purge>.

=back

=item B<--status-logger>=I<kommando>

Sänd maskinläsbar paketstatus och förloppsinformation till skal-I<kommando>ts standard in, som körs via ”%DPKG_DEFAULT_SHELL% -c” (sedan dpkg 1.16.0). Flaggan kan anges flera gånger. Utdataformatet som används är detsamma som för B<--status-fd>.

Statusloggarna körs inte när B<--no-act> anges, eller när det körs som icke-root utan B<--force-non-root>

=item B<--log=>I<filnamn>

Logga uppdateringar av statusändringar och åtgärder till I<filnamn>, istället för den förvalda I<%LOGDIR%/dpkg.log>. Om flaggan anges flera gånger används det sista filnamnet. Loggmeddelanden är på formen:

=over 

=item ÅÅÅÅ-MM-DD HH:MM:SS B<startup> I<typ> I<kommando>

För varje dpkg-körning där I<typ> är B<archives> (med I<kommando>t B<unpack> eller B<install>) eller B<packages> (med I<kommando>t B<configure>, b<triggers-only>, B<remove> eller B<purge>).

=item ÅÅÅÅ-MM-DD HH:MM:SS B<status> I<tillstånd> I<paket> I<installerad-version>

För uppdateringar om statusändringar.

=item ÅÅÅÅ-MM-DD HH:MM:SS I<åtgärd> I<paket> I<installerad-version>
I<tillgänglig-version>

För åtgärder där I<åtgärd> är en av B<install>, B<upgrade>, B<configure>, B<trigproc>, B<disappear>, B<remove> eller B<purge>.

=item ÅÅÅÅ-MM-DD HH:MM:SS B<conffile> I<filnamn> I<val>

För konffil-ändringar där I<val> är antingen B<install> (installera) eller B<keep> (behåll).

=back

=item B<--robot>

Använd ett maskinläsbart utdataformat. Detta tillhandahåller ett gränssnitt för program som behöver tolka utdata från några av de kommandon som annars inte skriver ut ett maskinläsbart utdataformat. Ingen lokalanpassning kommer att användas och utdata kommer att modifieras så att det är lättare att tolka.

Det enda kommando som för närvarande stöds är B<--version>.

=item B<--no-pager>

Använd inte någon bläddrare för att visa informationen (sedan dpkg 1.19.2).

=item B<--no-debsig>

Försök inte verifiera paketsignaturer.

=item B<--no-triggers>

Utför inte utlösare i denna körning (sedan dpkg 1.14.17), men aktiveringar kommer fortfarande att antecknas. Om det används tillsammans med B<--configure> I<paket> eller B<--triggers-only> I<paket> kommer det namngivna paketets postinst fortfarande att köras även om det enda som behövdes var en körning av utlösare. Om du använder denna flagga kan det hända att paket hamnar i felaktiga B<väntar på utlösare>- och B<utlösare väntar>-tillstånd. Detta kan rättas senare genom att köra: B<dpkg --configure --pending>.

=item B<--triggers>

Annullerar ett tidigare B<--no-triggers> (sedan dpkg 1.14.17).

=back

=head1 RETURVÄRDE

=over 

=item B<0>

Den önskade funktionen utfördes utan fel. Eller ett test eller ett påstående returnerade sant.

=item B<1>

Ett test eller ett påstående returnerade falskt.

=item B<2>

Ödesdigert eller irreparabelt fel på grund av felaktig användning på kommandoraden, eller interaktioner med systemet, såsom databasåtkomst, minnesallokeringer, osv.

=back

=head1 MILJÖVARIABLER

=head2 Extern miljö

=over 

=item B<PATH>

Den här variabeln förväntas vara angiven i miljön och peka på de systemsökvägar där flera krävda program hittas. Om den inte är satt eller programmen inte hittas kommer B<dpkg> att avbryta.

=item B<HOME>

Om satt så kommer B<dpkg> att använda det som den katalog från vilken det ska läsa den användarspecifika konfigurationsfilen.

=item B<TMPDIR>

Om satt så kommer B<dpkg> att använda det som den katalog där det skapar temporära filer och kataloger.

=item B<SHELL>

Programmet B<dpkg> kommer att exekveras när ett nytt skal startas, eller när ett kommando startas via ett skal.

=item B<PAGER>

=item B<DPKG_PAGER>

Programmet B<dpkg> kommer att köra när en bläddrare körs, vilken kommer att köras med ”B<$SHELL -c>”, till exempel när skillnader i konffiler ska visas. Om B<SHELL> inte är satt kommer ”B<%DPKG_DEFAULT_SHELL%>” att användas istället.

B<DPKG_PAGER> överstyr miljövariabeln B<PAGER> (sedan dpkg 1.19.2). Om inget av programmen som pekas på av B<DPKG_PAGER> eller B<PAGER> finns kommer följande program att försöka användas, i ordning (sedan dpkg 1.22.12): standardbläddraren B<%DPKG_DEFAULT_PAGER>, så B<less>, B<more>, och slutligen B<cat>.

=item B<DPKG_COLORS>

Väljer färgläge (sedan dpkg 1.18.5). För närvarande godtas följande värden: B<auto> (förval), B<always> och B<never>.

=item B<DPKG_NLS>

Om satt, används för att bestämma om lokalt språkstöd ska aktiveras, även känt som internationaliseringsstöd (eller i18n) (sedan dpkg 1.22.7). Tillåtna värden är: B<0> och B<1> (förval).

=item B<DPKG_DEBUG>

Anger felsökningsmasken (sedan dpkg 1.21.10) från ett oktalt värde. De flaggor som för närvarande godtas beskrivs i flaggan B<--debug>.

=item B<DPKG_FORCE>

Ställer in de tvingande flaggorna (sedan dpkg 1.19.5). När variabeln är satt kommer inte de inbyggda förvalda tvingande flaggorna att användas. Om variabeln är närvarande men tom kommer alla tvingande flaggor att inaktiverats.

=item B<DPKG_ADMINDIR>

Om satt, och flaggorna B<--admindir> och B<-root> inte har angivits, används värdet som administrativ katalog för B<dpkg> (sedan dpkg 1.20.0).

=item B<DPKG_FRONTEND_LOCKED>

Ställer in ett pakethanterarskal att meddela dpkg att det inte ska ta skal-låset (sedan dpkg 1.19.1).

=item B<DPKG_PATH_PASSWD>

Anger sökvägsnamnet för systemets F<passwd>-fil. Sökvägen är relativ till katalogen som angavs med B<--root>. Förval är F</etc/passwd>.

Sedan dpkg 1.22.16.

=item B<DPKG_PATH_GROUP>

Anger sökvägsnamnet för systemets F<group>-fil. Sökvägen är relativ till katalogen som angavs med B<--root>. Förval är F</etc/group>.

Sedan dpkg 1.22.16.

=back

=head2 Intern miljö

=over 

=item B<LESS>

Definieras av B<dpkg> till ”B<-FRSXMQ>” om det inte redan har satts, när en bläddrare startas (sedan dpkg 1.19.2). För att ändra det förvalda beteendet kan den här variabeln ställas in på förhand till ett annat värde, däribland en tom sträng, eller så kan variablerna B<PAGER> eller B<DPKG_PAGER> ställas in till att inaktivera specifika flaggor med ”B<-+>”, till exempel B<DPKG_PAGER="less -+F">.

=item B<DPKG_ROOT>

Definieras av B<dpkg> i utvecklarskriptets miljö till att ange vilken installation det ska utföras på (sedan dpkg 1.18.5). Värdet är tänkt att läggas till först i alla sökvägar utvecklarskripten opererar på. Under vanlig körning är den här variabeln tom. När paket installeras i ett annat B<instdir> startar B<dpkg> normalt utecklarskipten med L<chroot(2)> och lämnar variabeln tom, men om B<--force-script-chrootless> anges kommer L<chroot(2)>-anropet att hoppas över och B<instdir> är icke-tomt.

=item B<DPKG_ADMINDIR>

Definieras av B<dpkg> i utvecklarskriptets miljö för att ange vilket administrativ B<dpkg>-katalog som ska användas (sedan dpkg 1.16.0). Den här variabeln är alltid satt till aktuellt värde för B<--admindir>.

=item B<DPKG_FORCE>

Definieras av B<dpkg> i underprocessmiljöer till namnen på alla för närvarande aktiverade tvingande flaggor, avdelade med komma (sedan dpkg 1.19.5).

=item B<DPKG_SHELL_REASON>

Definieras av B<dpkg> i skalet som startas för att undersöka situationen efter konfigurationsfilsfrågan (sedan dpkg 1.15.6). Tillåtet värde är för närvarande: B<conffile-prompt>.

=item B<DPKG_CONFFILE_OLD>

Definieras av B<dpkg> i skalet som startas för att undersöka situationen efter konfigurationsfilsfrågan (sedan dpkg 1.15.6). Innehåller sökvägen till den gamla konfigurationsfilen.

=item B<DPKG_CONFFILE_NEW>

Definieras av B<dpkg> i skalet som startas för att undersöka situationen efter konfigurationsfilsfrågan (sedan dpkg 1.15.6). Innehåller sökvägen till den nya konfigurationsfilen.

=item B<DPKG_HOOK_ACTION>

Definieras av B<dpkg> i skalet som startas när en krokåtgärd exekveras (sedan dpkg 1.15.49. Innehåller aktuell B<dpkg>-åtgärd.

=item B<DPKG_RUNNING_VERSION>

Definieras av B<dpkg> i utvecklarskriptets miljö till versionen av den instans av B<dpkg> som körs för tillfället (sedan dpkg 1.14.17).

=item B<DPKG_MAINTSCRIPT_PACKAGE>

Definieras av B<dpkg> i utvecklarskriptets miljö till (det icke arkitekturkvalificerade) namnet på paketet som hanteras (sedan dpkg 1.14.17).

=item B<DPKG_MAINTSCRIPT_PACKAGE_REFCOUNT>

Definieras av B<dpkg> i utvecklarskriptets miljö till paketets referensräknare, dvs. antalet paketinstanser med ett tillstånd högre än B<not-installed> (sedan dpkg 1.17.2).

=item B<DPKG_MAINTSCRIPT_ARCH>

Definieras av B<dpkg> i utvecklarskriptets miljö till arkitekturen paketet byggdes för (sedan dpkg 1.15.4).

=item B<DPKG_MAINTSCRIPT_NAME>

Definieras av B<dpkg> i utvecklarskriptets miljö till namnet på det skript som körs, en av B<preinst>, B<postinst>, B<prerm> eller B<postrm> (sedan dpkg 1.15.7).

=item B<DPKG_MAINTSCRIPT_DEBUG>

Definieras av B<dpkg> i utvecklarskriptets miljö till ett värde (”B<0>” eller ”B<1>”) som anger huruvida felsökning har efterfrågats (sedan dpkg 1.18.4).

=back

=head1 FILER

=over 

=item I<%PKGCONFDIR%/dpkg.cfg.d/[0-9a-zA-Z_-]*>

Konfigurationsfragmentfiler (sedan dpkg 1.15.4).

=item I<%PKGCONFDIR%/dpkg.cfg>

Konfigurationsfil med förvalda inställningar.

=item I<%LOGDIR%/dpkg.log>

Förvald loggfil (se I<%PKGCONFDIR%/dpkg.cfg> och flaggan B<--log>).

=back

Övriga filer som listas här finns i sina förvalda kataloger, se flaggan B<--admindir> för information om hur du ändrar placeringen av dessa filer.

=over 

=item I<%ADMINDIR%/available>

Lista över tillgängliga paket.

=item I<%ADMINDIR%/status>

Status för tillgängliga paket. Filen innehåller information om huruvida ett paket är markerat för borttagning eller ej, om det är installerat eller ej, osv. Se sektionen L</INFORMATION OM PAKET> för ytterligare information.

Statusfilen säkerhetskopieras dagligen i I<%BACKUPSDIR%>. Det kan vara nyttigt om den går förlorad eller skrivs sönder på grund av problem med filsystemet.

=back

Formatet och innehållet i ett binärpaket beskrivs i L<deb(5)>.

=head2 Filnamn i filsystemet

Under uppackning och konfigurering använder B<dpkg> olika filnamn för säkerhetskopior och återställning. Här följer en förenklad förklaring av hur dessa filnamn används under paketinstallationen.

=over 

=item F<*.dpkg-new>

Vid uppackning extraherar B<dpkg> nya filsystemsobjekt till I<sökvägsnamn>B<.dpkg-new> (förutom för existerande kataloger eller symboliska länkar till kataloger som hoppas över), när det är färdigt och efter att säkerhetskopior har skapats av de gamla objekten får objekten namnen bytt till I<sökvägsnamn>.

=item F<*.dpkg-tmp>

Under uppackning tar B<dpkg> säkerhetskopior av gamla filsystemsobjekt i I<sökvägsnamn>B<.dpkg-tmp> efter att ha packat upp de nya objekten. Dessa säkerhetskopior utförs antingen som namnbyten för kataloger (men bara om de byter typ), en ny symbolisk länk-kopia för symboliska länkar, eller en hård länk för andra filsystemsobjekt, förutom för konfigurationsfiler som inte säkerhetskopieras eftersom de hanteras i ett senare steg.

Om en återställning behövs används dessa säkerhetskopior för att återställa föregående innehåll i objekten. Dessa tas automatiskt bort när installationen är färdig.

=item F<*.dpkg-old>

Under konfiguration, vid installation av en ny version, kan B<dpkg> ta en säkerhetskopia av den tidigare ändrade konfigurationsfilen som I<sökvägsnamn>B<.dpkg-old>.

=item F<*.dpkg-dist>

Under konfiguration, när den gamla versionen behålls, kan B<dpkg> ta en säkerhetskopia av den nya omodifierade konfigurationsfilen som I<sökvägsnamn>B<.dpkg-dist>.

=back

=head1 SÄKERHET

Alla operationer som behöver skrivåtkomst till databasen eller filsystemet anses vara privilegierade operationer som kan tillåta utökning av rootbehörigheter. Operationerna får aldrig delegeras till en obetrodd användare eller göras på obetrodda paket, eftersom det kan tillåta rootåtkomst till systemet.

Vissa operationer (såsom bekräftelse av paket) kan behöva rootprivilegier för att nå filer på filsystemet som annars inte skulle vara tillgängliga på grund av begränsade behörigheter, men bör annars fungera som normalt och generera lämpliga meddelanden i dessa tillfällen.

Frågeoperationer bör aldrig kräva root-behörighet, och delegering av exekvering av dem till icke-privilegierade användare via något kommando föra att få root-behörighet kan ha säkerhetskonsekvenser (såsom utökning av privilegier), till exempel när en siduppdelare körs automatiskt från verktyget.

Se även stycket B<SÄKERHET> i manualsidorna L<dpkg-deb(1)> och L<dpkg-split(1>).

=head1 PROGRAMFEL

B<--no-act> ger oftast mindre information än vad som vore hjälpsamt.

=head1 EXEMPEL

För att lista paket relaterade till textredigeringsprogrammet L<vi(1)> (observera att B<dpkg-query> inte längre läser in I<available>-filen som standard, och att flaggan B<dpkg-query> B<--load-avail> istället bör användas för det):

=over 

 dpkg -l '*vi*'

=back

För att se posterna i I<%ADMINDIR%/available> för två paket:

=over 

 dpkg --print-avail vim neovim | less

=back

För att själv söka i paketlistan:

=over 

 dpkg --print-avail | less

=back

För att ta bort det installerade paketet neovim:

=over 

 dpkg -r neovim

=back

För att installera ett paket måste du först leta på det i ett arkiv eller på en mediaskiva. När du använder ett arkiv baserat på en poolstruktur räcker det att känna till namnet på paketet för att hitta sökvägen:

=over 

 dpkg -i /media/bdrom/pool/main/v/vim/vim_9.0.2018-1_amd64.deb

=back

För att göra en lokal kopia av paketmarkeringarna:

=over 

 dpkg --get-selections >mitturval

=back

Du kan överföra filen till en annan dator, och efter att du har uppdaterat I<available>-filen där med ditt önskade pakethanterarskal (se L<https://wiki.debian.org/Teams/Dpkg/FAQ#set-selections> för mer information), till exempel:

=over 

 apt-cache dumpavail | dpkg --merge-avail

=back

så kan du installera den med:

=over 

 dpkg --clear-selections
 dpkg --set-selections <mitturval

=back

Observera att detta faktiskt inte kommer installera eller ta bort någonting, utan bara sätta valstatus på de efterfrågade paketen. Du måste använda ett annat program för att faktiskt hämta och installera de efterfrågade paketen. Till exempel kan du köra B<apt-get dselect-upgrade>.

För normalt bruk kommer du att upptäcka att L<dselect(1)> tillhandahåller ett bekvämare sätt att ändra paketmarkeringarna.

=head1 YTTERLIGARE FUNKTIONER

Ytterligare funktioner kan erhållas genom att installera något av följande paket: B<apt>, B<aptitude> och B<debsig-verify>.

=head1 SE ÄVEN

L<aptitude(8)>, L<apt(8)>, L<dselect(1)>, L<dpkg-deb(1)>, L<dpkg-query(1)>, L<deb(5)>, L<deb-control(5)>, L<dpkg.cfg(5)>, and L<dpkg-reconfigure(8)>.

=head1 FÖRFATTARE

Se B<%PKGDOCDIR%/THANKS> för listan över personer som har bidragit till B<dpkg>.


=head1 ÖVERSÄTTNING

Peter Krefting och Daniel Nylander.
