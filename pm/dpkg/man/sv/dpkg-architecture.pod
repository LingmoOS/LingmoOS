
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAMN

dpkg-architecture - ställ in och bestäm arkitektur för paket som byggs

=head1 SYNOPS

B<dpkg-architecture> [I<flagga>...] [I<åtgärd>]

=head1 BESKRIVNING

B<dpkg-architecture> innehåller en funktion för att bestämma och ställa in bygg- och värdarkitekturerna för att bygga paket.

Byggarkitekturen bestäms alltid av antingen variabeln B<DEB_BUILD_ARCH> om den är satt (och B<--force> inte anges) eller genom ett externt anrop till L<dpkg(1)> och kan inte väljas från kommandoraden.

Du kan ange värdarkitektur genom att ange en av, eller båda, flaggorna B<--host-arch> och B<--host-type>, annars används variabeln B<DEB_HOST_ARCH> om den är satt (och B<--force> inte anges). Förvalet bestäms av ett externt anrop till L<gcc(1)>, eller är detsamma som byggarkitekturen varken B<CC> eller gcc är tillgängliga. Det räcker att ange en av B<--host-arch> och B<-host-type>, värdet på den andra kommer ställas in till ett fungerande förval. Det är faktiskt oftast bättre att bara ange den ena eftersom B<dpkg-architecture> kommer varna dig om ditt val inte överensstämmer med förvalet.

=head1 KOMMANDON

=over 

=item B<-l>, B<--list>

Skriv miljövariabler, en per rad, på formatet I<VARIABEL=värde>. Detta är förvald åtgärd.

=item B<-e>, B<--equal> I<arkitektur>

Kontrollera arkitektur för likhet (sedan dpkg 1.13.13). Det jämför den aktuella eller angivna Debian-värdarkitekturen mot I<arkitektur>, för att se om de är lika. Åtgärden expanderar inte jokertecken i arkitekturer. Kommandot avslutar med status 0 om det är en träff, 1 om det inte är en träff.

=item B<-i>, B<--is> I<arkitektur-jokertecken>

Kontrollera arkitekturens identitet (sedan dpkg 1.13.13). Det jämför den aktuella eller angivna Debian-värdarkitekturen mot I<arkitektur-jokertecken> efter att ha expanderat det som ett arkitektur-jokertecken, för att se om de är lika. Kommandot avslutar med status 0 om det är en träff, 1 om det inte är en träff.

=item B<-q>, B<--query> I<variabelnamn>

Skriv värdet på en enkel variabel.

=item B<-s>, B<--print-set>

Visar ett exportkommando. Detta kan användas för att sätta miljövariabler med POSIX-skalet eller make B<eval>, beroende på utdataformatet.

=item B<-u>, B<--print-unset>

Visar ett kommando liknande B<--print-set> men för att ta bort värdet för alla variabler.

=item B<-c>, B<--command> I<kommandosträng>

Exekvera en I<kommandosträng> i en miljö som har alla variabler satta till det bestämda värdet.

Om I<kommandosträng> innehåller skalmetatecken kommer det att anropas genom systemets bourne-skal.

=item B<-L>, B<--list-known>

Visar en lista över giltiga arkitekturnamn. Möjligen begränsad av en eller flera av träffvalen B<--match-wildcard>, B<--match-bits> eller B<--match-endian> (sedan dpkg 1.17.14).

=item B<-?>, B<--help>

Visar hjälpskärm och avslutar.

=item B<--version>

Visar version och avslutar.

=back

=head1 FLAGGOR

=over 

=item B<-a>, B<--host-arch> I<arkitektur>

Ange värd-Debianarkitekturen.

=item B<-t>, B<--host-type> I<gnu-system-typ>

Ange värd-GNU-systemtypen.

=item B<-A>, B<--target-arch> I<arkitektur>

Ange mål-Debian-arkitekturen (sedan dpkg 1.17.14).

=item B<-T>, B<--target-type> I<gnu-system-typ>

Ange mål-GNU-systemtypen (sedan dpkg 1.17.14).

=item B<-W>, B<--match-wildcard> I<arkitektur-jokertecken>

Begränsa arkitekturerna som visas med B<--list-known> till en som motsvarar det angivna arkitektur-jokertecknet (sedan dpkg 1.17.14).

=item B<-B>, B<--match-bits> I<arkitektur-bitar>

Begränsa arkitekturerna som visas med B<--list-known> till en med angivet antal CPU-bitar (sedan dpkg 1.17.14). Antingen B<32> eller B<64>.

=item B<-E>, B<--match-endian> I<architecture-endian>

Begränsa arkitekturerna som visas med B<--list-known> till en som har angiven endian (sedan dpkg 1.17.14). Antingen B<little> (liten endian) eller B<big> (stor endian).

=item B<--print-format> I<format>

Väljer utdataformatet för B<--print-set> och B<--print-unset> (sedan dpkg 1.20.6), till antingen B<shell> (förval) eller B<make>.

=item B<-f>, B<--force>

Värden som sätts av befintliga miljövariabler med samma namn som de som används av skriptet används (t.ex av B<dpkg-architecture>), såvida inte denna tvingande flagga anges. Det gör det möjligt för användaren att överstyra ett värde även om anropet till B<dpkg-architecture> är begravt djupt inuti ett annat skript (till exempel L<dpkg-buildpackage(1)>).

=back

=head1 TERMINOLOGI

=over 

=item byggmaskin

Maskinen paketet byggs på.

=item värdmaskin

Maskinen paketet byggs för.

=item målmaskin

Maskinen kompilatorn bygger för, eller emulatorn kör kod för. Endast nödvändigt för att bygga en korsverktygskedja (eller emulator), en som byggs på byggarkitekturen och körs på målarkitekturen, och som själv kommer att bygga (eller köra under emulering) kod för målarkitekturen.

=item Debianarkitektur

Debianarkitektursträngen, som används av binärpaket och anger binärträdet i paketarkivet.

Exempel: i386, sparc, hurd-i386.

=item Debianarkitektur-tupel

En Debianarkitektur-tupel är den fullt kvalificerade arkitekturen med alla dess komponenter detaljerat redogjort för. Den skiljer sig från Debianarkitekturen i det att åtminstone I<cpu>-komponenten inte innehåller I<abi>. Den nuvarande tupeln har formen I<abi>-I<libc>-I<os>-I<cpu>.

Exempel: base-gnu-linux-amd64, eabihf-musl-linux-arm.

=item Debianarkitektursökmönster

Ett Debianarkitektursökmönster är en speciell arkitektursträng som matchar alla äkta arkitekturer som finns i den. Den genella formen är en Debianarkitektur-tupel med fyra eller färre element, och där åtminstone ett av dem är B<any>. Saknade element i tupeln läggs till i början implicit som B<any>, och följande par är därmet ekvivalenta:

=over 

=item B<any>-B<any>-B<any>-B<any> = B<any>

=item B<any>-B<any>-I<os>-B<any> = I<os>-B<any>

=item B<any>-I<libc>-B<any>-B<any> = I<libc>-B<any>-B<any>

=back

Exempel: linux-any, any-i386, hurd-any, eabi-any-any-arm, musl-any-any.

=item GNU-systemtyp

En arkitekturspecificeringssträng som består av två delar, avdelade med bindestreck: processor och system.

Processordelen innehåller aldrig ett bindestreck, medan systemdelen kan i sig innehålla ett bindestreck för att skilja mellan en kärna och dess generella ABI, där det generella ABI:et kan innehålla både ABI-angivelser både för körtid (såsom libc) och program, sammanslagna utan bindestreck.

Exempel: i586-linux-gnu, sparc-linux-gnu, i686-gnu, x86_64-netbsd.

=item multiark-triplett

Den förtydligade GNU-systemtypen, använd i filsystemssökväg. Tripletten förändras inte när baslinje-ISA:en uppdateras, vilket innebär att de resulterande sökvägarna är stabila över tid. De enda skillnaderna mot GNU-systemtypen är för närvarande att CPU-delen för i386-baserade system alltid är i386.

Exempel: i386-linux-gnu, x86_64-linux-gnu. Exempel på sökvägar: /lib/powerpc64le-linux-gnu/, /usr/lib/i386-kfreebsd-gnu/.

=back

=head1 VARIABLER

Följande variabler läses från miljön (med mindre B<--force> har angivits) och sätts av B<dpkg-architecture> (se stycket B<TERMINOLOGI> för en beskrivning av hur namngivningen är uppbyggd):

=over 

=item B<DEB_BUILD_ARCH>

Debianarkitekturen för byggmaskinen.

B<Observera>: Om du inte bygger verktyg som behöver köras under bygget är det här antagligen inte variablerna du ser efter. Se stycket L</TERMINOLOGI> för betydelsen av dessa termer.

=item B<DEB_BUILD_ARCH_ABI>

Debian-ABI-namnet för byggmaskinen (sedan dpkg 1.18.11).

=item B<DEB_BUILD_ARCH_LIBC>

Debian-libc-namnet för byggmaskinen (sedan dpkg 1.18.11).

=item B<DEB_BUILD_ARCH_OS>

Debiansystemnamnet på byggmaskinen (sedan dpkg 1.13.2).

=item B<DEB_BUILD_ARCH_CPU>

Debian-processornamnet för byggmaskinen (sedan dpkg 1.13.2).

=item B<DEB_BUILD_ARCH_BITS>

Pekarstorleken för byggmaskinen (i bitar; sedan dpkg 1.15.4).

=item B<DEB_BUILD_ARCH_ENDIAN>

Endian för byggmaskinen (little / big; sedan dpkg 1.15.4).

=item B<DEB_BUILD_GNU_CPU>

GNU CPU-delen av B<DEB_BUILD_GNU_TYPE>.

=item B<DEB_BUILD_GNU_SYSTEM>

GNU-systemdelen av B<DEB_BUILD_GNU_TYPE>.

=item B<DEB_BUILD_GNU_TYPE>

GNU-systemtypen för byggmaskinen.

=item B<DEB_BUILD_MULTIARCH>

Den förtydligade GNU-systemtypen för byggmaskinen, används för sökvägar i filsystemet.

=item B<DEB_HOST_ARCH>

Debianarkitekturen för värdmaskinen.

=item B<DEB_HOST_ARCH_ABI>

Debian-ABI-namnet för värdmaskinen (sedan dpkg 1.18.11).

=item B<DEB_HOST_ARCH_LIBC>

Debian-libc-amnet för värdmaskinen (sedan dpkg 1.18.11).

=item B<DEB_HOST_ARCH_OS>

Debiansystemnamnet för värdmaskinen (sedan dpkg 1.13.2).

=item B<DEB_HOST_ARCH_CPU>

Debian-processornamnet för värdmaskinen (sedan dpkg 1.13.2).

=item B<DEB_HOST_ARCH_BITS>

Pekarstorleken för värdmaskinen (i bitar; sedan dpkg 1.15.4).

=item B<DEB_HOST_ARCH_ENDIAN>

Endian för värdmaskinen (little / big; sedan dpkg 1.15.4).

=item B<DEB_HOST_GNU_CPU>

GNU-processordelen av B<DEB_HOST_GNU_TYPE>.

=item B<DEB_HOST_GNU_SYSTEM>

GNU-systemdelen av B<DEB_HOST_GNU_TYPE>.

=item B<DEB_HOST_GNU_TYPE>

GNU-systemtypen för värdmaskinen.

=item B<DEB_HOST_MULTIARCH>

Den förtydligade GNU-systemtypen för värdmaskinen, används för sökvägar i filsystemet (sedan dpkg 1.16.0).

=item B<DEB_TARGET_ARCH>

Debianarkitekturen för målmaskinen (sedan dpkg 1.17.14).

B<Observera>: Om du inte bygger korsverktygskedjor (eller emulatorer) är det här antagligen inte variablerna du ser efter. Se stycket L</TERMINOLOGI> för betydelsen av dessa termer.

=item B<DEB_TARGET_ARCH_ABI>

Debian-ABI-namnet för målmaskinen (sedan dpkg 1.18.11).

=item B<DEB_TARGET_ARCH_LIBC>

Debian-libc-namnet för målmaskinen (sedan dpkg 1.18.11).

=item B<DEB_TARGET_ARCH_OS>

Debiansystemnamnet för målmaskinen (sedan dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_CPU>

Debian-processornamnet för målmaskinen (sedan dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_BITS>

Pekarstorleken för målmaskinen (i bitar; sedan dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_ENDIAN>

Endian för målmaskinen (little / big; sedan dpkg 1.17.14).

=item B<DEB_TARGET_GNU_CPU>

GNU CPU-delen av B<DEB_TARGET_GNU_TYPE> (sedan dpkg 1.17.14).

=item B<DEB_TARGET_GNU_SYSTEM>

GNU-systemdelen av B<DEB_TARGET_GNU_TYPE> (sedan dpkg 1.17.14).

=item B<DEB_TARGET_GNU_TYPE>

GNU-systemnamnet för målmaskinen (sedan dpkg 1.17.14).

=item B<DEB_TARGET_MULTIARCH>

Den förtydligade GNU-systemtypen för målmaskinen, används för sökvägar i filsystemet (sedan dpkg 1.17.14).

=back

=head1 FILER

=head2 Arkitekturtabeller

Alla dessa filer måste finnas för att B<dpkg-architecture> ska fungera. Deras placering kan överstyras vid körning med miljövariabeln B<DPKG_DATADIR>. Tabellerna innehåller ett pseudo-fält med format-B<Version> på första raden för att ange format, så att tolkar kan kontrollera om de förstår det, såsom "# Version=1.0".

=over 

=item I<%PKGDATADIR%/cputable>

Tabell över kända processornamn och deras motsvarande GNU-namn. Formatversion 1.0 (sedan dpkg 1.13.2).

=item I<%PKGDATADIR%/ostable>

Tabell över kända operativsystemsnamn och deras motsvarande GNU-namn. Formatversion 2.0 (sedan dpkg 1.18.11).

=item I<%PKGDATADIR%/tupletable>

Mappning mellan Debianarkitektur-tuplar och Debianarkitekturnamn. Formatversion 1.0 (sedan dpkg 1.18.11).

=item I<%PKGDATADIR%/abitable>

Tabell över Debianarkitektur-ABI-attributöverstyrningar. Formatversion 2.0 (sedan dpkg 1.18.11).

=back

=head2 Paketeringsstöd

=over 

=item I<%PKGDATADIR%/architecture.mk>

Makefile-klipp som sätter alla variabler B<dpkg-architecture> skriver (sedan dpkg 1.16.1):

=back

=head1 EXEMPEL

B<dpkg-architecture> godtar flaggan B<-a> och sänder den vidare till B<dpkg-architecture>. Andra exempel:

=over 

 CC=i386-gnu-gcc dpkg-architecture -c debian/rules build

 eval $(dpkg-architecture -u)

=back

Kontrollera om aktuell eller angiven värdarkitektur är identisk till en arkitektur:

=over 

 dpkg-architecture -elinux-arm64

 dpkg-architecture -ariscv64 -elinux-riscv64

=back

Se om den aktuella eller angivna arkitekturen är ett Linuxsystem:

=over 

dpkg-architecture -ilinux-any

 dpkg-architecture -aamd64 -ilinux-any

=back

=head2 Använda i debian/rules

Miljövariablerna som sätts av B<dpkg-architecture> sänds till I<debian/rules> som make-variabler (se dokumentationen för make). Du bör dock inte bero på dem eftersom detta förhindrar manuella anrop till skriptet. Du bör istället alltid initiera dem med B<dpkg-architecture> med B<-q>-flaggan. Här är några exempel, vilka även visar hur du kan förbättra stödet för korskompilering i ditt paket:

Hämta GNU-systemtypen och vidaresänd den till ./configure:

=over 

 DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
 DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
 [...]
 ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
   confflags += --build=$(DEB_HOST_GNU_TYPE)
 else
   confflags += --build=$(DEB_BUILD_GNU_TYPE) \
                --host=$(DEB_HOST_GNU_TYPE)
 endif
 [...]
 ./configure $(confflags)

=back

Gör något endast för en specifik arkitektur:

=over 

 DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)

 ifeq ($(DEB_HOST_ARCH),arm64)
   [...]
 endif

=back

eller, om du bara vill testa på processor- eller OS-typ, använd variablerna B<DEB_HOST_ARCH_CPU> eller B<DEB_HOST_ARCH_OS>.

Observera att du även kan bero på att ett externt Makefile-klipp sätter alla variabler B<dpkg-architecture> kan tillhandahålla:

=over 

include %PKGDATADIR%/architecture.mk

 ifeq ($(DEB_HOST_ARCH),arm64)
   [...]
 endif

=back

Oavsett bör du aldrig använda B<dpkg --print-architecture> för att hämta arkitekturinformation när paketet byggs.

=head1 MILJÖVARIABLER

=over 

=item B<DPKG_DATADIR>

Om satt, används som datakatalog för B<dpkg>, där arkitekturtabellerna ligger (sedan dpkg 1.14.17). Förval är ”%PKGDATADIR%”.

=item B<DPKG_COLORS>

Väljer färgläge (sedan dpkg 1.18.5). För närvarande godtas följande värden: B<auto> (förval), B<always> och B<never>.

=item B<DPKG_NLS>

Om satt, används för att bestämma om lokalt språkstöd ska aktiveras, även känt som internationaliseringsstöd (eller i18n) (sedan dpkg 1.19.0). Tillåtna värden är: B<0> och B<1> (förval).

=back

=head1 ANTECKNINGAR

De långa kommando- och flaggnamnen är endast tillgängliga sedan dpkg 1.17.17.

=head1 SE ÄVEN

L<dpkg-buildpackage(1)>.


=head1 ÖVERSÄTTNING

Peter Krefting och Daniel Nylander.
