
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 BEZEICHNUNG

dpkg - Paketverwalter für Debian

=head1 ÜBERSICHT

B<dpkg> [I<Option> …] I<Aktionen>

=head1 WARNUNG

Dieses Handbuch ist für Benutzer gedacht, die die Befehlszeilenoptionen und Paketzustände von B<dpkg> detaillierter verstehen wollen, als durch B<dpkg --help> beschrieben ist.

Es sollte I<nicht> von Paketbetreuern verwendet werden, die verstehen wollen, wie B<dpkg> ihr Paket installieren wird. Die Beschreibung der Aktionen von B<dpkg> beim Installieren und Entfernen von Paketen ist besonders unzulänglich.

=head1 BESCHREIBUNG

B<dpkg> ist ein Werkzeug mittlerer Stufe, um Debian-Pakete zu installieren, zu bauen, zu entfernen und zu verwalten. Die primäre und benutzerfreundlichere Oberfläche für B<dpkg> als CLI (Befehlszeilenwerkzeug) ist L<apt(8)> und als TUI (Terminal-Benutzeroberfläche) ist L<aptitude(8)>. B<dpkg> selbst wird komplett über Befehlszeilenoptionen gesteuert, die aus genau einer Aktion und Null oder mehreren Optionen bestehen. Der Aktionsparameter teilt B<dpkg> mit, was zu tun ist, und die Optionen steuern die Aktionen in irgendeiner Weise.

B<dpkg> kann auch als Oberfläche für L<dpkg-deb(1)> und L<dpkg-query(1)> verwendet werden. Die Liste der unterstützten Aktionen kann im Abschnitt B<AKTIONEN> gefunden werden. Falls so eine Aktion angetroffen wird, führt B<dpkg> einfach B<dpkg-deb> oder B<dpkg-query> mit den übergebenen Parametern aus, allerdings werden derzeit keine spezifischen Optionen an diese übergeben. Um solche Optionen zu verwenden, müssen die Backends direkt aufgerufen werden.

=head1 INFORMATIONEN ÜBER PAKETE

B<dpkg> verwaltet einige nützliche Informationen über verfügbare Pakete. Die Informationen sind in drei Klassen unterteilt: B<Status>, B<Auswahlstatus> und B<Schalter>. Diese Werte sind hauptsächlich zur Änderung durch B<dselect> gedacht.

=head2 Paketstatus

=over 

=item B<not-installed> (nicht-installiert)

Das Paket ist nicht auf Ihrem System installiert.

=item B<config-files> (Config-Dateien)

Nur die Konfigurationsdateien oder das Skript B<postrm> und die von ihm für das Entfernen des Pakets benötigten Daten existieren auf dem System.

=item B<half-installed> (halb-installiert)

Die Installation des Paketes wurde begonnen, aber aus irgendeinem Grund nicht abgeschlossen.

=item B<unpacked> (entpackt)

Das Paket ist entpackt, aber nicht konfiguriert.

=item B<half-configured> (halb-konfiguriert)

Das Paket ist entpackt und die Konfiguration wurde begonnen, aber aus irgendeinem Grund nicht abgeschlossen.

=item B<triggers-awaited> (Trigger-erwartend)

Das Paket erwartet Trigger-Verarbeitung durch ein anderes Paket.

=item B<triggers-pending> (Trigger-anhängig)

Das Paket wurde getriggert.

=item B<installed> (installiert)

Das Paket ist korrekt entpackt und konfiguriert.

=back

=head2 Paketauswahlstatus

=over 

=item B<install> (installiere)

Das Paket ist zur Installation ausgewählt.

=item B<hold> (halten)

Eine mit B<halten> markierte Version wird auf der gleichen Version gehalten, d.h. keine automatischen Installationen, Upgrades oder Entfernungen werden mit ihnen durchgeführt, außer diese Aktionen werden explizit angefordert oder mit der Option B<--force-hold> automatisch durchgeführt.

=item B<deinstall> (deinstalliere)

Das Paket ist zur Deinstallation ausgewählt (d.h. wir wollen alle Dateien außer den Konfigurationsdateien entfernen).

=item B<purge> (vollständig löschen)

Das Paket ist zum vollständigen Löschen („purge“) ausgewählt (d.h. wir wollen alle Dateien aus den Systemverzeichnissen inklusive der Konfigurationsdateien entfernen).

=item B<unknown> (unbekannt)

Die Paketauswahl ist unbekannt. Ein Paket, das auch im Zustand B<not-installed> und ohne Schalter B<ok> ist, wird beim nächsten Abspeichern der Datenbank vergessen.

=back

=head2 Paketschalter

=over 

=item B<ok>

Ein mit B<ok> markiertes Paket ist in einem bekannten Zustand, kann aber weitere Verarbeitung benötigen.

=item B<reinstreq> (Neuinstnotwendig)

Ein mit B<Neuinstnotwendig> markiertes Paket ist defekt und muss erneut installiert werden. Diese Pakete können nicht entfernt werden, es sei denn, Sie erzwingen dies mit der Option B<--force-remove-reinstreq>.

=back

=head1 AKTIONEN

=over 

=item B<-i>, B<--install> I<Paketdatei> …

Installiert das Paket. Falls die Option B<--recursive> oder B<-R> angegeben ist, muss sich I<Paketdatei> stattdessen auf ein Verzeichnis beziehen.

Die Installation besteht aus folgenden Schritten:

=over 4

=item B<1.>

Die Steuerdateien aus dem neuen Paket wird entnommen.

=item B<2.>

Falls eine andere Version des gleichen Pakets vor der neuen Installation installiert war, dann wird das I<prerm>-Skript des alten Paketes ausgeführt.

=item B<3.>

Das I<preinst>-Skript wird ausgeführt, falls dies vom Paket bereitgestellt wird.

=item B<4.>

Die neuen Dateien werden entpackt und gleichzeitig die alten Dateien gesichert, so dass diese, falls etwas schief geht, wiederhergestellt werden können.

=item B<5.>

Falls eine andere Version des gleichen Pakets vor der neuen Installation installiert war, dann wird das I<postrm>-Skript des alten Paketes ausgeführt. Beachten Sie, dass dieses Skript nach dem I<preinst>-Skript des neuen Pakets ausgeführt wird, da neue Dateien zeitgleich zu der Entfernung alter Dateien geschrieben werden.

=item B<6.>

Das Paket wird konfiguriert. Lesen Sie B<--configure> für detaillierte Informationen, wie dies geschieht.

=back

=item B<--unpack> I<Paketdatei> …

Entpackt das Paket, konfiguriert es aber nicht. Falls die Option B<--recursive> oder B<-R> angegeben ist, muss sich I<Paketdatei> stattdessen auf ein Verzeichnis beziehen.

Verarbeitet Trigger für B<Pre-Depends>, außer B<--no-triggers> wurde angegeben.

=item B<--configure> I<Paket> …|B<-a>|B<--pending>

Konfiguriert ein entpacktes, aber noch nicht konfiguriertes Paket. Falls B<-a> oder B<--pending> anstelle von I<Paket> angegeben ist, werden alle entpackten, aber nicht konfigurierten Pakete konfiguriert.

Um ein Paket zu rekonfigurieren, das bereits konfiguriert wurde, verwenden Sie stattdessen den Befehl L<dpkg-reconfigure(8)>. Dieser Befehl ist Teil des Projekts B<debconf>.

Die Konfiguration besteht aus folgenden Schritten:

=over 4

=item B<1.>

Die Conffiles werden entpackt und gleichzeitig die alten Conffiles gesichert, so dass diese, falls etwas schief geht, wiederhergestellt werden können.

=item B<2.>

Das I<postinst>-Skript wird ausgeführt, falls dies vom Paket bereitgestellt wird.

=back

Verarbeitet Trigger, außer B<--no-triggers> wurde angegeben.

=item B<--triggers-only> I<Paket> …|B<-a>|B<--pending>

Verarbeitet nur Trigger (seit Dpkg 1.14.17). Alle ausstehenden Trigger werden verarbeitet. Falls Paketnamen übergeben werden, werden nur die Trigger dieser Pakete verarbeitet, jedes genau einmal, wo notwendig. Die Verwendung dieser Option kann Pakete in die unzulässigen Zustände B<triggers-awaited> und B<triggers-pending> bringen. Durch die Ausführung von „B<dpkg --configure --pending>“ kann dies später behoben werden.

=item B<-r>, B<--remove> I<Paket>…|B<-a>|B<--pending>

Entfernt ein installiertes Paket. Dies entfernt alles außer Conffiles und anderen Daten, die vom Skript I<postrm> bereinigt werden, da damit eine erneute Konfiguration des Paketes vermieden wird, falls es später nochmals installiert wird. Conffiles sind Konfigurationsdateien, die in der Steuerdatei I<DEBIAN/conffiles> aufgeführt sind. Falls es keine Steuerdatei I<DEBIAN/conffiles> oder kein Skript I<DEBIAN/postrm> gibt, ist dieser Befehl äquivalent zum Aufruf von B<--purge>. Falls statt des Paketnamens B<-a> oder B<--pending> angegeben wird, werden alle Pakete, die entpackt, aber in der Datei I<%ADMINDIR%/status> zur Entfernung vorgemerkt sind, entfernt.

Entfernung eines Paketes besteht aus den folgenden Schritten:

=over 4

=item B<1.>

Das I<prerm>-Skript wird ausgeführt.

=item B<2.>

Die installierten Dateien werden entfernt.

=item B<3.>

Das I<postrm>-Skript wird ausgeführt.

=back

Verarbeitet Trigger, außer B<--no-triggers> wurde angegeben.

=item B<-P>, B<--purge> I<Paket>…|B<-a>|B<--pending>

Löscht ein installiertes oder bereits entferntes Paket vollständig. Damit wird alles entfernt, auch Conffiles und alles, was im Skript I<postrm> bereinigt wird. Falls statt des Paketnamens B<-a> oder B<--pending> angegeben wird, werden alle Pakete, die entpackt oder entfernt, aber in der Datei I<%ADMINDIR%/status> zum vollständigen Löschen vorgemerkt sind, vollständig gelöscht.

B<Hinweis>: Einige Konfigurationsdateien können B<dpkg> nicht bekannt sein, da sie separat durch die Konfigurationsskripte angelegt und verwaltet werden. In diesem Fall wird B<dpkg> sie nicht selbst entfernen, sondern das Skript I<postrm> (das von B<dpkg> aufgerufen wird) des Pakets muss sich während des vollständigen Löschens um das Entfernen kümmern. Natürlich betrifft dies nur Dateien in den Systemverzeichnissen, nicht Konfigurationsdateien, die in die Home-Verzeichnisse der individuellen Benutzer geschrieben werden.

Endgültiges Löschen eines Paketes besteht aus den folgenden Schritten:

=over 4

=item B<1.>

Das Paket wird entfernt, falls es noch nicht entfernt ist. Lesen Sie B<--remove> für detaillierte Informationen, wie dies erfolgt.

=item B<2.>

Das I<postrm>-Skript wird ausgeführt.

=back

Verarbeitet Trigger, außer B<--no-triggers> wurde angegeben.

=item B<-V>, B<--verify> [I<Paketname> …]

Überprüft die Integrität von I<Paketname> oder allen Paketen, falls nicht angegeben, indem Informationen aus den durch ein Paket installierten Dateien mit den in der B<dpkg>-Datenbank gespeicherten Dateimetadateninformationen verglichen werden (seit Dpkg 1.17.2). Die Quelle der Dateimetadateninformationen in der Datenbank ist das Binärpaket selbst. Diese Metadaten werden zum Zeitpunkt des Entpackens während des Installationsprozesses gesammelt.

Derzeit ist die einzige funktionale Prüfung eine Md5sum-Überprüfung der Dateiinhalte mit dem gespeicherten Wert in der Datei-Datenbank. Er wird nur geprüft, falls die Datenbank die Md5sum der Datei enthält. Um auf fehlende Metadaten in der Datenbank zu prüfen, kann der Befehl B<--audit> verwandt werden. Dies ist nur eine Integritätsprüfung und sollte nicht als irgend eine Art von Sicherheitsüberprüfung angesehen werden.

Das Ausgabeformat kann mit der Option B<--verify-format> ausgewählt werden. Standardmäßig wird das Format B<rpm> verwandt. Das kann sich in der Zukunft aber ändern und daher sollten Programme, die die Ausgabe dieses Befehls auswerten, explizit das Format angeben, das sie erwarten.

=item B<-C>, B<--audit> [I<Paketname> …]

Führt Plausibilitäts- und Konsistenzprüfungen der Datenbank für I<Paketname> oder alle Pakete, falls das Argument fehlt, durch (pro-Paket-Prüfungen seit Dpkg 1.17.10). Sucht beispielsweise nach Paketen, die auf Ihrem System nur teilweise installiert wurden oder fehlende, falsche oder veraltete Steuerdaten oder -dateien haben. B<dpkg> wird einen Vorschlag machen, was mit ihnen zur Korrektur gemacht werden sollte.

=item B<--update-avail> [I<Packages-Datei>]

=item B<--merge-avail> [I<Packages-Datei>]

Aktualisiert B<dpkg>s und B<dselect>s Verständnis darüber, welche Pakete verfügbar sind. Mit der Aktion B<--merge-avail> wird alte Information mit der Information aus der I<Packages-Datei> zusammengeführt. Mit der Aktion B<--update-avail> wird die alte Information durch die Information aus der I<Packages-Datei> ersetzt. Die mit Debian vertriebene I<Packages-Datei> heißt einfach „I<Packages>“. Falls das Argument I<Packages-file> fehlt oder „B<->“ benannt ist, wird es aus der Standardeingabe lesen (seit Dpkg 1.17.7). B<dpkg> hält seine Aufzeichnungen über die verfügbaren Pakete in I<%ADMINDIR%/available>.

Ein einfacher Befehl, um die Datei I<available> in einem Rutsch zu holen und zu aktualisieren, ist B<dselect update>. Beachten Sie, dass diese Datei nahezu nutzlos ist, falls Sie nicht B<dselect> sondern eine APT-basierte Oberfläche verwenden: APT verfügt über sein eigenes System, die verfügbaren Pakete zu überwachen.

=item B<-A>, B<--record-avail> I<Paketdatei> …

Aktualisiert mit den Informationen aus dem Paket I<Paketdatei> B<dpkg>s und B<dselect>s Verständnis darüber, welche Pakete verfügbar sind. Falls die Option B<--recursive> oder B<-R> angegeben ist, muss sich I<Paketdatei> stattdessen auf ein Verzeichnis beziehen.

=item B<--forget-old-unavail>

Jetzt B<veraltet> und ohne Funktion, da B<dpkg> automatisch nicht installierte nicht verfügbare Pakete vergisst (seit Dpkg 1.15.4). Allerdings nur solche, die keine Benutzerinformationen enthalten, wie Paketauswahlen.

=item B<--clear-avail>

Löscht die existierenden Informationen darüber, welche Pakete verfügbar sind.

=item B<--get-selections> [I<Paket-Name-Muster> …]

Holt die Liste von Paketauswahlen und schreibt sie in die Standardausgabe. Ohne Muster werden nicht-installierte Pakete (d.h. solche, die vorher „vollständig gelöscht“ wurden) nicht angezeigt.

=item B<--set-selections>

Setzt die Paketauswahl durch Einlesen einer Datei von der Standardeingabe. Diese Datei sollte im Format „I<Paket> I<Zustand>“ sein, wobei Zustand einer aus B<install>, B<hold>, B<deinstall> oder B<purge> ist. Leerzeilen und Kommentarzeilen (beginnend mit ‚B<#>’) sind auch erlaubt.

Die Datei I<available> muss für diesen Befehl aktuell sein, damit dies von Nutzen ist, andernfalls werden unbekannte Pakete mit einer Warnung ignoriert. Siehe die Befehle B<--update-avail> und B<--merge-avail> für weitere Informationen.

=item B<--clear-selections>

Setzt den erbetenen Zustand von jedem nicht-essenziellen Paket auf „Deinstallation“ (seit Dpkg 1.13.18). Dies ist dazu gedacht, direkt vor B<--set-selections> verwendet zu werden, um jedes Paket, das nicht in der Liste von B<--set-selections> vorkommt, zu deinstallieren.

=item B<--yet-to-unpack>

Sucht nach Paketen, die zur Installation ausgewählt wurden, die aber aus irgendeinem Grund noch nicht installiert wurden.

B<Hinweis>: Dieser Befehl verwendet sowohl die Datei „available“ als auch die Paketauswahlen.

=item B<--predep-package>

Gibt ein einzelnes Paket aus, das das Ziel einer oder mehrerer relevanter Vorabhängigkeiten ist und selbst keine unerfüllten Vorabhängigkeiten hat.

Falls ein solches Paket vorhanden ist, wird es als Dateieintrag für „Packages“ ausgegeben, der passend weiterverarbeitet werden kann.

B<Hinweis>: Dieser Befehl verwendet sowohl die Datei „available“ als auch die Paketauswahlen.

Liefert 0 zurück, wenn ein Paket ausgegeben wird und 1, wenn kein passendes Paket verfügbar ist und 2 im Fehlerfall.

=item B<--add-architecture> I<Architektur>

Fügt I<Architektur> zu der Liste von Architekturen hinzu, für die Pakete ohne die Verwendung von B<--force-architecture> installiert werden können (seit Dpkg 1.16.2). Die Architektur, für die B<dpkg> gebaut wurde (d.h. die Ausgabe von B<--print-architecture>), ist immer Teil der Liste.

=item B<--remove-architecture> I<Architektur>

Entfernt I<Architektur> von der Liste von Architekturen, für die Pakete ohne die Verwendung von B<--force-architecture> installiert werden können (seit Dpkg 1.16.2). Falls die Architektur derzeit in der Datenbank benutzt wird, dann wird die Durchführung verweigert, falls nicht B<--force-architecture> verwandt wird. Die Architektur, für die B<dpkg> gebaut wurde (d.h. die Ausgabe von B<--print-architecture>), kann niemals von der Liste entfernt werden.

=item B<--print-architecture>

Gibt die Architektur der Pakete aus, die B<dpkg> installiert (beispielsweise „i386“).

=item B<--print-foreign-architectures>

Gibt eine durch Zeilenumbrüche getrennte Liste von zusätzlichen Architekturen aus, für die B<dpkg> konfiguriert ist, Paketinstallationen zu erlauben (seit Dpkg 1.16.2).

=item B<--assert-help>

Gibt Hilfe zu den Optionen B<--assert->I<Funktionalität> aus (seit Dpkg 1.21.0).

=item B<--assert->I<Funktionalität>

Bestätigt, dass B<dpkg> die erbetene Funktionalität unterstützt. Liefert 0, falls die Funktionalität voll unterstützt wird, 1, falls die Funktionalität bekannt ist, aber noch keine Unterstützung dafür geliefert werden kann und 2, falls die Funktionalität unbekannt ist. Die aktuelle Liste von bestätigbaren Funktionalitäten ist wie folgt:

=over 

=item B<support-predepends>

Unterstützt das Feld B<Pre-Depends> (seit Dpkg 1.1.0).

=item B<working-epoch>

Unterstützt Epochen in Versionszeichenketten (seit Dpkg 1.4.0.7).

=item B<long-filenames>

Unterstützt in L<deb(5)>-Archiven lange Dateinamen (seit Dpkg 1.4.1.17).

=item B<multi-conrep>

Unterstützt mehrere B<Conflicts> und B<Replaces> (seit Dpkg 1.4.1.19).

=item B<multi-arch>

Unterstützt Multi-Arch-Felder und deren Semantik (seit Dpkg 1.16.2).

=item B<versioned-provides>

Unterstützt versionierte B<Provides> (seit Dpkg 1.17.11).

=item B<protected-field>

Unterstützt das Feld B<Protected> (seit Dpkg 1.20.1).

=back

=item B<--validate->I<Sache> I<Zeichenkette>

Bestätigt, dass die I<Sachenzeichenkette> eine korrekte Syntax hat (seit Dpkg 1.18.16). Liefert 0 zurück, falls die I<Zeichenkette> gültig ist, 1 falls die I<Zeichenkette> ungültig ist, aber in lockeren Umgebungen akzeptiert werden könnte und 2, falls die I<Zeichenkette> ungültig ist. Die aktuelle Liste der überprüfbaren I<Sachen> ist:

=over 

=item B<pkgname>

Überprüft den übergebenen Paketnamen (seit Dpkg 1.18.16).

=item B<trigname>

Überprüft den übergebenen Triggernamen (seit Dpkg 1.18.16).

=item B<archname>

Überprüft den übergebenen Architekturnamen (seit Dpkg 1.18.16).

=item B<version>

Überprüft die übergebene Version (seit Dpkg 1.18.16).

=back

=item B<--compare-versions> I<Ver1> I<op> I<Ver2>

Vergleicht Versionsnummern, wobei I<Op> ein binärer Operator ist. B<dpkg> liefert wahr (B<0>), falls die angegebene Bedingung erfüllt ist und falsch (B<1>) andernfalls. Es gibt zwei Gruppen von Operatoren, die sich in der Behandlung von leeren I<Ver1> oder I<Ver2> unterscheiden. Die folgenden behandeln leere Versionen als jünger als jede andere Version: B<lt le eq ne ge gt>. Die folgenden behandeln eine leere Version als älter als jede Version: B<lt-nl le-nl ge-nl gt-nl>. Die folgenden sind nur aus Kompatibilität zu der Steuerdateisyntax bereitgestellt: B<E<lt> E<lt>E<lt> E<lt>= = E<gt>= E<gt>E<gt> E<gt>>. Die Operatoren B<E<lt>> und B<E<gt>> sind obsolet und sollten B<nicht> verwandt werden, da ihre Semantik verwirrend ist. Beispielsweise ergibt B<0.1 E<lt> 0.1> wahr.

=begin disabled

=item B<--command-fd> I<n>

Akzeptiert auf dem Eingabe-Dateideskriptor I<n> eine Reihe von Befehlen.

B<Hinweis>: Zusätzliche auf der Befehlszeile und durch diesen Dateideskriptor gesetzte Optionen werden nicht für nachfolgende Befehle, die im gleichen Lauf ausgeführt werden, zurückgesetzt.

=end disabled

=item B<-?>, B<--help>

Zeigt eine kurze Hilfenachricht an.

=item B<--force-help>

Gibt Hilfe zu den Optionen B<--force->I<Sache> aus.

=item B<-Dh>, B<--debug=help>

Gibt Hilfe zu Fehlersuchoptionen aus.

=item B<--version>

Zeigt B<dpkg> Versionsinformationen an.

Bei der Verwendung mit B<--robot> wird die Ausgabe der Programmversionsnummer in einem numerischen, durch Punkte getrennten Format erfolgen, ohne Zeilenumbrüche.

=item B<dpkg-deb-Aktionen>

Lesen Sie L<dpkg-deb(1)> für weitere Informationen über die folgenden Aktionen und andere Aktionen, die durch die Oberfläche B<dpkg> nicht offengelegt werden.

=over 

=item B<-b>, B<--build> I<Verzeichnis> [I<Archiv>|I<Verzeichnis>]

Baut ein deb-Paket.

=item B<-c>, B<--contents> I<Archiv>

Listet den Inhalt eines deb-Pakets auf.

=item B<-e>, B<--control> I<Archiv> [I<Verzeichnis>]

Entpackt die Steuer-Informationen aus einem Paket.

=item B<-x>, B<--extract> I<Archiv> I<Verzeichnis>

Entpackt die in einem Paket enthaltenen Dateien.

=item B<-X>, B<--vextract> I<Archiv> I<Verzeichnis>

Entpackt die in einem Paket enthaltenen Dateinamen und zeigt sie an.

=item B<-f>, B<--field> I<Archiv> [I<Steuer-Feld>…]

Zeigt das oder die Steuerfeld(er) eines Pakets an.

=item B<--ctrl-tarfile> I<Archiv>

Gibt die in einem Debian-Paket enthaltene Steuer-Tar-Datei aus.

=item B<--fsys-tarfile> I<Archiv>

Gibt die in einem Debian-Paket enthaltene Dateisystem-Tar-Datei aus.

=item B<-I>, B<--info> I<Archiv> [I<Steuer-Datei>…]

Zeigt Informationen über ein Paket an.

=back

=item B<dpkg-query-Aktionen>

Lesen Sie L<dpkg-query(1)> für weitere Informationen über die folgenden Aktionen und andere Aktionen, die durch die Oberfläche B<dpkg> nicht offengelegt werden.

=over 

=item B<-l>, B<--list> I<Paketname-Muster>…

Listet Pakete auf, die auf ein gegebenes Muster passen.

=item B<-s>, B<--status> I<Paketname>…

Berichtet den Status von festgelegten Paketen.

=item B<-L>, B<--listfiles> I<Paketname> …

Listet Dateien auf, die auf Ihrem System durch I<Paketname> installiert wurden.

=item B<-S>, B<--search> I<Dateiname-Suchmuster> …

Sucht nach einem Dateinnamen aus installierten Paketen.

=item B<-p>, B<--print-avail> I<Paketname>…

Zeigt Details über I<Paketname> an, wie sie in I<%ADMINDIR%/available> enthalten sind. Benutzer von APT-basierten Oberflächen sollten stattdessen B<apt show> I<Paketname> verwenden.

=back

=back

=head1 OPTIONEN

Alle Optionen können auf der Befehlszeile, in der B<dpkg>-Konfigurationsdatei I<%PKGCONFDIR%/dpkg.cfg> oder Fragmentdateien (mit Namen, die auf das Shell-Muster ‚[0-9a-zA-Z_-]*’ passen) in den Dateien im Konfigurationsverzeichnis I<%PKGCONFDIR%/dpkg.cfg.d/> angegeben werden. Jede Zeile in der Konfigurationsdatei ist entweder eine Option (exakt die gleiche wie die Befehlszeilenoption, nur ohne führende Bindestriche) oder ein Kommentar (falls sie mit ‚B<#>’ beginnt).

=over 

=item B<--abort-after=>I<Zahl>

Ändert, nach wie vielen Fehlern B<dpkg> abbrechen wird. Der Standardwert ist 50.

=item B<-B>, B<--auto-deconfigure>

Wenn ein Paket entfernt wird, besteht die Möglichkeit, dass ein anderes installiertes Paket von dem entfernten Paket abhängt. Die Angabe dieser Option führt zur automatischen Dekonfiguration des Paketes, das von dem entfernten Paket abhängt.

=item B<-D>I<octal>, B<--debug=>I<Oktal>

Schaltet Fehlersuche ein. I<Oktal> wird durch bitweise Oder-Verknüpfung der gewünschten Werte aus der nachfolgenden Liste gebildet (beachten Sie, dass sich diese Werte in zukünftigen Veröffentlichungen verändern können). B<-Dh> oder B<--debug=help> zeigen diese Fehlersuchwerte an.

  Nummer  Beschreibung
      1   Allgemein hilfreiche Fortschrittsinformationen
      2   Aufruf und Status der Betreuerskripte
     10   Ausgabe für jede verarbeitete Datei
    100   Umfangreiche Ausgabe für jede verarbeitete Datei
     20   Ausgabe für jede Konfigurationsdatei
    200   Umfangreiche Ausgabe für jede Konfigurationsdatei
     40   Abhängigkeiten und Konflikte
    400   Umfangreiche Abhängigkeiten/Konflikte-Ausgabe
  10000   Trigger-Aktivierung und -Verarbeitung
  20000   Umfangreiche Ausgabe bezüglich Trigger
  40000   Alberne Menge an Ausgabe bezüglich Trigger
   1000   Umfangreiches Gelaber beispielsweise über das dpkg/info-Verzeichnis
   2000   Verrückte Mengen an Gelaber

=item B<--force->I<Sachen>

=item B<--no-force->I<Sachen>, B<--refuse->I<Sachen>

Erzwingt oder verweigert (B<no-force> und B<refuse> bedeuten das gleiche) bestimmte Sachen. I<Sachen> ist eine Kommata-getrennte Liste von Dingen, die im Folgenden beschrieben sind. B<--force-help> zeigt eine Meldung an, die diese beschreibt. Mit (*) markierte Dinge werden standardmäßig erzwungen.

B<Warnung>: Diese Optionen sind hauptsächlich für den Einsatz durch Experten gedacht. Der Einsatz ohne komplettes Verständnis der Auswirkungen kann Ihr gesamtes System zerstören.

=over 2

=item B<all>:

Schaltet alle „force“-Optionen ein (oder aus).

=item B<downgrade>(*):

Installiert ein Paket, selbst wenn eine neuere Version davon bereits installiert ist.

B<Warnung>: Derzeit führt B<dpkg> keine Abhängigkeitsüberprüfung bei der Installation älterer Versionen (als bereits installiert) durch (sog. Downgrade) und wird Sie daher nicht warnen, falls dadurch die Abhängigkeit eines anderen Pakets nicht mehr erfüllt ist. Dies kann ernsthafte Nebeneffekte haben, ein Downgrade einer essenziellen Systemkomponente kann Ihr gesamtes System unbrauchbar machen. Verwenden Sie diese Option mit Vorsicht.

=item B<configure-any>:

Konfiguriert auch jedes entpackte, aber unkonfigurierte Paket, von dem das aktuelle Paket abhängt.

=item B<hold>:

Erlaubt automatische Installationen, Upgrades und Entfernungen von Paketen, selbst wenn sie mit „halten“ markiert sind. B<Hinweis>: Wenn diese Aktionen explizit angefordert werden, wird der Paketauswahlzustand „halten“ immer ignoriert.

=item B<remove-reinstreq>:

Entfernt ein Paket, selbst falls es defekt ist und zur Neuinstallation markiert ist. Dies kann beispielsweise dazu führen, dass Teile des Pakets auf dem System bleiben und von B<dpkg> vergessen werden.

=item B<remove-protected>:

Entfernt, selbst falls das Paket als geschützt betrachtet wird (seit Dpkg 1.20.1). Geschützte Pakete enthalten hauptsächlich wichtige Teile der Systemstartinfrastruktur oder werden für angepasste systemlokale Metapakete verwandt. Diese zu entfernen kann dazu führen, dass das gesamte System nicht mehr starten oder benötigte Funktionalität zu Betrieb verlieren kann - verwenden Sie diese Option daher mit Vorsicht.

=item B<remove-essential>:

Entfernt, selbst falls das Paket als essenziell betrachtet wird. Essenzielle Pakete enthalten hauptsächlich sehr grundlegende Unix-Befehle. Diese werden für das Paketierungssystem, für den Betrieb des Systems im Allgemeinen oder während des Systemstarts benötigt (allerdings sollten Letztere stattdessen in geschützte Pakete umgewandelt werden). Diese zu entfernen kann dazu führen, dass das gesamte System nicht mehr arbeitet - verwenden Sie diese Option daher mit Vorsicht.

=item B<depends>:

Verwandelt alle Abhängigkeitsprobleme in Warnungen. Dies betrifft die Felder B<Pre-Depends> und B<Depends>.

=item B<depends-version>:

Ignoriert Versionen bei der Prüfung von Abhängigkeiten. Dies betrifft die Felder B<Pre-Depends> und B<Depends>.

=item B<breaks>:

Installiert, selbst falls dies ein anderes Paket beschädigt (seit Dpkg 1.14.6). Dies betrifft das Feld B<Breaks>.

=item B<conflicts>:

Installiert, selbst wenn es mit einem anderen Paket in Konflikt steht. Dies ist gefährlich, da dies gewöhnlich dazu führt, dass einige Dateien überschrieben werden. Dies betrifft das Feld B<Conflicts>.

=item B<confmiss>:

Installiert die fehlende Conffile immer ohne Rückfrage. Dies ist gefährlich, da es bedeutet, dass eine Änderung (die Entfernung) an der Datei nicht erhalten wird.

=item B<confnew>:

Falls eine Conffile modifiziert wurde und sich die Version im Paket geändert hat, wird immer die neue Version ohne Rückfrage installiert, es sei denn, B<--force-confdef> ist ebenfalls angegeben, in welchem Falle die Standardaktion bevorzugt wird.

=item B<confold>:

Falls eine Conffile modifiziert wurde und sich die Version im Paket geändert hat, wird immer die alte Version ohne Rückfrage behalten, es sei denn, B<--force-confdef> ist ebenfalls angegeben, in welchem Falle die Standardaktion bevorzugt wird.

=item B<confdef>:

Falls eine Conffile verändert wurde und sich die Version im Paket geändert hat, wird immer die Standardaktion ohne Rückfrage gewählt. Falls es keine Standardaktion gibt, wird angehalten, um den Benutzer zu fragen, es sei denn, B<--force-confnew> oder B<--force-confold> sind ebenfalls angegeben, in welchem Falle dies verwendet wird, um die letztendliche Aktion zu bestimmen.

=item B<confask>:

Falls eine Conffile verändert wurde, wird immer angeboten, sie durch die Version aus dem Paket zu ersetzen, selbst falls sich die Version in dem Paket nicht geändert hat (seit Dpkg 1.15.8). Falls auch einer von B<--force-confnew>, B<--force-confold> oder B<--force-confdef> angegeben wird, wird sie dazu verwandt, die letztendliche Aktion zu ermitteln.

=item B<overwrite>:

Überschreibt die Datei aus einem Paket mit einer Datei aus einem anderen Paket.

=item B<overwrite-dir>:

Überschreibt das Verzeichnis aus einem Paket mit einer Datei aus einem anderen Paket.

=item B<overwrite-diverted>:

Überschreibt eine umgeleitete („diverted“) Datei mit einer nicht umgeleiteten.

=item B<statoverride-add>:

Überschreibt eine existierende Status-Hinwegsetzung beim Hinzufügen (seit Dpkg 1.19.5).

=item B<statoverride-remove>:

Ignoriert eine fehlende Status-Hinwegsetzung beim Entfernen (seit Dpkg 1.19.5).

=item B<security-mac>(*):

Verwendet plattformspezifische „Mandatory Access Control (MAC)“-basierende Sicherheit bei der Installation von Dateien in das Dateisystem (seit Dpkg 1.19.5). Auf Linux-Systemen verwendet die Implementierung SELinux.

=item B<unsafe-io>:

Führt beim Entpacken keine sicheren E/A-Aktionen durch (seit Dpkg 1.15.8.6). Derzeit impliziert dies, dass vor Dateiumbenennungen kein Systemsync durchgeführt wird. Dieser Sync führt bei einigen Dateisystemen zu erheblichen Leistungseinbußen, unglücklicherweise bei solchen, die überhaupt sichere E/A aufgrund ihres unzuverlässigen Verhaltens benötigen, auf denen bei abrupten Systemabstürzen Dateien der Länge Null entstehen können.

I<Hinweis>: Für den Hauptmissetäter Ext4 sollten Sie stattdessen die Einhängeoption B<nodelalloc> verwenden, die sowohl die Leistungseinbuße verhindert als auch Datensicherheitsprobleme vermeidet. Letzteres bedeutet, dass bei abrupten Systemabstürzen bei jeder Software, die keine Syncs vor atomaren Umbenennungen durchführt, keine Dateien der Länge Null generiert werden.

B<Warnung>: Die Verwendung dieser Option kann die Leistung erhöhen, allerdings können dabei Daten verloren gehen. Verwenden Sie die Option vorsichtig.

=item B<script-chrootless>:

Führt Skripte aus, ohne per L<chroot(2)> in das B<instdir> zu wechseln, selbst falls das Paket diese Vorgehensweise nicht unterstützt (seit Dpkg 1.18.5).

I<Warnung>: Dies kann Ihr Wirtsystem beschädigen, passen Sie sehr gut auf!

=item B<architecture>:

Verarbeitet sogar Pakete mit der falschen oder keiner Architektur.

=item B<bad-version>:

Verarbeitet sogar Pakete mit falschen Versionen (seit Dpkg 1.16.1).

=item B<bad-path>:

Im B<PATH> fehlen wichtige Programme, daher sind Probleme wahrscheinlich.

=item B<not-root>:

Versucht Sachen zu (de)installieren, selbst falls nicht root.

=item B<bad-verify>:

Installiert ein Paket, selbst wenn die Authentizitätsprüfung fehlschlägt.

=back

=item B<--ignore-depends>=I<Paket>, …

Ignoriert Abhängigkeitsüberprüfungen für bestimmte Pakete (tatsächlich wird die Überprüfung durchgeführt, aber nur Warnungen über Konflikte werden angezeigt, sonst nichts). Dies betrifft die Felder B<Pre-Depends>, B<Depends> und B<Breaks>.

=item B<--no-act>, B<--dry-run>, B<--simulate>

Erledigt alles, was gemacht werden soll, aber schreibt keine Änderungen. Dies wird verwendet, um zu sehen, was mit der spezifizierten Änderung passieren würde, ohne tatsächlich etwas zu modifizieren.

Stellen Sie sicher, dass B<--no-act> vor dem Aktions-Parameter steht, andernfalls könnte dies zu unerwünschten Ergebnissen führen (beispielsweise wird B<dpkg --purge foo --no-act> zuerst das Paket „foo“ endgültig löschen und dann versuchen, das Paket „--no-act“ endgültig zu löschen, obwohl Sie wahrscheinlich davon ausgingen, dass tatsächlich gar nichts passieren sollte).

=item B<-R>, B<--recursive>

Behandelt rekursiv alle regulären Dateien, die auf das Muster B<*.deb> passen und im angegeben Verzeichnis sowie allen Unterverzeichnissen liegen. Dies kann mit den Aktionen B<-i>, B<-A>, B<--install>, B<--unpack> und B<--record-avail> verwendet werden.

=item B<-G>

Installiert ein Paket nicht, falls bereits eine neuere Version des gleichen Paketes installiert ist. Dies ist ein Alias für B<--refuse-downgrade>.

=item B<--admindir=>I<Verz>

Setzt das Standardadministrationsverzeichnis auf I<Verzeichnis>. Dieses Verzeichnis enthält viele Dateien, die Informationen über den Status von installierten und deinstallierten Paketen usw. enthalten. Standardmäßig „I<%ADMINDIR%>“, falls B<DPKG_ADMINDIR> nicht gesetzt wurde.

=item B<--instdir=>I<Verz>

Setzt das voreingestellte Installationsverzeichnis. Dieses Verzeichnis gibt an, wo Pakete installiert werden. B<instdir> ist auch das Verzeichnis, das an L<chroot(2)> vor dem Aufruf der Installationsskripte des Paketes übergeben wird, was bedeutet, dass die Skripte B<instdir> als ein Wurzelverzeichnis sehen. Standardmäßig „I</>“.

=item B<-root=>I<Verz>

Setzt das Wurzelverzeichnis auf I<Verzeichnis>, wodurch das Installationsverzeichnis auf „I<Verz>“ und das administrative Verzeichnis auf „I<Verz>B<%ADMINDIR%>“ gesetzt wird.

=item B<-O>, B<--selected-only>

Bearbeitet nur die Pakete, die zur Installation ausgewählt sind. Die eigentliche Markierung erfolgt mit B<dselect> oder durch B<dpkg>, wenn es Pakete bearbeitet. Beispielsweise wird ein Paket bei der Entfernung als „zur Deinstallation ausgewählt“ markiert.

=item B<-E>, B<--skip-same-version>

Installiert das Paket nicht, falls die gleiche Version und Architektur des Pakets bereits installiert ist.

Seit Dpkg 1.21.10 wird auch die Architektur berücksichtigt. Dadurch ist es möglich, Pakete über cross zu aktualisieren oder zusätzliche ko-installierbare Instanzen mit der gleichen Version aber einer anderen Architektur zu installieren.

=item B<--pre-invoke=>I<Befehl>

=item B<--post-invoke=>I<Befehl>

Setzt einen Aufruf-Hook I<Befehl>, der via „%DPKG_DEFAULT_SHELL% -c“ vor oder nach dem B<dpkg>-Aufruf der B<dpkg>-Aktionen I<unpack>, I<configure>, I<install>, I<triggers-only>, I<remove> und I<purge> (seit Dpkg 1.15.4;) und Aktionen I<add-architecture> Und I<remove-architecture> (seit Dpkg 1.17.19). Diese Option kann mehrfach angegeben werden. Die Reihenfolge der Optionen bleibt erhalten, wobei Einträge aus den Konfigurationsdateien Vorrang haben. Die Umgebungsvariable B<DPKG_HOOK_ACTION> wird für die Hooks auf die aktuelle B<dpkg>-Aktion gesetzt.

Die Aufruf-Hooks werden nicht ausgeführt, wenn B<--no-act> angegeben ist oder als Benutzer, der nicht Root ist, ohne B<--force-not-root> ausgeführt wird.

B<Hinweis>: Oberflächen könnten B<dpkg> mehrere Male pro Ausführung aufrufen, wodurch die Hooks öfter als erwartet ausgeführt werden könnten.

=item B<--path-exclude=>I<Glob-Muster>

=item B<--path-include=>I<Glob-Muster>

Setzt I<Glob-Muster> als Pfadfilter, entweder durch Ausschluss oder durch Wiedereinschluss vorher ausgeschlossener Pfade, die während der Installation auf bestimmte Muster passen (seit Dpkg 1.15.8).

B<Warnung>: Beachten Sie, dass abhängig von den ausgeschlossenen Pfaden Sie Ihr System komplett beschädigen könnten. Verwenden Sie dies daher vorsichtig.

Das Glob-Muster kann die gleichen Platzhalter wie in der Shell verwenden, wobei ‚*’ auf eine beliebige Folge von Zeichen, auch dem Leerzeichen und ‚/’, passt. Beispielsweise passt „I</usr/*/READ*>“ auf „I</usr/share/doc/package/README>“. Wie gewöhnlich passt ‚?’ auf ein einzelnes Zeichen (wieder auch auf ‚/’). Und ‚[’ beginnt eine Zeichenklasse, die eine Liste von Zeichen, Bereiche und Komplemente enthalten kann. Lesen Sie L<glob(7)> für detaillierte Informationen über das Globben. B<Hinweis>: Die aktuelle Implementierung könnte mehr Verzeichnisse und symbolische Links als benötigt wieder einschließen, insbesondere wenn es eine genauere Wiedereinschließung gibt. Um auf der sicheren Seite zu sein und in der Zukunft mögliche Entpackfehler zu vermeiden, könnte dies durch zukünftige Arbeiten behoben werden.

Dies kann dazu verwandt werden, alle Pfade außer bestimmten zu entfernen, ein typischer Fall lautet:

 --path-exclude=/usr/share/doc/*
 --path-include=/usr/share/doc/*/copyright

Hiermit werden alle Dokumentationsdateien (außer den Copyright-Dateien) entfernt.

Diese zwei Optionen können mehrfach angegeben und miteinander verschachtelt werden. Beide werden in der angegebenen Reihenfolge ausgewertet, wobei die letzte Regel, die auf eine Datei passt, die Entscheidung fällt.

Die Filter werden beim Entpacken des Binärpakets angewandt und haben daher nur Wissen über den Typ des derzeit gefilterten Objekts (d.h. eine normale Datei oder ein Verzeichnis) und sehen daher nicht, welche Objekte als nächstes kommen. Da diese Filter Nebeneffekte haben (im Gegensatz zu L<find(1)>-Filtern) wird das Ausschließen eines genauen Pfadnamens, der ein Verzeichnisobjekt wie I</usr/share/doc> ist, nicht den gewünschten Effekt haben und nur der Pfadname wird ausgeschlossen (der automatisch wieder eingeschlossen werden könnte, falls der Code eine Notwendigkeit hierfür sieht). Alle folgenden Dateien innerhalb des Verzeichnisses werden beim Entpacken fehlschlagen.

B<Tipp>: Stellen Sie sicher, dass die Metazeichen nicht durch Ihre Shell expandiert werden.

=item B<--verify-format=>I<Formatname>

Setzt das Ausgabeformat für den Befehl B<--verify> (seit Dpkg 1.17.2).

Derzeit wird nur das Ausgabeformat B<rpm> unterstützt. Es besteht aus einer Zeile für jeden Pfad, der bei der Prüfung fehlschlug. Diese Zeilen haben das folgende Format:

Z<>
 B<missing  > [B<c>] I<Pfadname> [B<(>I<Fehlermeldung>B<)>]
 B<?M5??????> [B<c>] I<Pfadname>

Die ersten 9 Zeichen werden zum Berichten des Überprüfungsergebnisses verwandt, entweder ein wörtliches B<missing>, wenn die Datei nicht vorhanden ist oder seine Metadaten nicht abgerufen werden können, oder eines der folgenden besonderen Zeichen, das das Ergebnis für jede Überprüfung berichtet:

=over 

=item ‚B<?>‘

Impliziert, dass die Überprüfung nicht erfolgen konnte (Unterstützung fehlt, Dateiberechtigungen usw.)

=item ‚B<.>‘

Impliziert, dass die Überprüfung erfolgreich war.

=item ‚I<A-Za-z0-9>‘

Impliziert, dass eine bestimmte Prüfung fehlschlug. Die folgenden Positionen und alphanumerischen Zeichen werden derzeit unterstützt:

=over 

=item 1 ‚B<?>‘

Diese Überprüfungen werden derzeit nicht unterstützt, sie werden immer ‚B<?>‘ sein.

=item 2 ‚B<M>‘

Die Dateimodusüberprüfung schlug fehl (seit Dpkg 1.21.0). Da Pfadnamen-Metadaten derzeit nicht nachverfolgt werden, kann diese Überprüfung nur teilweise mit einer einfachen Heuristik für Pfadnamen emuliert werden, die über einen bekannten Hash verfügen. Dies impliziert, dass sie reguläre Dateien sind, bei denen die Überprüfung fehlschlägt, falls der Pfadname keine reguläre Datei im Dateisystem ist. Diese Überprüfung wird derzeit niemals erfolgreich sein, da sie nicht über genug Informationen verfügt.

=item 3 ‚B<5>‘

Die Hash-Überprüfung schlug fehl. Das bedeutet, dass sich der Dateiinhalt geändert hat. Dies ist nur eine Integritätsprüfung und sollte nicht als irgend eine Art von Sicherheitsüberpüfung angesehen werden.

=item 4-9 ‚B<?>‘

Diese Überprüfungen werden derzeit nicht unterstützt, sie werden immer ‚B<?>‘ sein.

=back

=back

Dieser Zeile folgt ein Leerzeichen und ein Attributszeichen. Das folgende Attributszeichen wird unterstützt:

=over 

=item ‚B<c>‘

Der Pfadname ist ein Conffile.

=back

Schließlich folgt ein weiteres Leerzeichen und der Pfadname.

Falls der Eintrag vom Typ B<missing> und die Datei nicht wirklich auf dem Dateisystem vorhanden war, dann folgt der Zeile ein Leerzeichen und die in Klammern eingeschlossene Fehlermeldung.

=item B<--status-fd> I<n>

Schickt maschinenlesbare Paketstatus- und Fortschrittsinformationen an den Dateideskriptor I<n>. Diese Option kann mehrfach angegeben werden. Die Information besteht typischerweise aus einem Datensatz pro Zeile in folgendem Format:

=over 

=item B<status:> I<Paket>B<:> I<Status>

Paketstatus geändert; I<Status> entsprechend der Statusdatei.

=item B<status:> I<Paket> B<: error :> I<ausführliche-Fehlermeldung>

Ein Fehler ist aufgetreten. Alle möglichen Zeilenumbrüche in I<ausführliche-Fehlermeldung> werden vor der Ausgabe in Leerzeichen gewandelt.

=item B<status:> I<Datei> B<: conffile-prompt : „>I<echt-alt>B<“ „>I<echt-neu>B<“>
I<benutzer-edit> I<dist-edit>

Dem Benutzer wird eine Conffile-Frage gestellt.

=item B<processing:> I<Stufe>B<:> I<Paket>

Wird genau bevor eine Verarbeitungsstufe beginnt versandt. I<Stufe> ist eine der folgenden: B<upgrade>, B<install> (beide werden vor dem Entpacken versandt), B<configure>, B<trigproc>, B<disappear>, B<remove>, B<purge>.

=back

=item B<--status-logger>=I<Befehl>

Schickt maschinenlesbare Paketstatus- und Fortschrittsinformationen an die Standardeingabe des I<Befehl>s der Shell, was dann mittels „DPKG_DEFAULT_SHELL% -c“ ausgeführt wird (seit Dpkg 1.16.0). Diese Option kann mehrfach angegeben werden. Das verwandte Ausgabeformat ist identisch zu dem in B<--status-fd>.

Die Statusprotokollierer werden nicht ausgeführt, wenn B<--no-act> angegeben ist oder als Benutzer, der nicht Root ist, ohne B<--force-not-root> ausgeführt wird.

=item B<--log=>I<Dateiname>

Protokolliert Statusänderungen und -aktionen in I<Dateiname> statt in das standardmäßigen I<%LOGDIR%/dpkg.log>. Falls diese Option mehrfach angegeben ist, wird der letzte Dateiname verwandt. Protokollnachrichten haben die Form:

=over 

=item YYYY-MM-DD HH:MM:SS B<startup> I<Typ> I<Befehl>

Für jeden Dpkg-Aufruf, wobei I<Typ> entweder B<archives> (mit einem I<Befehl> B<unpack> oder B<install>) oder B<packages> (mit einem I<Befehl> B<configure>, B<triggers-only>, B<remove> oder B<purge>) ist.

=item YYYY-MM-DD HH:MM:SS B<status> I<Zustand> I<Pkt> I<installierte_Version>

Für Statusaktualisierungen.

=item YYYY-MM-DD HH:MM:SS I<Aktion> I<Pkt> I<installierte_Version>
I<verfügbar_Version>

Für Aktionen, wobei I<Aktion> eine aus B<install>, B<upgrade>, B<configure>, B<trigproc>, B<disappear>, B<remove> oder B<purge> ist.

=item YYYY-MM-DD HH:MM:SS B<conffile> I<Dateiname> I<Entscheidung>

Für Conffile-Änderungen, wobei I<Entscheidung> entweder B<install> oder B<keep> ist.

=back

=item B<--robot>

Verwendet ein maschinenlesbares Ausgabeformat. Dies stellt die Schnittstelle für Programme bereit, die die Ausgabe einiger Befehle auswerten müssen, die keine anderweitig maschinenlesbaren Ausgabeformate bereitstellen. Es erfolgt keine Lokalisierung und die Ausgabe wird verändert, damit sie leichter auszuwerten ist.

Der einzige derzeit unterstützte Befehl ist B<--version>.

=item B<--no-pager>

Deaktiviert die Verwendung jeglichen Pagers bei der Anzeige von Informationen (seit Dpkg 1.19.2).

=item B<--no-debsig>

Versucht nicht, Paketsignaturen zu überprüfen.

=item B<--no-triggers>

Führt keine Trigger in diesem Durchlauf aus (seit Dpkg 1.14.17). Aktivierungen werden aber dennoch aufgezeichnet. Falls dies mit B<--configure> I<Paket> oder B<--triggers-only> I<Paket> verwandt wird, wird das Postinst des benannten Pakets dennoch ausgeführt, selbst falls nur ein Trigger-Lauf notwendig ist. Die Verwendung dieser Option kann Pakete in die unzulässigen Zustände B<triggers-awaited> und B<triggers-pending> bringen. Durch die Ausführung von „B<dpkg --configure --pending>“ kann dies später behoben werden.

=item B<--triggers>

Annulliert ein vorheriges B<--no-triggers> (seit Dpkg 1.14.17).

=back

=head1 RÜCKGABEWERT

=over 

=item B<0>

Die angeforderte Aktion wurde erfolgreich ausgeführt. Oder ein Prüfausdruck oder eine Zusicherung (Assertion) lieferte Wahr zurück.

=item B<1>

Ein Prüfausdruck oder eine Zusicherung lieferte Falsch zurück.

=item B<2>

Fataler oder nicht behebbarer Fehler aufgrund eines ungültigen Befehlszeilenaufrufs oder Interaktionen mit dem System, wie Zugriffe auf die Datenbank, Speicherzuweisungen usw.

=back

=head1 UMGEBUNG

=head2 Externe Umgebung

=over 

=item B<PATH>

Es wird erwartet, dass diese Variable in der Umgebung gesetzt ist und auf die Systempfade zeigt, in denen eine Reihe von benötigten Programmen gefunden werden können. Falls sie nicht gesetzt ist oder die Programme nicht gefunden werden können, wird B<dpkg> die Bearbeitung abbrechen.

=item B<HOME>

Falls gesetzt, wird B<dpkg> sie als das Verzeichnis verwenden, aus dem die benutzerspezifische Konfigurationsdatei gelesen wird.

=item B<TMPDIR>

Falls gesetzt, wird B<dpkg> sie als das Verzeichnis verwenden, in dem temporäre Dateien und Verzeichnisse erstellt werden.

=item B<SHELL>

Das Programm, das B<dpkg> ausführen wird, wenn es eine neue interaktive Shell startet oder einen Befehl über eine Shell ausführt.

=item B<PAGER>

=item B<DPKG_PAGER>

Das Programm, das B<dpkg> ausführen wird, wenn es einen Pager mit „B<$SHELL -c>“ ausführt, beispielsweise zur Anzeige von Conffile-Dateiunterschieden. Falls B<SHELL> nicht gesetzt ist, wird stattdessen „B<%DPKG_DEFAULT_SHELL%>“ verwandt.

B<DPKG_PAGER> setzt die Umgebungsvariable B<PAGER> außer Kraft (seit Dpkg 1.19.2). Falls keines der Programme, auf die B<DPKG_PAGER> oder B<PAGER> zeigen, vorhanden ist, werden die folgenden Programme in dieser Reihenfolge ausprobiert (seit Dpkg 1.22.12): das Standardseitenanzeigeprogramm B<%DPKG_DEFAULT_PAGER%>, dann B<less>(1), B<more>(1) und schließlich B<cat>(1).

=item B<DPKG_COLORS>

Setzt den Farbmodus (seit Dpkg 1.18.5). Die derzeit unterstützten Werte sind: B<auto> (Vorgabe), B<always> und B<never>.

=item B<DPKG_NLS>

Falls dies gesetzt ist, wird es zur Entscheidung, ob Native Language Support, auch als Unterstützung für Internationalisierung (oder i18n) bekannt, aktiviert wird (seit Dpkg 1.22.7). Die akzeptierten Werte sind: B<0> und B<1> (Vorgabe).

=item B<DPKG_DEBUG>

Setzt die Fehlersuchmaske (seit Dpkg 1.21.10) aus einem oktalen Wert. Die aktuell akzeptierten Schalter werden in der Option B<--debug> beschrieben.

=item B<DPKG_FORCE>

Setzt die Erzwingungsschalter (seit Dpkg 1.19.5). Wenn diese Variable vorhanden ist, werden keine eingebauten Vorgaben für Erzwingungen angewandt. Falls diese Variable vorhanden, aber leer ist, werden alle Erzwingungsschalter deaktiviert.

=item B<DPKG_ADMINDIR>

Falls gesetzt und die Option B<--admindir> oder B<--root> nicht verwandt wurde, wird dies als administratives Verzeichnis von B<dpkg> verwandt (seit Dpkg 1.20.0).

=item B<DPKG_FRONTEND_LOCKED>

Wird von einer Paketverwalterprogrammoberfläche gesetzt, um Dpkg zu informieren, dass es nicht die Sperre der Oberfläche erlangen soll (seit Dpkg 1.19.1).

=item B<DPKG_PATH_PASSWD>

Setzt den Pfadnamen für die F<passwd>-Datei des Systems. Dieser Pfad ist relativ zum Verzeichnis B<--root>. Die Vorgabe ist F</etc/passwd>.

Seit Dpkg 1.22.16.

=item B<DPKG_PATH_GROUP>

Setzt den Pfadnamen für die F<group>-Datei des Systems. Dieser Pfad ist relativ zum Verzeichnis B<--root>. Die Vorgabe ist F</etc/group>.

Seit Dpkg 1.22.16.

=back

=head2 Interne Umgebung

=over 

=item B<LESS>

Von B<dpkg> auf „B<-FRSXMQ>“ definiert, falls es nicht bereits gesetzt ist oder wenn ein Pager gestartet wird (seit Dpkg 1.19.2). Um das Vorgabeverhalten zu verändern, kann diese Variable auf einen anderen Wert einschließlich der leeren Zeichenkette voreingestellt werden oder die Variablen B<PAGER> oder B<DPKG_PAGER> können gesetzt werden, um bestimmte Optionen mit „B<-+>“ zu deaktivieren, beispielsweise B<DPKG_PAGER="less -+F">.

=item B<DPKG_ROOT>

Durch B<dpkg> in der Betreuerskriptumgebung definiert, um anzuzeigen, auf welche Installation gehandelt werden soll (seit Dpkg 1.18.5). Der Wert soll jedem Pfad, auf den Betreuerskripte agieren, vorangestellt werden. Während des Normalbetriebs ist diese Variable leer. Bei der Installation von Paketen in ein anderes B<instdir> wird B<dpkg> normalerweise Betreuerskripte mittels L<chroot(2)> aufrufen und diese Variable leer lassen. Falls aber B<--force-script-chrootless> angegeben ist, wird dieser L<chroot(2)>-Aufruf übersprungen und B<instdir> ist nicht leer.

=item B<DPKG_ADMINDIR>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung gesetzt, um das zu verwendende administrative Verzeichnis von B<dpkg> anzuzeigen (seit Dpkg 1.16.0). Diese Variable wird immer auf den aktuellen Wert von B<--admindir> gesetzt.

=item B<DPKG_FORCE>

Wird von B<dpkg> für alle Unterprozessumgebungen auf alle aktuell aktivierten Erzwingungsoptionennamen (getrennt durch Kommata) gesetzt (seit Dpkg 1.19.5).

=item B<DPKG_SHELL_REASON>

Wird von B<dpkg> auf der Shell, die von der Conffile-Eingabeaufforderung gestartet wird, um die Situation zu analysieren, gesetzt (seit Dpkg 1.15.6). Derzeit gültiger Wert: B<conffile-prompt>.

=item B<DPKG_CONFFILE_OLD>

Wird von B<dpkg> auf der Shell, die von der Conffile-Eingabeaufforderung gestartet wird, um die Situation zu analysieren, gesetzt (seit Dpkg 1.15.6). Enthält den Pfad zu der alten Conffile.

=item B<DPKG_CONFFILE_NEW>

Wird von B<dpkg> auf der Shell, die von der Conffile-Eingabeaufforderung gestartet wird, um die Situation zu analysieren, gesetzt (seit Dpkg 1.15.6). Enthält den Pfad zu der neuen Conffile.

=item B<DPKG_HOOK_ACTION>

Wird von B<dpkg> auf der Shell, die beim Ausführen von Hook-Aktionen gestartet wird, gesetzt (seit Dpkg 1.15.4). Enthält die aktuelle B<dpkg>-Aktion.

=item B<DPKG_RUNNING_VERSION>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung auf die Version der aktuell laufenden Instanz von B<dpkg> gesetzt (seit Dpkg 1.14.17).

=item B<DPKG_MAINTSCRIPT_PACKAGE>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung auf den in Arbeit befindlichen (nicht architekturspezifizierte) Paketnamen gesetzt (seit Dpkg 1.14.17).

=item B<DPKG_MAINTSCRIPT_PACKAGE_REFCOUNT>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung auf die Paketreferenzzahl gesetzt, d.h. die Anzahl der Paketinstanzen mit einem Status größer als B<not-installed> (seit Dpkg 1.17.2).

=item B<DPKG_MAINTSCRIPT_ARCH>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung auf die Architektur gesetzt, für die das Paket gebaut wurde (seit Dpkg 1.15.4).

=item B<DPKG_MAINTSCRIPT_NAME>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung auf den Namen des laufenden Skripts definiert, eines von B<preinst>, B<postinst>, B<prerm> oder B<postrm> (seit Dpkg 1.15.7).

=item B<DPKG_MAINTSCRIPT_DEBUG>

Wird von B<dpkg> für die Betreuer-Skript-Umgebung auf einen Wert (‚B<0>’ oder ‚B<1>’) gesetzt, der angibt, ob die Fehlersuche (mit der Option B<--debug>) für die Betreuerskripte angefordert wurde (seit Dpkg 1.18.4).

=back

=head1 DATEIEN

=over 

=item I<%PKGCONFDIR%/dpkg.cfg.d/[0-9a-zA-Z_-]*>

Konfigurationsfragmentdateien (seit Dpkg 1.15.4).

=item I<%PKGCONFDIR%/dpkg.cfg>

Konfigurationsdatei mit Standardeinstellungen der Optionen.

=item I<%LOGDIR%/dpkg.log>

Standard-Protokolldatei (lesen Sie I<%PKGCONFDIR%/dpkg.cfg> und die Option B<--log>).

=back

Die anderen, nachfolgend aufgeführten Dateien sind in ihren Standardverzeichnissen, lesen Sie den Text zur Option B<--admindir>, um zu sehen, wie Sie den Ort dieser Dateien ändern können.

=over 

=item I<%ADMINDIR%/available>

Liste der verfügbaren Pakete.

=item I<%ADMINDIR%/status>

Status der verfügbaren Pakete. Diese Datei enthält Informationen darüber, ob ein Paket zur Entfernung markiert ist oder nicht, ob es installiert ist oder nicht usw. Lesen Sie den Abschnitt L</INFORMATIONEN ÜBER PAKETE> für weitere Informationen.

Die Statusdatei wird täglich nach I<%BACKUPSDIR%> gesichert. Dies kann hilfreich sein, falls sie aufgrund von Problemen mit dem Dateisystem verloren gegangen oder beschädigt worden ist.

=back

Das Format und die Inhalte eines Binärpakets sind in L<deb(5)> beschrieben.

=head2 Dateisystem-Dateinamen

Während des Entpackens und Konfigurierens verwendet B<dpkg> verschiedene Dateinamen zum Zwecke der Sicherung und zum Zurücksetzen. Es folgt eine vereinfachte Erklärung wie diese Dateinamen während der Paketinstallation verwandt werden.

=over 

=item F<*.dpkg-new>

Während des Entpackens extrahiert B<dpkg> Dateisystemobjekte in I<Pfadnamen>B<.dpkg-new> (außer für bestehende Verzeichnisse oder Symlinks auf Verzeichnisse, die übersprungen werden). Sobald dies erledigt ist und nachdem Sicherungskopien der alten Objekte erstellt wurden, werden die Objekte in I<Pfadnamen> umbenannt.

=item F<*.dpkg-tmp>

Während des Entpackens legt B<dpkg> Sicherungskopien alter Dateisystemobjekte in I<Pfadname>B<.dpkg-tmp> nach dem Extrahieren der neuen Objekte an. Diese Sicherungskopien werden entweder durch Umbenennung für Verzeichnisse (aber nur wenn diese den Dateityp ändern), einer neuen Symlink-Kopie für Symlinks oder harte Links für alle anderen Dateisystemobjekte angelegt, außer für Conffiles, von denen keine Sicherungskopie angelegt wird, da sie in einer späteren Stufe verarbeitet werden.

Falls zurückgesetzt werden muss, werden diese Sicherungskopien dazu verwandt, die vorherigen Inhalte der Objekte wiederherzustellen. Diese werden nach Abschluss der Installation automatisch entfernt.

=item F<*.dpkg-old>

Während der Konfiguration, bei der Installation einer neuen Version, kann B<dpkg> eine Sicherungskopie der vorherigen geänderten Conffile in I<Pfadname>B<.dpkg-old> anlegen.

=item F<*.dpkg-dist>

Während der Konfiguration, beim Beibehalten der alten Version, kann B<dpkg> eine Sicherungskopie der neuen unveränderten Conffile in I<Pfadname>B<.dpkg-dist> anlegen.

=back

=head1 SICHERHEIT

Alle Aktionen, die Schreibzugriff auf die Datenbank oder das Dateisystem benötigen, werden als privilegierte Aktionen angesehen, die eine Eskalation zu Root erlauben könnten. Diese Aktionen dürfen niemals an nicht vertrauenswürdige Benutzer delegiert oder durch nicht vertrauenswürdige Pakete durchgeführt werden, da dies Root-Zugriff auf Ihr System ermöglichen könnte.

Einige Aktionen (wie das Überprüfen von Paketen) könnten Root-Privilegien benötigen, damit sie auf Dateien im Dateisystem zugreifen können, die ansonsten aufgrund eingeschränkter Berechtigungen unzugreifbar wären. Abgesehen davon sollten sie normal funktionieren und in diesen Fällen geeignete Meldungen anzeigen.

Abfrageaktionen sollten niemals Root benötigen und die Übertragung ihrer Ausführung auf nichtprivilegierte Benutzer mittels eines Werde-Root-Befehls kann Sicherheitsauswirkungen haben (wie eine Privilegieneskalation), beispielsweise wenn ein Seitenanzeigeprogramm von einem Werkzeug automatisch aufgerufen wird.

Siehe auch den Abschnitt B<SICHERHEIT> der Handbuchseiten L<dpkg-deb(1)> und L<dpkg-split(1)>.

=head1 FEHLER

B<--no-act> gibt gewöhnlich weniger Informationen, als hilfreich sein könnten.

=head1 BEISPIELE

Um die installierten Pakete mit Bezug zum Editor L<vi(1)> aufzulisten (beachten Sie, dass B<dpkg-query> nicht mehr standardmäßig die Datei I<available> lädt und stattdessen dafür die Option B<dpkg-query> B<--load-avail> verwandt werden sollte):

=over 

 dpkg -l '*vi*'

=back

Um die Einträge von zwei Paketen in I<%ADMINDIR%/available> zu sehen:

=over 

 dpkg --print-avail vim neovim | less

=back

Wenn Sie die Liste der Pakete selbst durchsuchen wollen:

=over 

 dpkg --print-avail | less

=back

Um ein installiertes Neovim-Paket zu entfernen:

=over 

 dpkg -r neovim

=back

Um ein Paket zu installieren, müssen Sie es erst in einem Archiv oder auf einem physischen Medium finden. Wenn Sie ein auf einer Pool-Struktur basierendes Archiv verwenden, reicht es, den Archivbereich und den Paketnamen zu kennen, um den Pfadnamen abzuleiten:

=over 

 dpkg -i /media/bdrom/pool/main/v/vim/vim_9.0.2018-1_amd64.deb

=back

Um eine lokale Kopie der Paketauswahl-Zustände zu erstellen:

=over 

 dpkg --get-selections >meine_auswahl

=back

Sie könnten diese Datei auf einen anderen Rechner übertragen und dann die Datei I<available> dort mit dem Paketverwalter Ihrer Wahl (siehe L<https://wiki.debian.org/Teams/Dpkg/FAQ#set-selections> für weitere Details) aktualisieren, zum Beispiel:

=over 

 apt-cache dumpavail | dpkg --merge-avail

=back

Sie können sie dann wie folgt installieren:

=over 

 dpkg --clear-selections
 dpkg --set-selections <meine_auswahl

=back

Beachten Sie, dass dies nichts wirklich installiert oder entfernt, sondern lediglich den Auswahlzustand der angeforderten Pakete setzt. Sie werden eine andere Anwendung benötigen, um die angeforderten Pakete tatsächlich herunterzuladen und zu installieren. Führen Sie beispielsweise B<apt-get dselect-upgrade> aus.

Gewöhnlich werden Sie feststellen, dass L<dselect(1)> eine bequemere Art ist, den Paketauswahlzustand zu ändern.

=head1 ZUSÄTZLICHE FUNKTIONALITÄT

Zusätzliche Funktionalität kann durch die Installation jedes der folgenden Pakete erhalten werden: B<apt>, B<aptitude> und B<debsig-verify>.

=head1 SIEHE AUCH

L<aptitude(8)>, L<apt(8)>, L<dselect(1)>, L<dpkg-deb(1)>, L<dpkg-query(1)>, L<deb(5)>, L<deb-control(5)>, L<dpkg.cfg(5)> und L<dpkg-reconfigure(8)>.

=head1 AUTOREN

Lesen Sie I<%PKGDOCDIR%/THANKS> für die Liste der Leute, die zu B<dpkg> beigetragen haben.


=head1 ÜBERSETZUNG

Die deutsche Übersetzung wurde 2004, 2006-2025 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 2 oder neuer für die Kopierbedingungen.
Es gibt KEINE HAFTUNG.
