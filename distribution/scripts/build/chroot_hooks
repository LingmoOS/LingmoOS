#!/bin/sh

## lingmo-system-build(7) - System Build Scripts
## Copyright (C) 2016-2020 The Debian Live team
## Copyright (C) 2006-2015 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
[ -e "${LIVE_BUILD}/scripts/build.sh" ] && . "${LIVE_BUILD}/scripts/build.sh" || . /usr/lib/live/build.sh

# Setting static variables
DESCRIPTION="Execute hooks in chroot"
USAGE="${PROGRAM} [--force]"

# Processing arguments and configuration files
Init_config_data "${@}"

Echo_message "Begin executing hooks..."

# Requiring stage file
Require_stagefiles config bootstrap

# Checking stage file
Check_stagefile

# Acquire lock file
Acquire_lockfile

# Make build config available to chroot hooks. First, make the bind
# mount and then make it read-only. This can't happen in one mount
# command, then the resulting mount will be rw (see mount(8)). Making it
# ro prevents modifications and prevents accidentally removing the
# contents of the config directory when removing the chroot.
mkdir -p chroot/lingmo-system-build/config
mount -o bind config chroot/lingmo-system-build/config
mount -o remount,ro,bind config chroot/lingmo-system-build/config

## Processing hooks
if ls config/hooks/normal/*.chroot > /dev/null 2>&1 && (
   ls config/hooks/live/*.chroot > /dev/null 2>&1 ||
   ls config/hooks/live/*.container > /dev/null 2>&1 )
then
	# If a systemd-nspawn hook exists check if package is installed
	if ls config/hooks/live/*.container > /dev/null 2>&1
	then
		Check_package host /usr/bin/systemd-nspawn systemd-container
	fi

	# Restoring cache
	Restore_package_cache chroot

	for HOOK in config/hooks/normal/*.chroot config/hooks/live/*.chroot config/hooks/live/*.container
	do
		if [ ! -e "${HOOK}" ]
		then
			continue
		fi

		# Copying hook
		cp "${HOOK}" chroot/root

		# Making hook executable
		if [ ! -x chroot/root/"$(basename ${HOOK})" ]
		then
			chmod +x chroot/root/"$(basename ${HOOK})"
		fi

		# Executing hook
		Echo_message "Executing hook ${HOOK}..."
		case "${HOOK}" in
			*.container)
				umount chroot/proc
				systemd-nspawn --capability=all --register=no --keep-unit -D chroot "/root/$(basename ${HOOK})" || { Echo_error "${HOOK} failed (exit non-zero). You should check for errors."; exit 1 ;}
				mount proc-live -t proc chroot/proc
				;;
			*)
				Chroot chroot "/root/$(basename ${HOOK})" || { Echo_error "${HOOK} failed (exit non-zero). You should check for errors."; exit 1 ;}
				;;
		esac

		# Removing hook
		rm -f chroot/root/"$(basename ${HOOK})"
	done

	# Saving cache
	Save_package_cache chroot
fi

# Remove bind mount of build config inside chroot.
umount chroot/lingmo-system-build/config
rmdir chroot/lingmo-system-build/config
rmdir chroot/lingmo-system-build

# Creating stage file
Create_stagefile
