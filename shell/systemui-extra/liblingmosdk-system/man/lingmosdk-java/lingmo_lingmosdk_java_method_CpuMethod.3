.TH "lingmo.lingmosdk.java.method.CpuMethod" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lingmo.lingmosdk.java.method.CpuMethod \- 获取cpu信息类 主要用来获取cpu的架构、制造厂商、型号、额定主频、核心数量、虚拟化支持和线程数信息  

.SH SYNOPSIS
.br
.PP
.PP
Inherits cpuinfo\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "String \fBgetCpuArch\fP ()"
.br
.RI "获取cpu架构 "
.ti -1c
.RI "String \fBgetCpuVendor\fP ()"
.br
.RI "获取cpu制造厂商 "
.ti -1c
.RI "String \fBgetCpuModel\fP ()"
.br
.RI "获取cpu型号 "
.ti -1c
.RI "String \fBgetCpuFreqMHz\fP ()"
.br
.RI "获取cpu额定主频 "
.ti -1c
.RI "UInt32 \fBgetCpuCorenums\fP ()"
.br
.RI "获取cpu核心数量 "
.ti -1c
.RI "String \fBgetCpuVirt\fP ()"
.br
.RI "获取cpu对虚拟化的支持 "
.ti -1c
.RI "UInt32 \fBgetCpuProcess\fP ()"
.br
.RI "获取cpu线程数 "
.ti -1c
.RI "boolean \fBisRemote\fP ()"
.br
.RI "判断是否为远程对象 "
.ti -1c
.RI "String \fBgetObjectPath\fP ()"
.br
.RI "获取ObjectPath【未实现】 "
.in -1c
.SH "Detailed Description"
.PP 
获取cpu信息类 主要用来获取cpu的架构、制造厂商、型号、额定主频、核心数量、虚拟化支持和线程数信息 
.PP 

.SH "Function Documentation"
.PP 
.SS "String lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuArch ()\fC [inline]\fP"

.PP
获取cpu架构 
.PP
\fBReturns\fP
.RS 4
String 架构信息，如'x86_64' 
.RE
.PP

.SS "UInt32 lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuCorenums ()\fC [inline]\fP"

.PP
获取cpu核心数量 
.PP
\fBReturns\fP
.RS 4
UInt32 所有可用的CPU核心数量 
.RE
.PP

.SS "String lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuFreqMHz ()\fC [inline]\fP"

.PP
获取cpu额定主频 
.PP
\fBReturns\fP
.RS 4
String 额定主频赫兹数，如“1794\&.742” 
.RE
.PP

.SS "String lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuModel ()\fC [inline]\fP"

.PP
获取cpu型号 
.PP
\fBReturns\fP
.RS 4
String CPU型号名称，如“Intel(R) Core(TM) i7-4790K CPU @ 4\&.00GHz” 
.RE
.PP

.SS "UInt32 lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuProcess ()\fC [inline]\fP"

.PP
获取cpu线程数 
.PP
\fBReturns\fP
.RS 4
UInt32 cpu支持的线程数 
.RE
.PP

.SS "String lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuVendor ()\fC [inline]\fP"

.PP
获取cpu制造厂商 
.PP
\fBReturns\fP
.RS 4
String 制造厂商，如“GenuineIntel” 
.RE
.PP

.SS "String lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getCpuVirt ()\fC [inline]\fP"

.PP
获取cpu对虚拟化的支持 
.PP
\fBReturns\fP
.RS 4
String 若CPU支持虚拟化，则返回虚拟化技术，如“vmx”；若不支持，返回NULL 
.RE
.PP

.SS "String lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.getObjectPath ()\fC [inline]\fP"

.PP
获取ObjectPath【未实现】 
.PP
\fBReturns\fP
.RS 4
String ObjectPath 
.RE
.PP

.SS "boolean lingmo\&.lingmosdk\&.java\&.method\&.CpuMethod\&.isRemote ()\fC [inline]\fP"

.PP
判断是否为远程对象 
.PP
\fBReturns\fP
.RS 4
boolean Returns true on remote objects\&. Local objects implementing this interface MUST return false\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for CpuMethod.java from the source code\&.
