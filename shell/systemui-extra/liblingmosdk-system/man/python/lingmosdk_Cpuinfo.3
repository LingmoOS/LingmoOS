.TH "lingmosdk.Cpuinfo" 3 "Thu Sep 21 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lingmosdk.Cpuinfo \- 获取cpu信息 主要用来获取cpu的架构、制造厂商、型号、额定主频、核心数量、虚拟化支持和线程数信息  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlingmosdk\&.Base\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBgetCpuArch\fP (self)"
.br
.RI "获取cpu架构 "
.ti -1c
.RI "def \fBgetCpuVendor\fP (self)"
.br
.RI "获取cpu制造厂商 "
.ti -1c
.RI "def \fBgetCpuModel\fP (self)"
.br
.RI "获取cpu型号 "
.ti -1c
.RI "def \fBgetCpuFreqMHz\fP (self)"
.br
.RI "获取cpu额定主频 "
.ti -1c
.RI "def \fBgetCpuCorenums\fP (self)"
.br
.RI "获取cpu核心数量 "
.ti -1c
.RI "def \fBgetCpuVirt\fP (self)"
.br
.RI "获取cpu对虚拟化的支持 "
.ti -1c
.RI "def \fBgetCpuProcess\fP (self)"
.br
.RI "获取cpu线程数 "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
获取cpu信息 主要用来获取cpu的架构、制造厂商、型号、额定主频、核心数量、虚拟化支持和线程数信息 


.SH "Member Function Documentation"
.PP 
.SS "def lingmosdk\&.Cpuinfo\&.getCpuArch ( self)"

.PP
获取cpu架构 
.PP
\fBReturns\fP
.RS 4
架构信息，如'x86_64' 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Cpuinfo\&.getCpuCorenums ( self)"

.PP
获取cpu核心数量 
.PP
\fBReturns\fP
.RS 4
所有可用的CPU核心数量 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Cpuinfo\&.getCpuFreqMHz ( self)"

.PP
获取cpu额定主频 
.PP
\fBReturns\fP
.RS 4
额定主频赫兹数，如“1794\&.742” 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Cpuinfo\&.getCpuModel ( self)"

.PP
获取cpu型号 
.PP
\fBReturns\fP
.RS 4
CPU型号名称，如“Intel(R) Core(TM) i7-4790K CPU @ 4\&.00GHz” 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Cpuinfo\&.getCpuProcess ( self)"

.PP
获取cpu线程数 
.PP
\fBReturns\fP
.RS 4
cpu支持的线程数 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Cpuinfo\&.getCpuVendor ( self)"

.PP
获取cpu制造厂商 
.PP
\fBReturns\fP
.RS 4
制造厂商，如“GenuineIntel” 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Cpuinfo\&.getCpuVirt ( self)"

.PP
获取cpu对虚拟化的支持 
.PP
\fBReturns\fP
.RS 4
若CPU支持虚拟化，则返回虚拟化技术，如“vmx”；若不支持，返回NULL 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdk.py from the source code\&.
