.TH "lingmosdk.NetCard" 3 "Thu Sep 21 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lingmosdk.NetCard \- 获取网卡信息 主要获取生成网卡列表、检测指定网卡是否处于UP状态、获取系统中当前处于 link up 状态的网卡列表、获取指定网卡的物理MAC地址、 获取指定网卡的第一个IPv4地址、获取指定网卡的所有IPv4地址、获取指定网卡的第一个IPv6地址、获取指定网卡的所有IPv6地址、 获取指定网卡的有线/无线类型、获取指定网卡的厂商名称和设备型号  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlingmosdk\&.Base\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBgetNetCardName\fP (self)"
.br
.RI "获取系统中所有的网卡 "
.ti -1c
.RI "def \fBgetNetCardUp\fP (self, netcard_name)"
.br
.RI "检测指定网卡是否处于UP状态 "
.ti -1c
.RI "def \fBgetNetCardUpcards\fP (self)"
.br
.RI "获取系统中当前处于 link up 状态的网卡列表 "
.ti -1c
.RI "def \fBgetNetCardPhymac\fP (self, netcard_name)"
.br
.RI "获取指定网卡的物理MAC地址 "
.ti -1c
.RI "def \fBgetNetCardPrivateIPv4\fP (self, netcard_name)"
.br
.RI "获取指定网卡的第一个IPv4地址 "
.ti -1c
.RI "def \fBgetNetCardIPv4\fP (self, netcard_name)"
.br
.RI "获取指定网卡的所有IPv4地址 "
.ti -1c
.RI "def \fBgetNetCardPrivateIPv6\fP (self, netcard_name)"
.br
.RI "获取指定网卡的第一个IPv6地址 "
.ti -1c
.RI "def \fBgetNetCardType\fP (self, netcard_name)"
.br
.RI "获取指定网卡的有线/无线类型 "
.ti -1c
.RI "def \fBgetNetCardProduct\fP (self, netcard_name)"
.br
.RI "获取指定网卡的厂商名称和设备型号 "
.ti -1c
.RI "def \fBgetNetCardIPv6\fP (self, netcard_name)"
.br
.RI "获取指定网卡的所有IPv6地址 "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
获取网卡信息 主要获取生成网卡列表、检测指定网卡是否处于UP状态、获取系统中当前处于 link up 状态的网卡列表、获取指定网卡的物理MAC地址、 获取指定网卡的第一个IPv4地址、获取指定网卡的所有IPv4地址、获取指定网卡的第一个IPv6地址、获取指定网卡的所有IPv6地址、 获取指定网卡的有线/无线类型、获取指定网卡的厂商名称和设备型号 


.SH "Member Function Documentation"
.PP 
.SS "def lingmosdk\&.NetCard\&.getNetCardIPv4 ( self,  netcard_name)"

.PP
获取指定网卡的所有IPv4地址 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
IPv4地址列表 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardIPv6 ( self,  netcard_name)"

.PP
获取指定网卡的所有IPv6地址 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
IPv6地址列表 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardName ( self)"

.PP
获取系统中所有的网卡 
.PP
\fBReturns\fP
.RS 4
网卡名称列表 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardPhymac ( self,  netcard_name)"

.PP
获取指定网卡的物理MAC地址 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
物理MAC地址 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardPrivateIPv4 ( self,  netcard_name)"

.PP
获取指定网卡的第一个IPv4地址 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
IPv4地址 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardPrivateIPv6 ( self,  netcard_name)"

.PP
获取指定网卡的第一个IPv6地址 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
IPv6地址 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardProduct ( self,  netcard_name)"

.PP
获取指定网卡的厂商名称和设备型号 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
网卡的厂商名称和设备型号 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardType ( self,  netcard_name)"

.PP
获取指定网卡的有线/无线类型 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
0 有线 1 无线 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardUp ( self,  netcard_name)"

.PP
检测指定网卡是否处于UP状态 
.PP
\fBParameters\fP
.RS 4
\fInetcard_name\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
Up返回1，Down返回0 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.NetCard\&.getNetCardUpcards ( self)"

.PP
获取系统中当前处于 link up 状态的网卡列表 
.PP
\fBReturns\fP
.RS 4
处于link up状态的网卡列表 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdk.py from the source code\&.
