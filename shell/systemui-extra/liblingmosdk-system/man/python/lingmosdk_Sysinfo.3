.TH "lingmosdk.Sysinfo" 3 "Thu Sep 21 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lingmosdk.Sysinfo \- 获取操作系统基础信息 主要用来获取操作系统架构信息、操作系统名称、操作系统版本号、操作系统激活状态、操作系统服务序列号、内核版本号、 当前登录用户的用户名（Effect User）、操作系统项目编号名、操作系统项目子编号名、操作系统产品标识码、操作系统宿主机的虚拟机类型、 操作系统宿主机的云平台类型、判断当前镜像系统是否为 专用机 系统、系统版本号/补丁版本号、系统当前显示屏幕,分辨率,系统支持分辨率  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlingmosdk\&.Base\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBgetSystemArchitecture\fP (self)"
.br
.RI "获取操作系统架构信息 "
.ti -1c
.RI "def \fBgetSystemName\fP (self)"
.br
.RI "获取操作系统名称 "
.ti -1c
.RI "def \fBgetSystemVersion\fP (self, defatul=0)"
.br
.RI "获取操作系统版本号 "
.ti -1c
.RI "def \fBgetSystemActivationStatus\fP (self)"
.br
.RI "获取操作系统激活状态 "
.ti -1c
.RI "def \fBgetSystemSerialNumber\fP (self)"
.br
.RI "获取操作系统服务序列号 "
.ti -1c
.RI "def \fBgetSystemKernelVersion\fP (self)"
.br
.RI "获取内核版本号 "
.ti -1c
.RI "def \fBgetSystemEffectUser\fP (self)"
.br
.RI "获取当前登录用户的用户名（Effect User） "
.ti -1c
.RI "def \fBgetSystemProjectName\fP (self)"
.br
.RI "获取操作系统项目编号名 "
.ti -1c
.RI "def \fBgetSystemProjectSubName\fP (self)"
.br
.RI "获取操作系统项目子编号名 "
.ti -1c
.RI "def \fBgetSystemProductFeatures\fP (self)"
.br
.RI "获取操作系统产品标识码 "
.ti -1c
.RI "def \fBgetSystemHostVirtType\fP (self)"
.br
.RI "获取操作系统宿主机的虚拟机类型 "
.ti -1c
.RI "def \fBgetSystemHostCloudPlatform\fP (self)"
.br
.RI "获取操作系统宿主机的云平台类型 "
.ti -1c
.RI "def \fBgetSystemOSVersion\fP (self)"
.br
.RI "获取系统版本号 "
.ti -1c
.RI "def \fBgetSystemUpdateVersion\fP (self)"
.br
.RI "获取补丁版本号 "
.ti -1c
.RI "def \fBgetSystemIsZYJ\fP (self)"
.br
.RI "判断当前镜像系统是否为 专用机 系统 "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
获取操作系统基础信息 主要用来获取操作系统架构信息、操作系统名称、操作系统版本号、操作系统激活状态、操作系统服务序列号、内核版本号、 当前登录用户的用户名（Effect User）、操作系统项目编号名、操作系统项目子编号名、操作系统产品标识码、操作系统宿主机的虚拟机类型、 操作系统宿主机的云平台类型、判断当前镜像系统是否为 专用机 系统、系统版本号/补丁版本号、系统当前显示屏幕,分辨率,系统支持分辨率 


.SH "Member Function Documentation"
.PP 
.SS "def lingmosdk\&.Sysinfo\&.getSystemActivationStatus ( self)"

.PP
获取操作系统激活状态 
.PP
\fBReturns\fP
.RS 4
2表示已过期；0表示未激活，处于试用期；1表示已激活；-1表示接口内部错误； 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemArchitecture ( self)"

.PP
获取操作系统架构信息 
.PP
\fBReturns\fP
.RS 4
操作系统架构信息 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemEffectUser ( self)"

.PP
获取当前登录用户的用户名（Effect User） 
.PP
\fBReturns\fP
.RS 4
当前登录用户的用户名（Effect User） 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemHostCloudPlatform ( self)"

.PP
获取操作系统宿主机的云平台类型 
.PP
\fBReturns\fP
.RS 4
获取失败返回NULL，获取成功返回一个字符串，字符串内容如下： [none, huawei] 其中 none 表示运行在物理机或未知的云平台环境中；其他字符串代表不同的云平台 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemHostVirtType ( self)"

.PP
获取操作系统宿主机的虚拟机类型 
.PP
\fBReturns\fP
.RS 4
操作系统宿主机的虚拟机类型，类型如下： [none, qemu, kvm, zvm, vmware, hyper-v, orcale virtualbox, xen, bochs, \\ uml, parallels, bhyve, qnx, arcn, openvz, lxc, lxc-libvirt, systemd-nspawn,\\ docker, podman, rkt, wsl] 其中 none 表示运行在物理机环境中；其他字符串代表具体的虚拟环境类型 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemIsZYJ ( self)"

.PP
判断当前镜像系统是否为 专用机 系统 
.PP
\fBReturns\fP
.RS 4
true代表是 false代表不是 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemKernelVersion ( self)"

.PP
获取内核版本号 
.PP
\fBReturns\fP
.RS 4
内核版本号 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemName ( self)"

.PP
获取操作系统名称 
.PP
\fBReturns\fP
.RS 4
操作系统名称 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemOSVersion ( self)"

.PP
获取系统版本号 
.PP
\fBReturns\fP
.RS 4
系统版本号 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemProductFeatures ( self)"

.PP
获取操作系统产品标识码 
.PP
\fBReturns\fP
.RS 4
返回标志码 0000 信息异常 0001 仅PC特性 0010 仅平板特性 0011 支持平板与PC特性 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemProjectName ( self)"

.PP
获取操作系统项目编号名 
.PP
\fBReturns\fP
.RS 4
操作系统项目编号名 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemProjectSubName ( self)"

.PP
获取操作系统项目子编号名 
.PP
\fBReturns\fP
.RS 4
操作系统项目子编号名 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemSerialNumber ( self)"

.PP
获取操作系统服务序列号 
.PP
\fBReturns\fP
.RS 4
操作系统服务序列号 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemUpdateVersion ( self)"

.PP
获取补丁版本号 
.PP
\fBReturns\fP
.RS 4
补丁版本号 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.
.SS "def lingmosdk\&.Sysinfo\&.getSystemVersion ( self,  defatul = \fC0\fP)"

.PP
获取操作系统版本号 
.PP
\fBParameters\fP
.RS 4
\fIdefatul\fP 0获取简略版本号，1获取详细版本号 
.RE
.PP
\fBReturns\fP
.RS 4
操作系统版本号 
.PP
.nf
defatul = 0 获取简略版本号
defatul = 1 获取详细版本号

.fi
.PP
 
.RE
.PP

.PP
References lingmosdk\&.SessionBase\&.interface, and lingmosdk\&.Base\&.interface\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdk.py from the source code\&.
