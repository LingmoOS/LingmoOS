.TH "KDK_PACKAGE_GET_PACKAGELIST" 3 "Mon Sep 18 2023" "Linux Programmer's Manual" \"
.SH NAME
kdk_package_get_packagelist - 获取系统中所有包列表
.SH SYNOPSIS
.nf
.B #include <libkypackages.h>
.sp
.BI "extern kdk_package_list* kdk_package_get_packagelist();" 
.sp
Link with \fI\-lkypackage\fP.
.SH "Detailed Description"
The main function of the interface is to obtain a list of all packages in the system.
.SH "RETURN VALUE"
On success, returns a pointer to a 
.I kdk_package_list
structure containing gateway information.
.PP
The 
.I kdk_package_list
structure is defined in
.I <libkypackages.h>
as follows:

            typedef struct {
                unsigned int nums;
                kdk_package_t **list;
            }kdk_package_list;

            typedef struct _kdk_package_t{
                char *name;     // 包名
                char *version;  // 版本号
                char *section;  // 包类型
                char *status;   // 状态
                unsigned long size_kb;   // 包大小
                struct _kdk_package_t **depends; // 依赖包
            }kdk_package_t;
.PP
On error, return
.BR NULL.
.SH EXAMPLES
.EX
#include "libkypackages.h"
#include <stdio.h>

static void print_package(kdk_package_t *package)
{
    printf("包名：%s\t", package->name);
    printf("版本号：%s\t", package->version);
    printf("包类型：%s\t", package->section);
    printf("包状态：%s\t", package->status);
    printf("包大小：%lu\n", package->size_kb);
}

int main()
{
    kdk_package_list *list = kdk_package_get_packagelist();
    printf("系统中一共%u个软件包\n", list->nums);
    for (size_t i = 0; i < list->nums; i ++)
    {
        print_package(list->list[i]);
    }
    kdk_package_free_packagelist(list);

    printf("Evolution是否安装：%s\n", kdk_package_is_installed("evolution", NULL) == 1 ? "是" : "否");
    char *version = kdk_package_get_version("evolution");
    printf("Evolution版本号：%s\n", version);
    free(version);

    return 0;
}

.SH "CONFORMING TO"
These functions are as per the withdrawn POSIX.1e draft specification.
The following functions are Linux extensions:
.BR kdk_package_free_packagelist (),
.BR kdk_package_get_version ()
and
.BR kdk_package_is_installed ().
.SH "SEE ALSO"
.BR kdk_package_free_packagelist (3),
.BR kdk_package_get_version (3)
and
.BR kdk_package_is_installed (3).