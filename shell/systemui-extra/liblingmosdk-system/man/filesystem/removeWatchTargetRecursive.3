.TH "removeWatchTargetRecursive" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
removeWatchTargetRecursive - 从监听列表中移除指定的文件
.SH SYNOPSIS
.nf
.B #include <libkyfilewatcher.hpp>
.sp
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBLINGMOSDK_FILEWATCHER::FileWatcher\fP"
.in -1c
.sp
.SS "Functions"

.in +1c
.ti -1c
.RI "QStringList removeWatchTargetRecursive(QString url, int maxdepth = 5, int recurType = ALLFILE);" 
.in -1c
.sp
Link with \fI\-lkyfilewatcher\fP.
.SH "Detailed Description"
The main function of the interface is to remove the specified file from the listening list.
.PP
The argument
.I url
is the file path.
.PP
The argument
.I maxdepth
is the maximum depth specified for traversal search.
.PP
The argument
.I recurType
is the recursive type，which is an enumeration type. The content is as follows:
.PP
    enum RecursiveType{
        DIR = 1 << 0,
        REGULAR = 1 << 1,
        HIDDEN = 1 << 2,
        TMPFILE = 1 << 3,    //认为那些以~开头的是临时文件
        ALLFILE = HIDDEN | TMPFILE | DIR | REGULAR
    };
.SH "RETURN VALUE"

.SH EXAMPLES
.EX
#include <QCoreApplication>
#include <QDebug>
#include "libkyfilewatcher.hpp"

using namespace LINGMOSDK_FILEWATCHER;

int main(int argc, char *argv[])
{
    LINGMOSDK_FILEWATCHER::FileWatcher watcher;
    watcher.addWatchTargetRecursive("/home/lingmo/", PERIODIC, ALL, 3, REGULAR);

    getchar();

//    qDebug() << "update attr test";
//    watcher.updateWatchTargetAttribute("/data/testcode/test.c", DELETE);

//    getchar();

//    qDebug() << "re-add test";
//    watcher.addWatchTarget("/data/testcode/test.c", PERIODIC, ALL);

//    getchar();

//    qDebug() << "update oneshot test";
//    watcher.updateWatchTargetType("/data/testcode/test.c", ONESHOT);

//    getchar();

//    qDebug() << "remove target test";
//    watcher.removeWatchTarget("/data/testcode/test.c");

//    getchar();

    watcher.clearWatchList();
    return 0;
}
.SH "CONFORMING TO"
These functions are as per the withdrawn POSIX.1e draft specification.
The following functions are Linux extensions:
.BR addWatchTargetRecursive (),
.BR addWatchTargetListRecursive (),
.BR clearWatchList (),
.BR pauseWatcher ()
and
.BR restartWatcher ().
.SH "SEE ALSO"
.BR addWatchTargetRecursive (3),
.BR addWatchTargetListRecursive (3),
.BR clearWatchList (3),
.BR pauseWatcher (3)
and
.BR restartWatcher (3).