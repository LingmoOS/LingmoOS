.TH "LINGMOSDK_FILEWATCHER::FileWatcher" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LINGMOSDK_FILEWATCHER::FileWatcher \- 文件管理类 主要用来增加需要监听的文件路径，增加需要监听的文件列表，从监听列表中移除指定的文件，清空监听列表，暂停文件监听，恢复文件监听  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <libkyfilewatcher\&.hpp>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "QStringList \fBaddWatchTargetRecursive\fP (QString url, FileWatcherType type=PERIODIC, int attr=OPEN|CLOSE|MODIFY|DELETE, int maxdepth=5, int recurType=DIR|REGULAR)"
.br
.RI "增加需要监听的文件路径，对于目录，默认启用递归监听子目录 "
.ti -1c
.RI "QStringList \fBaddWatchTargetListRecursive\fP (QStringList urlList, FileWatcherType type=PERIODIC, int attr=OPEN|CLOSE|MODIFY|DELETE, int maxdepth=5, int recurType=DIR|REGULAR)"
.br
.RI "增加需要监听的文件列表 "
.ti -1c
.RI "QStringList \fBremoveWatchTargetRecursive\fP (QString url, int maxdepth=5, int recurType=ALLFILE)"
.br
.RI "从监听列表中移除指定的文件 "
.ti -1c
.RI "void \fBclearWatchList\fP ()"
.br
.RI "清空监听列表 "
.ti -1c
.RI "void \fBpauseWatcher\fP ()"
.br
.RI "暂停文件监听 "
.ti -1c
.RI "void \fBrestartWatcher\fP ()"
.br
.RI "恢复文件监听 "
.ti -1c
.in -1c
.SH "Detailed Description"
.PP 
文件管理类 主要用来增加需要监听的文件路径，增加需要监听的文件列表，从监听列表中移除指定的文件，清空监听列表，暂停文件监听，恢复文件监听 
.PP
.SH "CONFORMING TO"
These functions are as per the withdrawn POSIX.1e draft specification.
The following functions are Linux extensions:
.BR addWatchTargetRecursive (),
.BR addWatchTargetListRecursive (),
.BR removeWatchTargetRecursive (),
.BR clearWatchList (),
.BR pauseWatcher ()
and
.BR restartWatcher ().
.SH "SEE ALSO"
.BR addWatchTargetRecursive (3),
.BR addWatchTargetListRecursive (3),
.BR removeWatchTargetRecursive (3),
.BR clearWatchList (3),
.BR pauseWatcher (3)
and
.BR restartWatcher (3).
