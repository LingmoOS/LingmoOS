.TH "LIBKYHW" 3 "Thu Aug 10 2023" "Linux Programmer's Manual" \"
.SH NAME
kdk_bios_get_vendor, kdk_bios_get_version, kdk_bios_free, kdk_board_get_name, kdk_board_get_date, 
kdk_board_get_serial, kdk_board_get_vendor, kdk_board_free, kdk_cpu_get_arch, kdk_cpu_get_vendor, 
kdk_cpu_get_model, kdk_cpu_get_freq_MHz, kdk_cpu_get_corenums, kdk_cpu_get_virt, kdk_cpu_get_process, 
kdk_display_get_vendor, kdk_display_get_product, kdk_display_get_description, kdk_display_get_physical_id,
kdk_display_get_bus_info, kdk_display_get_version, kdk_display_get_width, kdk_display_get_clock, kdk_display_get_capabilities,
kdk_display_get_configuration, kdk_display_get_resources, kdk_nc_get_cardlist, kdk_nc_is_up, kdk_nc_get_upcards,
kdk_nc_get_phymac, kdk_nc_get_private_ipv4, kdk_nc_get_ipv4, kdk_nc_get_private_ipv6, kdk_nc_get_ipv6,
kdk_nc_is_wireless, kdk_nc_get_vendor_and_product, kdk_nc_get_driver, kdk_nc_freeall - 获取bios、主板、cpu、显卡、网卡信息
.SH SYNOPSIS
.nf
.B #include <libkybios.h>
.sp
.B #include <libkyboard.h>
.sp
.B #include <libkycpu.h>
.sp
.B #include <libkydisplay.h>
.sp
.B #include <libkync.h>
.sp
.BI "extern const char* kdk_bios_get_vendor();" 
.sp
.BI "extern const char* kdk_bios_get_version();" 
.sp
.BI "extern void kdk_bios_free(char *"info ");" 
.sp
.BI "extern const char* kdk_board_get_name();" 
.sp
.BI "extern const char* kdk_board_get_date();"
.sp
.BI "extern const char* kdk_board_get_serial();"
.sp
.BI "extern const char* kdk_board_get_vendor();"
.sp
.BI "extern void kdk_board_free(char *"info ");"
.sp
.BI "extern const char* kdk_cpu_get_arch();"
.sp
.BI "extern const char* kdk_cpu_get_vendor();"
.sp
.BI "extern const char* kdk_cpu_get_model();"
.sp
.BI "extern const char* kdk_cpu_get_freq_MHz();"
.sp
.BI "extern const char* kdk_cpu_get_corenums();"
.sp
.BI "extern const char* kdk_cpu_get_virt();"
.sp
.BI "extern const char* kdk_cpu_get_process();"
.sp
.BI "extern char* kdk_display_get_vendor();"
.sp
.BI "extern char* kdk_display_get_product();"
.sp
.BI "extern char* kdk_display_get_description();"
.sp
.BI "extern char* kdk_display_get_physical_id();"
.sp
.BI "extern char* kdk_display_get_bus_info();"
.sp
.BI "extern char* kdk_display_get_version();"
.sp
.BI "extern char* kdk_display_get_width();"
.sp
.BI "extern char* kdk_display_get_clock();"
.sp
.BI "extern char* kdk_display_get_capabilities();"
.sp
.BI "extern char* kdk_display_get_resources();"
.sp
.BI "extern char* kdk_display_get_configuration();"
.sp
.BI "extern char** kdk_nc_get_cardlist();"
.sp
.BI "extern int kdk_nc_is_up(const char *"nc ");"
.sp
.BI "extern char** kdk_nc_get_upcards();"
.sp
.BI "extern char* kdk_nc_get_phymac(const char *"nc ");"
.sp
.BI "extern char* kdk_nc_get_private_ipv4(const char *"nc ");"
.sp
.BI "extern char** kdk_nc_get_ipv4(const char* "nc ");"
.sp
.BI "extern char* kdk_nc_get_private_ipv6(const char *"nc ");"
.sp
.BI "extern char** kdk_nc_get_ipv6(const char *"nc ");"
.sp
.BI "extern int kdk_nc_is_wireless(const char *"nc ");"
.sp
.BI "extern int kdk_nc_get_vendor_and_product(const char *"nc ", char *"vendor ", char *" product ");"
.sp
.BI "extern char *kdk_nc_get_driver(const char *"nc ");"
.sp
.BI "extern inline void kdk_nc_freeall(char **"ptr ");"
.sp
Link with \fI\-lkydiskinfo\fP.
.SH "Detailed Description"
This library contains bios, mainboard, CPU, graphics card, and network card information.
.SH "RETURN VALUE"
The return value is generally specific to the individual function called.
.SH "CONFORMING TO"
These functions are as per the withdrawn POSIX.1e draft specification.
The following functions are Linux extensions:
.BR kdk_bios_get_vendor (),
.BR kdk_board_get_name (),
.BR kdk_cpu_get_arch (),
.BR kdk_nc_get_cardlist ()
and
.BR kdk_display_get_vendor ().
.SH "SEE ALSO"
.BR kdk_bios_get_vendor (3),
.BR kdk_board_get_name (3),
.BR kdk_cpu_get_arch (3),
.BR kdk_nc_get_cardlist (3),
.BR kdk_display_get_vendor (3).