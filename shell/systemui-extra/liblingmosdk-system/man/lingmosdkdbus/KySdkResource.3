.TH "KySdkResource" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KySdkResource \- 获取当前系统资源占用信息类 主要用来获取系统中物理内存总大小、物理内存使用率、物理内存使用大小、实际可用的物理内存大小、实际空闲的物理内存大小、 所有应用申请的虚拟内存总量、系统中Swap分区总大小、Swap分区使用率、Swap分区使用量、Swap分区空闲大小、CPU瞬时使用率、 操作系统开机时长dbus信息  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lingmosdkdbus\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "double \fBgetMemTotalKiB\fP () const"
.br
.RI "获取系统中物理内存总大小 "
.ti -1c
.RI "double \fBgetMemUsagePercent\fP () const"
.br
.RI "获取物理内存使用率 "
.ti -1c
.RI "double \fBgetMemUsageKiB\fP () const"
.br
.RI "获取物理内存使用大小，注意Buffer/Cache被计算为已使用内存 "
.ti -1c
.RI "double \fBgetMemAvailableKiB\fP () const"
.br
.RI "获取实际可用的物理内存大小，该数值约等于Free + Buffer + Cache "
.ti -1c
.RI "double \fBgetMemFreeKiB\fP () const"
.br
.RI "获取实际空闲的物理内存大小，注意Buffer/Cache被计算为已使用内存 "
.ti -1c
.RI "double \fBgetMemVirtAllocKiB\fP () const"
.br
.RI "获取所有应用申请的虚拟内存总量 "
.ti -1c
.RI "double \fBgetMemSwapTotalKiB\fP () const"
.br
.RI "获取系统中Swap分区总大小 "
.ti -1c
.RI "double \fBgetMemSwapUsagePercent\fP () const"
.br
.RI "获取Swap分区使用率 "
.ti -1c
.RI "double \fBgetMemSwapUsageKiB\fP () const"
.br
.RI "获取Swap分区使用量 "
.ti -1c
.RI "double \fBgetMemSwapFreeKiB\fP () const"
.br
.RI "获取Swap分区空闲大小 "
.ti -1c
.RI "double \fBgetCpuCurrentUsage\fP () const"
.br
.RI "获取CPU瞬时使用率 "
.ti -1c
.RI "QString \fBgetUpTime\fP () const"
.br
.RI "获取操作系统开机时长 "
.in -1c
.SH "Detailed Description"
.PP 
获取当前系统资源占用信息类 主要用来获取系统中物理内存总大小、物理内存使用率、物理内存使用大小、实际可用的物理内存大小、实际空闲的物理内存大小、 所有应用申请的虚拟内存总量、系统中Swap分区总大小、Swap分区使用率、Swap分区使用量、Swap分区空闲大小、CPU瞬时使用率、 操作系统开机时长dbus信息 
.PP 

.SH "Public Slots"
.PP 
.SS "double KySdkResource::getCpuCurrentUsage () const\fC [slot]\fP"

.PP
获取CPU瞬时使用率 
.PP
\fBReturns\fP
.RS 4
double CPU瞬时使用率，该值 < 1\&.00 
.RE
.PP

.SS "double KySdkResource::getMemAvailableKiB () const\fC [slot]\fP"

.PP
获取实际可用的物理内存大小，该数值约等于Free + Buffer + Cache 
.PP
\fBReturns\fP
.RS 4
double 可用物理内存大小，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemFreeKiB () const\fC [slot]\fP"

.PP
获取实际空闲的物理内存大小，注意Buffer/Cache被计算为已使用内存 
.PP
\fBReturns\fP
.RS 4
double 空闲的物理内存大小，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemSwapFreeKiB () const\fC [slot]\fP"

.PP
获取Swap分区空闲大小 
.PP
\fBReturns\fP
.RS 4
double Swap分区空闲大小，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemSwapTotalKiB () const\fC [slot]\fP"

.PP
获取系统中Swap分区总大小 
.PP
\fBReturns\fP
.RS 4
double Swap分区大小，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemSwapUsageKiB () const\fC [slot]\fP"

.PP
获取Swap分区使用量 
.PP
\fBReturns\fP
.RS 4
double Swap分区使用量，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemSwapUsagePercent () const\fC [slot]\fP"

.PP
获取Swap分区使用率 
.PP
\fBReturns\fP
.RS 4
double Swap分区使用率 
.RE
.PP

.SS "double KySdkResource::getMemTotalKiB () const\fC [slot]\fP"

.PP
获取系统中物理内存总大小 
.PP
\fBReturns\fP
.RS 4
double 物理内存大小，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemUsageKiB () const\fC [slot]\fP"

.PP
获取物理内存使用大小，注意Buffer/Cache被计算为已使用内存 
.PP
\fBReturns\fP
.RS 4
double 物理内存使用大小，KiB为单位 
.RE
.PP

.SS "double KySdkResource::getMemUsagePercent () const\fC [slot]\fP"

.PP
获取物理内存使用率 
.PP
\fBReturns\fP
.RS 4
double 物理内存使用率 
.RE
.PP

.SS "double KySdkResource::getMemVirtAllocKiB () const\fC [slot]\fP"

.PP
获取所有应用申请的虚拟内存总量 
.PP
\fBReturns\fP
.RS 4
double 虚拟内存总申请量，KiB为单位 
.RE
.PP

.SS "QString KySdkResource::getUpTime () const\fC [slot]\fP"

.PP
获取操作系统开机时长 
.PP
\fBReturns\fP
.RS 4
QString 开机时长 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdkdbus.h from the source code\&.
