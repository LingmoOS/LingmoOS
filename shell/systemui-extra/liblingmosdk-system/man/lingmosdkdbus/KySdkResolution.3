.TH "KySdkResolution" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KySdkResolution \- 获取操作系统基础信息类 主要用来获取操作系统架构信息、操作系统名称、操作系统版本号、操作系统激活状态、操作系统服务序列号、内核版本号、 当前登录用户的用户名（Effect User）、操作系统项目编号名、操作系统项目子编号名、操作系统产品标识码、操作系统宿主机的虚拟机类型、 操作系统宿主机的云平台类型、判断当前镜像系统是否为 专用机 系统、系统版本号/补丁版本号、系统当前显示屏幕,分辨率,系统支持分辨率  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lingmosdkdbus\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "QString \fBgetSystemArchitecture\fP () const"
.br
.RI "获取操作系统架构信息 "
.ti -1c
.RI "QString \fBgetSystemName\fP () const"
.br
.RI "获取操作系统名称 "
.ti -1c
.RI "QString \fBgetSystemVersion\fP (bool verbose) const"
.br
.RI "获取操作系统版本号 "
.ti -1c
.RI "int \fBgetSystemActivationStatus\fP () const"
.br
.RI "获取操作系统激活状态 "
.ti -1c
.RI "QString \fBgetSystemSerialNumber\fP () const"
.br
.RI "获取操作系统服务序列号 "
.ti -1c
.RI "QString \fBgetSystemKernelVersion\fP () const"
.br
.RI "获取内核版本号 "
.ti -1c
.RI "QString \fBgetSystemEffectUser\fP () const"
.br
.RI "获取当前登录用户的用户名（Effect User） "
.ti -1c
.RI "QString \fBgetSystemEffectUserLoginTime\fP () const"
.br
.RI "获取当前登录用户的登录时间 "
.ti -1c
.RI "QString \fBgetSystemProjectName\fP () const"
.br
.RI "获取操作系统项目编号名 "
.ti -1c
.RI "QString \fBgetSystemProjectSubName\fP () const"
.br
.RI "获取操作系统项目子编号名 "
.ti -1c
.RI "unsigned int \fBgetSystemProductFeatures\fP () const"
.br
.RI "获取操作系统产品标识码 "
.ti -1c
.RI "QString \fBgetSystemHostVirtType\fP () const"
.br
.RI "获取操作系统宿主机的虚拟机类型 "
.ti -1c
.RI "QString \fBgetSystemHostCloudPlatform\fP () const"
.br
.RI "获取操作系统宿主机的云平台类型 "
.ti -1c
.RI "QString \fBgetSystemOSVersion\fP () const"
.br
.RI "获取系统版本号 "
.ti -1c
.RI "QString \fBgetSystemUpdateVersion\fP () const"
.br
.RI "获取补丁版本号 "
.ti -1c
.RI "bool \fBgetSystemIsZYJ\fP () const"
.br
.RI "判断当前镜像系统是否为 专用机 系统 "
.in -1c
.SH "Detailed Description"
.PP 
获取操作系统基础信息类 主要用来获取操作系统架构信息、操作系统名称、操作系统版本号、操作系统激活状态、操作系统服务序列号、内核版本号、 当前登录用户的用户名（Effect User）、操作系统项目编号名、操作系统项目子编号名、操作系统产品标识码、操作系统宿主机的虚拟机类型、 操作系统宿主机的云平台类型、判断当前镜像系统是否为 专用机 系统、系统版本号/补丁版本号、系统当前显示屏幕,分辨率,系统支持分辨率 
.PP 

.SH "Public Slots"
.PP 
.SS "int KySdkResolution::getSystemActivationStatus () const\fC [slot]\fP"

.PP
获取操作系统激活状态 
.PP
\fBReturns\fP
.RS 4
int 2表示已过期；0表示未激活，处于试用期；1表示已激活；-1表示接口内部错误； 
.RE
.PP

.SS "QString KySdkResolution::getSystemArchitecture () const\fC [slot]\fP"

.PP
获取操作系统架构信息 
.PP
\fBReturns\fP
.RS 4
QString 操作系统架构信息 
.RE
.PP

.SS "QString KySdkResolution::getSystemEffectUser () const\fC [slot]\fP"

.PP
获取当前登录用户的用户名（Effect User） 
.PP
\fBReturns\fP
.RS 4
QString 当前登录用户的用户名（Effect User） 
.RE
.PP

.SS "QString KySdkResolution::getSystemEffectUserLoginTime () const\fC [slot]\fP"

.PP
获取当前登录用户的登录时间 
.PP
\fBReturns\fP
.RS 4
QString 成功返回字符串，失败返回NULL。返回的字符串需要被 free 释放 
.RE
.PP

.SS "QString KySdkResolution::getSystemHostCloudPlatform () const\fC [slot]\fP"

.PP
获取操作系统宿主机的云平台类型 
.PP
\fBReturns\fP
.RS 4
QString 获取失败返回NULL，获取成功返回一个字符串，字符串内容如下： [none, huawei] 其中 none 表示运行在物理机或未知的云平台环境中；其他字符串代表不同的云平台 
.RE
.PP

.SS "QString KySdkResolution::getSystemHostVirtType () const\fC [slot]\fP"

.PP
获取操作系统宿主机的虚拟机类型 
.PP
\fBReturns\fP
.RS 4
QString 操作系统宿主机的虚拟机类型，类型如下： [none, qemu, kvm, zvm, vmware, hyper-v, orcale virtualbox, xen, bochs, \\ uml, parallels, bhyve, qnx, arcn, openvz, lxc, lxc-libvirt, systemd-nspawn,\\ docker, podman, rkt, wsl] 其中 none 表示运行在物理机环境中；其他字符串代表具体的虚拟环境类型 
.RE
.PP

.SS "bool KySdkResolution::getSystemIsZYJ () const\fC [slot]\fP"

.PP
判断当前镜像系统是否为 专用机 系统 
.PP
\fBReturns\fP
.RS 4
bool true代表是 false代表不是 
.RE
.PP

.SS "QString KySdkResolution::getSystemKernelVersion () const\fC [slot]\fP"

.PP
获取内核版本号 
.PP
\fBReturns\fP
.RS 4
QString 内核版本号 
.RE
.PP

.SS "QString KySdkResolution::getSystemName () const\fC [slot]\fP"

.PP
获取操作系统名称 
.PP
\fBReturns\fP
.RS 4
QString 操作系统名称 
.RE
.PP

.SS "QString KySdkResolution::getSystemOSVersion () const\fC [slot]\fP"

.PP
获取系统版本号 
.PP
\fBReturns\fP
.RS 4
QString 系统版本号 
.RE
.PP

.SS "unsigned int KySdkResolution::getSystemProductFeatures () const\fC [slot]\fP"

.PP
获取操作系统产品标识码 
.PP
\fBReturns\fP
.RS 4
unsigned int 返回标志码 0000 信息异常 0001 仅PC特性 0010 仅平板特性 0011 支持平板与PC特性 
.RE
.PP

.SS "QString KySdkResolution::getSystemProjectName () const\fC [slot]\fP"

.PP
获取操作系统项目编号名 
.PP
\fBReturns\fP
.RS 4
QString 操作系统项目编号名 
.RE
.PP

.SS "QString KySdkResolution::getSystemProjectSubName () const\fC [slot]\fP"

.PP
获取操作系统项目子编号名 
.PP
\fBReturns\fP
.RS 4
QString 操作系统项目子编号名 
.RE
.PP

.SS "QString KySdkResolution::getSystemSerialNumber () const\fC [slot]\fP"

.PP
获取操作系统服务序列号 
.PP
\fBReturns\fP
.RS 4
QString 操作系统服务序列号 
.RE
.PP

.SS "QString KySdkResolution::getSystemUpdateVersion () const\fC [slot]\fP"

.PP
获取补丁版本号 
.PP
\fBReturns\fP
.RS 4
QString 补丁版本号 
.RE
.PP

.SS "QString KySdkResolution::getSystemVersion (bool verbose) const\fC [slot]\fP"

.PP
获取操作系统版本号 
.PP
\fBParameters\fP
.RS 4
\fIverbose\fP 0获取简略版本号，1获取详细版本号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 操作系统版本号 
.RE
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdkdbus.h from the source code\&.
