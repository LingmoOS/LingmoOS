.TH "KySdkProcess" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KySdkProcess \- 生成某一进程的瞬时详细信息dbus信号类 主要用来生成某一进程的CPU使用率、获取某一进程的内存占用率、获取某一进程的进程状态、获取某一进程的端口号占用、 获取某一进程的启动时间、获取某一进程的运行时间、获取某一进程的cpu时间、获取某一进程的Command、获取某一进程的属主、 获取某一进程的信息、获取进程所有信息dbus信号类  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lingmosdkdbus\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "double \fBgetProcInfoCpuUsage\fP (int pid) const"
.br
.RI "获取某一进程的CPU使用率 "
.ti -1c
.RI "double \fBgetProcInfoMemUsage\fP (int pid) const"
.br
.RI "获取某一进程的内存占用率 "
.ti -1c
.RI "QString \fBgetProcInfoStatus\fP (int pid) const"
.br
.RI "获取某一进程的进程状态 "
.ti -1c
.RI "int \fBgetProcInfoPort\fP (int pid) const"
.br
.RI "获取某一进程的端口号占用 "
.ti -1c
.RI "QString \fBgetProcInfoStartTime\fP (int pid) const"
.br
.RI "获取某一进程的启动时间 "
.ti -1c
.RI "QString \fBgetProcInfoRunningTime\fP (int pid) const"
.br
.RI "获取某一进程的运行时间 "
.ti -1c
.RI "QString \fBgetProcInfoCpuTime\fP (int pid) const"
.br
.RI "获取某一进程的cpu时间 "
.ti -1c
.RI "QString \fBgetProcInfoCmd\fP (int pid) const"
.br
.RI "获取某一进程的Command "
.ti -1c
.RI "QString \fBgetProcInfoUser\fP (int pid) const"
.br
.RI "获取某一进程的属主 "
.ti -1c
.RI "QStringList \fBgetProcInfo\fP (const QString procName) const"
.br
.RI "获取某一进程的信息 "
.ti -1c
.RI "QStringList \fBgetAllProcInfo\fP () const"
.br
.RI "获取进程所有信息 "
.in -1c
.SH "Detailed Description"
.PP 
生成某一进程的瞬时详细信息dbus信号类 主要用来生成某一进程的CPU使用率、获取某一进程的内存占用率、获取某一进程的进程状态、获取某一进程的端口号占用、 获取某一进程的启动时间、获取某一进程的运行时间、获取某一进程的cpu时间、获取某一进程的Command、获取某一进程的属主、 获取某一进程的信息、获取进程所有信息dbus信号类 
.PP 

.SH "Public Slots"
.PP 
.SS "QStringList KySdkProcess::getAllProcInfo () const\fC [slot]\fP"

.PP
获取进程所有信息 
.PP
\fBReturns\fP
.RS 4
QStringList 所有进程的CPU使用率、内存占用率、状态、端口号占用、启动时间、运行时间、cpu时间、Command、属主信息列表 
.RE
.PP

.SS "QStringList KySdkProcess::getProcInfo (const QString procName) const\fC [slot]\fP"

.PP
获取某一进程的信息 
.PP
\fBParameters\fP
.RS 4
\fIprocName\fP 进程名 
.RE
.PP
\fBReturns\fP
.RS 4
QStringList 某一进程CPU使用率、内存占用率、状态、端口号占用、启动时间、运行时间、cpu时间、Command、属主信息列表 
.RE
.PP

.SS "QString KySdkProcess::getProcInfoCmd (int pid) const\fC [slot]\fP"

.PP
获取某一进程的Command 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 进程的Command 
.RE
.PP

.SS "QString KySdkProcess::getProcInfoCpuTime (int pid) const\fC [slot]\fP"

.PP
获取某一进程的cpu时间 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 进程的cpu时间 
.RE
.PP

.SS "double KySdkProcess::getProcInfoCpuUsage (int pid) const\fC [slot]\fP"

.PP
获取某一进程的CPU使用率 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
double 进程的CPU使用率 
.RE
.PP

.SS "double KySdkProcess::getProcInfoMemUsage (int pid) const\fC [slot]\fP"

.PP
获取某一进程的内存占用率 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
double 进程的内存占用率 
.RE
.PP

.SS "int KySdkProcess::getProcInfoPort (int pid) const\fC [slot]\fP"

.PP
获取某一进程的端口号占用 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
int 进程使用的端口号 
.RE
.PP

.SS "QString KySdkProcess::getProcInfoRunningTime (int pid) const\fC [slot]\fP"

.PP
获取某一进程的运行时间 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 进程的运行时间 
.RE
.PP

.SS "QString KySdkProcess::getProcInfoStartTime (int pid) const\fC [slot]\fP"

.PP
获取某一进程的启动时间 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 进程的启动时间 
.RE
.PP

.SS "QString KySdkProcess::getProcInfoStatus (int pid) const\fC [slot]\fP"

.PP
获取某一进程的进程状态 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 进程状态 
.RE
.PP

.SS "QString KySdkProcess::getProcInfoUser (int pid) const\fC [slot]\fP"

.PP
获取某一进程的属主 
.PP
\fBParameters\fP
.RS 4
\fIpid\fP 进程号 
.RE
.PP
\fBReturns\fP
.RS 4
QString 进程的属主 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdkdbus.h from the source code\&.
