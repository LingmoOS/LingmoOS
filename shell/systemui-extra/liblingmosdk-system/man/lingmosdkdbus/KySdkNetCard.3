.TH "KySdkNetCard" 3 "Wed Sep 20 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KySdkNetCard \- 生成网卡信息dbus信号类 主要用来生成网卡列表、检测指定网卡是否处于UP状态、获取系统中当前处于 link up 状态的网卡列表、获取指定网卡的物理MAC地址、 获取指定网卡的第一个IPv4地址、获取指定网卡的所有IPv4地址、获取指定网卡的第一个IPv6地址、获取指定网卡的所有IPv6地址、 获取指定网卡的有线/无线类型、获取指定网卡的厂商名称和设备型号的dbus信号  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lingmosdkdbus\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "QStringList \fBgetNetCardName\fP () const"
.br
.RI "获取系统中所有的网卡 "
.ti -1c
.RI "int \fBgetNetCardUp\fP (const QString netCardName) const"
.br
.RI "检测指定网卡是否处于UP状态 "
.ti -1c
.RI "QStringList \fBgetNetCardUpcards\fP () const"
.br
.RI "获取系统中当前处于 link up 状态的网卡列表 "
.ti -1c
.RI "QString \fBgetNetCardPhymac\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的物理MAC地址 "
.ti -1c
.RI "QString \fBgetNetCardPrivateIPv4\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的第一个IPv4地址 "
.ti -1c
.RI "QStringList \fBgetNetCardIPv4\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的所有IPv4地址 "
.ti -1c
.RI "QString \fBgetNetCardPrivateIPv6\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的第一个IPv6地址 "
.ti -1c
.RI "int \fBgetNetCardType\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的有线/无线类型 "
.ti -1c
.RI "QStringList \fBgetNetCardProduct\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的厂商名称和设备型号 "
.ti -1c
.RI "QStringList \fBgetNetCardIPv6\fP (const QString netCardName) const"
.br
.RI "获取指定网卡的所有IPv6地址 "
.in -1c
.SH "Detailed Description"
.PP 
生成网卡信息dbus信号类 主要用来生成网卡列表、检测指定网卡是否处于UP状态、获取系统中当前处于 link up 状态的网卡列表、获取指定网卡的物理MAC地址、 获取指定网卡的第一个IPv4地址、获取指定网卡的所有IPv4地址、获取指定网卡的第一个IPv6地址、获取指定网卡的所有IPv6地址、 获取指定网卡的有线/无线类型、获取指定网卡的厂商名称和设备型号的dbus信号 
.PP 

.SH "Public Slots"
.PP 
.SS "QStringList KySdkNetCard::getNetCardIPv4 (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的所有IPv4地址 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
QStringList IPv4地址列表 
.RE
.PP

.SS "QStringList KySdkNetCard::getNetCardIPv6 (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的所有IPv6地址 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
QStringList IPv6地址列表 
.RE
.PP

.SS "QStringList KySdkNetCard::getNetCardName () const\fC [slot]\fP"

.PP
获取系统中所有的网卡 
.PP
\fBReturns\fP
.RS 4
QStringList 网卡名称列表 
.RE
.PP

.SS "QString KySdkNetCard::getNetCardPhymac (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的物理MAC地址 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
QString 物理MAC地址 
.RE
.PP

.SS "QString KySdkNetCard::getNetCardPrivateIPv4 (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的第一个IPv4地址 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
QString IPv4地址 
.RE
.PP

.SS "QString KySdkNetCard::getNetCardPrivateIPv6 (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的第一个IPv6地址 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
QString IPv6地址 
.RE
.PP

.SS "QStringList KySdkNetCard::getNetCardProduct (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的厂商名称和设备型号 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
QStringList 网卡的厂商名称和设备型号 
.RE
.PP

.SS "int KySdkNetCard::getNetCardType (const QString netCardName) const\fC [slot]\fP"

.PP
获取指定网卡的有线/无线类型 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
int 0 有线 1 无线 
.RE
.PP

.SS "int KySdkNetCard::getNetCardUp (const QString netCardName) const\fC [slot]\fP"

.PP
检测指定网卡是否处于UP状态 
.PP
\fBParameters\fP
.RS 4
\fInetCardName\fP 网卡名称，如eno1 
.RE
.PP
\fBReturns\fP
.RS 4
int Up返回1，Down返回0 
.RE
.PP

.SS "QStringList KySdkNetCard::getNetCardUpcards () const\fC [slot]\fP"

.PP
获取系统中当前处于 link up 状态的网卡列表 
.PP
\fBReturns\fP
.RS 4
QStringList 处于link up状态的网卡列表 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for lingmosdkdbus.h from the source code\&.
