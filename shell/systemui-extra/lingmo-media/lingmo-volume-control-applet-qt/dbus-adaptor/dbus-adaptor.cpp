/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp org.lingmo.media.xml -i ukmedia_main_widget.h -a dbus-adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbus-adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MediaAdaptor
 */

MediaAdaptor::MediaAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MediaAdaptor::~MediaAdaptor()
{
    // destructor
}

QStringList MediaAdaptor::getAllInputDevices()
{
    // handle method call org.lingmo.media.getAllInputDevices
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getAllInputDevices", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QStringList MediaAdaptor::getAllOutputDevices()
{
    // handle method call org.lingmo.media.getAllOutputDevices
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getAllOutputDevices", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QString MediaAdaptor::getDefaultInputDevice()
{
    // handle method call org.lingmo.media.getDefaultInputDevice
    QString out0;
    QMetaObject::invokeMethod(parent(), "getDefaultInputDevice", Q_RETURN_ARG(QString, out0));
    return out0;
}

bool MediaAdaptor::getDefaultInputMuteState()
{
    // handle method call org.lingmo.media.getDefaultInputMuteState
    bool out0;
    QMetaObject::invokeMethod(parent(), "getDefaultInputMuteState", Q_RETURN_ARG(bool, out0));
    return out0;
}

int MediaAdaptor::getDefaultInputVolume()
{
    // handle method call org.lingmo.media.getDefaultInputVolume
    int out0;
    QMetaObject::invokeMethod(parent(), "getDefaultInputVolume", Q_RETURN_ARG(int, out0));
    return out0;
}

QString MediaAdaptor::getDefaultOutputDevice()
{
    // handle method call org.lingmo.media.getDefaultOutputDevice
    QString out0;
    QMetaObject::invokeMethod(parent(), "getDefaultOutputDevice", Q_RETURN_ARG(QString, out0));
    return out0;
}

bool MediaAdaptor::getDefaultOutputMuteState()
{
    // handle method call org.lingmo.media.getDefaultOutputMuteState
    bool out0;
    QMetaObject::invokeMethod(parent(), "getDefaultOutputMuteState", Q_RETURN_ARG(bool, out0));
    return out0;
}

int MediaAdaptor::getDefaultOutputVolume()
{
    // handle method call org.lingmo.media.getDefaultOutputVolume
    int out0;
    QMetaObject::invokeMethod(parent(), "getDefaultOutputVolume", Q_RETURN_ARG(int, out0));
    return out0;
}

bool MediaAdaptor::setDefaultInputDevice(const QString &deviceName)
{
    // handle method call org.lingmo.media.setDefaultInputDevice
    bool out0;
    QMetaObject::invokeMethod(parent(), "setDefaultInputDevice", Q_RETURN_ARG(bool, out0), Q_ARG(QString, deviceName));
    return out0;
}

bool MediaAdaptor::setDefaultInputMuteState(bool mute)
{
    // handle method call org.lingmo.media.setDefaultInputMuteState
    bool out0;
    QMetaObject::invokeMethod(parent(), "setDefaultInputMuteState", Q_RETURN_ARG(bool, out0), Q_ARG(bool, mute));
    return out0;
}

bool MediaAdaptor::setDefaultInputVolume(int value)
{
    // handle method call org.lingmo.media.setDefaultInputVolume
    bool out0;
    QMetaObject::invokeMethod(parent(), "setDefaultInputVolume", Q_RETURN_ARG(bool, out0), Q_ARG(int, value));
    return out0;
}

bool MediaAdaptor::setDefaultOutputDevice(const QString &deviceName)
{
    // handle method call org.lingmo.media.setDefaultOutputDevice
    bool out0;
    QMetaObject::invokeMethod(parent(), "setDefaultOutputDevice", Q_RETURN_ARG(bool, out0), Q_ARG(QString, deviceName));
    return out0;
}

bool MediaAdaptor::setDefaultOutputMuteState(bool mute)
{
    // handle method call org.lingmo.media.setDefaultOutputMuteState
    bool out0;
    QMetaObject::invokeMethod(parent(), "setDefaultOutputMuteState", Q_RETURN_ARG(bool, out0), Q_ARG(bool, mute));
    return out0;
}

bool MediaAdaptor::setDefaultOutputVolume(int value)
{
    // handle method call org.lingmo.media.setDefaultOutputVolume
    bool out0;
    QMetaObject::invokeMethod(parent(), "setDefaultOutputVolume", Q_RETURN_ARG(bool, out0), Q_ARG(int, value));
    return out0;
}

int MediaAdaptor::getBatteryLevel(const QString &deviceName)
{
    // handle method call org.lingmo.media.bluetooth.getBatteryLevel
    int out0;
    QMetaObject::invokeMethod(parent(), "getBatteryLevel", Q_RETURN_ARG(int, out0), Q_ARG(QString, deviceName));
    return out0;
}

