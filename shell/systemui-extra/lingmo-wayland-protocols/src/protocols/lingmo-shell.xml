<?xml version="1.0" encoding="UTF-8"?>
<protocol name="lingmo_shell">
  <copyright><![CDATA[
      SPDX-FileCopyrightText: 2024 LingmoSoft Co., Ltd.
      SPDX-FileCopyrightText: 2024 Hongfei Shang

      SPDX-License-Identifier: MulanPSL-2.0
    ]]>
  </copyright>

  <interface name="org_lingmo_shell" version="1">
    <description summary="create lingmo shell windows and helpers">
      This interface is used by lingmo powered Wayland shells to communicate with the compositor and
      can only be bound one time.
    </description>

    <!-- Surfaces -->

    <request name="create_surface">
      <description summary="create a shell surface from a surface">
        Create a shell surface for an existing surface.

        Only one shell surface can be associated with a given surface.
      </description>
      <arg name="id" type="new_id" interface="org_lingmo_surface"/>
      <arg name="surface" type="object" interface="wl_surface"/>
    </request>

  </interface>

  <interface name="org_lingmo_surface" version="1">
    <description summary="metadata interface">
      An interface that may be implemented by a wl_surface, for implementations that provide the
      shell user interface.

      It provides requests to set surface roles, assign an output or set the position in output
      coordinates.

      On the server side the object is automatically destroyed when the related wl_surface is
      destroyed. On client side, org_lingmo_surface.destroy() must be called before destroying the
      wl_surface object.
    </description>

    <!-- Destructor -->

    <request name="destroy" type="destructor">
      <description summary="remove org_lingmo_surface interface">
        The org_lingmo_surface interface is removed from the wl_surface object that was turned into a
        shell surface with the org_lingmo_shell.get_surface request. The shell surface role is lost
        and wl_surface is unmapped.
      </description>
    </request>

    <!-- Output and position -->

    <request name="set_output">
      <description summary="assign an output to this shell surface">
        Assign an output to this shell surface. The compositor will use this information to set the
        position when org_lingmo_surface.set_position request is called.
      </description>
      <arg name="output" type="object" interface="wl_output"/>
    </request>

    <request name="set_position">
      <description summary="change the shell surface position">
        Move the surface to new coordinates.

        Coordinates are global, for example 50,50 for a 1920,0+1920x1080 output is 1970,50 in global
        coordinates space.

        Use org_lingmo_surface.set_output to assign an output to this surface.
      </description>
      <arg name="x" type="int" summary="x coordinate in global space"/>
      <arg name="y" type="int" summary="y coordinate in global space"/>
    </request>

    <request name="active">
      <description summary="request to activate shell">
        request to activate current shell if it's not active
      </description>
    </request>

    <!-- Skip taskbar-->

    <request name="set_skip_taskbar" since="1">
      <description summary="make the window skip the taskbar">
        Setting this bit to the window, will make it say it prefers to not be listed in the taskbar.
        Taskbar implementations may or may not follow this hint.
      </description>
      <arg name="skip" type="uint" summary="Boolean value that sets whether to skip the taskbar"/>
    </request>

    <!-- Skip switcher -->

    <request name="set_skip_switcher" since="1">
      <description summary="make the window not appear in a switcher">
        Setting this bit will indicate that the window prefers not to be listed in a switcher.
      </description>
      <arg name="skip" type="uint"
        summary="Boolean value that sets whether to skip the window switcher."/>
    </request>


    <!-- 窗口属性 -->

    <enum name="property">
      <entry name="no_header" value="0"/>
      <entry name="theme" value="1"/>
      <entry name="window_radius" value="1"/>
      <entry name="border_width" value="3"/>
      <entry name="border_color" value="4"/>
      <entry name="shadow_radius" value="5"/>
      <entry name="shadow_offset" value="6"/>
      <entry name="shadow_color" value="7"/>
    </enum>

    <request name="set_property">
      <description summary="set window property">
        Set window property.

        Values for property argument are described by lingmo_shell.property
        and can be used together in a bitfield. The flags bitfield describes which property are
        supposed to be set.
      </description>
      <arg name="property" type="uint" enum="property" summary="property type"/>
      <arg name="value" type="uint" summary="property value"/>
    </request>

    <!-- 窗口角色/类型 -->

    <enum name="role">
      <entry name="normal" value="0"/>
      <entry name="desktop" value="1"/>
      <entry name="panel" value="2"/>
      <entry name="onscreendisplay" value="3"/>
      <entry name="notification" value="4"/>
      <entry name="tooltip" value="5"/>
      <entry name="criticalnotification" value="6"/>
      <entry name="appletpopup" value="7"/>
    </enum>

    <request name="set_role">
      <description summary="assign a role to this surface">
        Assign a role to a shell surface.

        The compositor handles surfaces depending on their role. See the explanation below.

        This request fails if the surface already has a role, this means the surface role may be
        assigned only once.

        == Surfaces with splash role ==

        Splash surfaces are placed above every other surface during the shell startup phase.

        The surfaces are placed according to the output coordinates. No size is imposed to those
        surfaces, the shell has to resize them according to output size.

        These surfaces are meant to hide the desktop during the startup phase so that the user will
        always see a ready to work desktop.

        A shell might not create splash surfaces if the compositor reveals the desktop in an
        alternative fashion, for example with a fade in effect.

        That depends on how much time the desktop usually need to prepare the workspace or specific
        design decisions. This specification doesn't impose any particular design.

        When the startup phase is finished, the shell will send the org_lingmo.desktop_ready request
        to the compositor.

        == Surfaces with desktop role ==

        Desktop surfaces are placed below all other surfaces and are used to show the actual desktop
        view with icons, search results or controls the user will interact with. What to show
        depends on the shell implementation.

        The surfaces are placed according to the output coordinates. No size is imposed to those
        surfaces, the shell has to resize them according to output size.

        Only one surface per output can have the desktop role.

        == Surfaces with dashboard role ==

        Dashboard surfaces are placed above desktop surfaces and are used to show additional widgets
        and controls.

        The surfaces are placed according to the output coordinates. No size is imposed to those
        surfaces, the shell has to resize them according to output size.

        Only one surface per output can have the dashboard role.

        == Surfaces with config role ==

        A configuration surface is shown when the user wants to configure panel or desktop views.
        Only one surface per output can have the config role.

        TODO: This should grab the input like popup menus, right?

        == Surfaces with overlay role ==

        Overlays are special surfaces that shows for a limited amount of time. Such surfaces are
        useful to display things like volume, brightness and status changes.

        Compositors may decide to show those surfaces in a layer above all surfaces, even full
        screen ones if so is desired.

        == Surfaces with notification role ==

        Notification surfaces display informative content for a limited amount of time. The
        compositor may decide to show them in a corner depending on the configuration.

        These surfaces are shown in a layer above all other surfaces except for full screen ones.

        == Surfaces with lock role ==

        The lock surface is shown by the compositor when the session is locked, users interact with
        it to unlock the session.

        Compositors should move lock surfaces to 0,0 in output coordinates space and hide all other
        surfaces for security sake. For the same reason it is recommended that clients make the lock
        surface as big as the screen.

        Only one surface per output can have the lock role.
      </description>
      <arg name="role" type="uint"/>
    </request>

    <!-- 触发窗口打开时的位置信息 -->

    <request name="set_startup_geometry">
      <description summary="set the geometry for a taskbar/desktop entry">
        Sets the geometry of the taskbar/desktop entry for this window. The geometry is relative to
        a panel/desktop in particular.
      </description>
      <arg name="entry" type="object" interface="wl_surface"/>
      <arg name="x" type="uint"/>
      <arg name="y" type="uint"/>
      <arg name="width" type="uint"/>
      <arg name="height" type="uint"/>
    </request>

    <!-- 窗口打开后在鼠标位置显示 -->

    <request name="open_under_cursor" since="1">
      <description summary="open under cursor">
        Request the initial position of this surface to be under the current cursor position. Has to
        be called before attaching any buffer to this surface.
      </description>
    </request>

    <!-- 任务栏相关，有必要否 -->


  </interface>
</protocol>
