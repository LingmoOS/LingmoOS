#设置储存log文件的根目录
logpath=.

#全局设置 
#是否重置所有配置，恢复全局设置默认值
log4j.reset=true
#设置Log4Qt记录器输入级别
log4j.Debug=INFO
#日志记录器存储库的阈值
log4j.threshold=NULL
#设置是否监听QDebug输出的字符串
log4j.handleQtMessages=true

#设置根Logger的输出log等级为INFO
#设置Log输出的几种输出源（appender）：console, daily
log4j.rootLogger=DEBUG,console,daily

#设置终端打印记录器
#记录器类别 --控制台输出
log4j.appender.console=org.apache.log4j.ConsoleAppender
#记录器输出目标
log4j.appender.console.target=STDOUT_TARGET
#记录器输出布局 (包含日志产生的时间、线程、类别等信息)
log4j.appender.console.layout=org.apache.log4j.TTCCLayout
#记录器布局日期格式 (年-月-日 时:分:秒.毫秒)
log4j.appender.console.layout.dateFormat=yyy-MM-dd hh:mm:ss.zzz
#记录器布局包含上下文
log4j.appender.console.layout.contextPrinting=false
#记录器布局包含线程信息
#log4j.appender.console.layout.ThreadPrinting=false

#设置一个每日储存一个log文件的记录器
#记录器类别 --一天一个文件输出
log4j.appender.daily=org.apache.log4j.DailyRollingFileAppender
#记录器输出文件路径
log4j.appender.daily.file=${logpath}/log4qt.log
#记录器追加文件内容
log4j.appender.daily.appendFile=true
#记录器是否直接写入文件																							
#log4j.appender.daily.immediateFlush=true
#记录器文件名日期后缀 按天
log4j.appender.daily.datePattern=.yyyy-MM-dd
#记录器布局分隔符	(根据patten符号格式化输出数据，类似printf的格式化方式)
log4j.appender.daily.layout=org.apache.log4j.PatternLayout
log4j.appender.daily.layout.conversionPattern=%-5p|%d{yyyy-MM-dd HH:mm:ss,zzz}(%-4r)|%m%n
#记录器输出格式
#日志信息格式中几个符号所代表的含义：
# -X号: X信息输出时左对齐；
# %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,
# %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
# %r: 输出自应用启动到输出该log信息耗费的毫秒数
# %c: 输出日志信息所属的类目，通常就是所在类的全名 (无效)
# %t: 输出产生该日志事件的线程名 (无效)
# %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数(无效)。举例：Testlog4.main (TestLog4.java:10)
# %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
# %%: 输出一个"%"字符
# %F: 输出日志消息产生时所在的文件名称(无效)
# %L: 输出代码中的行号(无效)
# %m: 输出代码中指定的消息,产生的日志具体信息(默认在消息内容前追加了文件名，行号，函数名)
# %n: 输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n"输出日志信息换行
# 可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：
# 1) c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。
# 2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。
# 3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。
# 4) .30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边较远输出的字符截掉。

