.TH "libkygsetting" 3 "Fri Sep 22 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libkygsetting \- LINGMOSDK C语言Gsettings模块  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBkdk_gsettings_set\fP (const char *schema_id, const char *key, const char *format,\&.\&.\&.)"
.br
.RI "设置gesettings指定key值 "
.ti -1c
.RI "int \fBkdk_settings_reset\fP (const char *schema_id, const char *key)"
.br
.RI "重置gesettings指定key值 "
.ti -1c
.RI "int \fBkdk_settings_set_string\fP (const char *schema_id, const char *key, const char *value)"
.br
.RI "设置gesettings指定string类型key值 "
.ti -1c
.RI "int \fBkdk_settings_set_int\fP (const char *schema_id, const char *key, int value)"
.br
.RI "设置gesettings指定int类型key值 "
.ti -1c
.RI "void * \fBkdk_gsettings_get\fP (const char *schema_id, const char *key, const char *format,\&.\&.\&.)"
.br
.RI "获取gesettings指定key值 "
.ti -1c
.RI "char * \fBkdk_settings_get_string\fP (const char *schema_id, const char *key)"
.br
.RI "获取gesettings指定string类型key值 "
.ti -1c
.RI "int \fBkdk_settings_get_int\fP (const char *schema_id, const char *key)"
.br
.RI "获取gesettings指定int类型key值 "
.ti -1c
.RI "double \fBkdk_settings_get_double\fP (const char *schema_id, const char *key)"
.br
.RI "获取gesettings指定double类型key值 "
.in -1c
.SH "Detailed Description"
.PP 
LINGMOSDK C语言Gsettings模块 

.SH "CONFORMING TO"
These functions are as per the withdrawn POSIX.1e draft specification.
The following functions are Linux extensions:
.BR kdk_gsettings_set (),
.BR kdk_settings_reset (),
.BR kdk_settings_set_string (),
.BR kdk_settings_set_int (),
.BR kdk_gsettings_get (),
.BR kdk_settings_get_string (),
.BR kdk_settings_get_int ()
and
.BR kdk_settings_get_double ().
.SH "SEE ALSO"
.BR kdk_gsettings_set (3),
.BR kdk_settings_reset (3),
.BR kdk_settings_set_string (3),
.BR kdk_settings_set_int (3),
.BR kdk_gsettings_get (3),
.BR kdk_settings_get_string (3),
.BR kdk_settings_get_int (3)
and
.BR kdk_settings_get_double (3).

.SH "Author"
.PP 
Generated automatically by Doxygen for libkygsetting.h from the source code\&.
