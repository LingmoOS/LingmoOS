/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp dbus.xml -a dbus_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbus_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class NetworkAdaptor
 */

NetworkAdaptor::NetworkAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

NetworkAdaptor::~NetworkAdaptor()
{
    // destructor
}

void NetworkAdaptor::deleteConnect(int type, QString ssid)
{
    // handle method call com.lingmo.network.deleteConnect
    QMetaObject::invokeMethod(parent(), "deleteConnect", Q_ARG(int, type), Q_ARG(QString, ssid));
}

void NetworkAdaptor::activateConnect(int type, const QString &devName, const QString &ssid)
{
    // handle method call com.lingmo.network.activateConnect
    QMetaObject::invokeMethod(parent(), "activateConnect", Q_ARG(int, type), Q_ARG(QString, devName), Q_ARG(QString, ssid));
}

void NetworkAdaptor::activeWirelessAp(const QString &apName, const QString &apPassword, const QString &band, const QString &apDevice)
{
    // handle method call com.lingmo.network.activeWirelessAp
    QMetaObject::invokeMethod(parent(), "activeWirelessAp", Q_ARG(QString, apName), Q_ARG(QString, apPassword), Q_ARG(QString, band), Q_ARG(QString, apDevice));
}

void NetworkAdaptor::deActivateConnect(int type, const QString &devName, const QString &ssid)
{
    // handle method call com.lingmo.network.deActivateConnect
    QMetaObject::invokeMethod(parent(), "deActivateConnect", Q_ARG(int, type), Q_ARG(QString, devName), Q_ARG(QString, ssid));
}

void NetworkAdaptor::deactiveWirelessAp(const QString &apName, const QString &uuid)
{
    // handle method call com.lingmo.network.deactiveWirelessAp
    QMetaObject::invokeMethod(parent(), "deactiveWirelessAp", Q_ARG(QString, apName), Q_ARG(QString, uuid));
}

QString NetworkAdaptor::getActiveConnectionPath(const QString &uuid)
{
    // handle method call com.lingmo.network.getActiveConnectionPath
    QString out0;
    QMetaObject::invokeMethod(parent(), "getActiveConnectionPath", Q_RETURN_ARG(QString, out0), Q_ARG(QString, uuid));
    return out0;
}

QString NetworkAdaptor::getApConnectionPath(const QString &uuid)
{
    // handle method call com.lingmo.network.getApConnectionPath
    QString out0;
    QMetaObject::invokeMethod(parent(), "getApConnectionPath", Q_RETURN_ARG(QString, out0), Q_ARG(QString, uuid));
    return out0;
}

QStringList NetworkAdaptor::getApInfoBySsid(const QString &devName, const QString &ssid)
{
    // handle method call com.lingmo.network.getApInfoBySsid
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getApInfoBySsid", Q_RETURN_ARG(QStringList, out0), Q_ARG(QString, devName), Q_ARG(QString, ssid));
    return out0;
}

QVariantMap NetworkAdaptor::getDeviceListAndEnabled(int devType)
{
    // handle method call com.lingmo.network.getDeviceListAndEnabled
    QVariantMap out0;
    QMetaObject::invokeMethod(parent(), "getDeviceListAndEnabled", Q_RETURN_ARG(QVariantMap, out0), Q_ARG(int, devType));
    return out0;
}

QStringList NetworkAdaptor::getStoredApInfo()
{
    // handle method call com.lingmo.network.getStoredApInfo
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getStoredApInfo", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QVariantList NetworkAdaptor::getWiredList(const QString &devName)
{
    // handle method call com.lingmo.network.getWiredList
    QVariantList out0;
    QMetaObject::invokeMethod(parent(), "getWiredList", Q_RETURN_ARG(QVariantList, out0), Q_ARG(QString, devName));
    return out0;
}

QVariantMap NetworkAdaptor::getWirelessDeviceCap()
{
    // handle method call com.lingmo.network.getWirelessDeviceCap
    QVariantMap out0;
    QMetaObject::invokeMethod(parent(), "getWirelessDeviceCap", Q_RETURN_ARG(QVariantMap, out0));
    return out0;
}

QVariantList NetworkAdaptor::getWirelessList(const QString &devName)
{
    // handle method call com.lingmo.network.getWirelessList
    QVariantList out0;
    QMetaObject::invokeMethod(parent(), "getWirelessList", Q_RETURN_ARG(QVariantList, out0), Q_ARG(QString, devName));
    return out0;
}

bool NetworkAdaptor::getWirelessSwitchBtnState()
{
    // handle method call com.lingmo.network.getWirelessSwitchBtnState
    bool out0;
    QMetaObject::invokeMethod(parent(), "getWirelessSwitchBtnState", Q_RETURN_ARG(bool, out0));
    return out0;
}

void NetworkAdaptor::keyRingClear()
{
    // handle method call com.lingmo.network.keyRingClear
    QMetaObject::invokeMethod(parent(), "keyRingClear");
}

void NetworkAdaptor::keyRingInit()
{
    // handle method call com.lingmo.network.keyRingInit
    QMetaObject::invokeMethod(parent(), "keyRingInit");
}

void NetworkAdaptor::reScan()
{
    // handle method call com.lingmo.network.reScan
    QMetaObject::invokeMethod(parent(), "reScan");
}

void NetworkAdaptor::setDeviceEnable(const QString &devName, bool enable)
{
    // handle method call com.lingmo.network.setDeviceEnable
    QMetaObject::invokeMethod(parent(), "setDeviceEnable", Q_ARG(QString, devName), Q_ARG(bool, enable));
}

void NetworkAdaptor::setWiredSwitchEnable(bool enable)
{
    // handle method call com.lingmo.network.setWiredSwitchEnable
    QMetaObject::invokeMethod(parent(), "setWiredSwitchEnable", Q_ARG(bool, enable));
}

void NetworkAdaptor::setWirelessSwitchEnable(bool enable)
{
    // handle method call com.lingmo.network.setWirelessSwitchEnable
    QMetaObject::invokeMethod(parent(), "setWirelessSwitchEnable", Q_ARG(bool, enable));
}

void NetworkAdaptor::showAddOtherWlanWidget(const QString &devName)
{
    // handle method call com.lingmo.network.showAddOtherWlanWidget
    QMetaObject::invokeMethod(parent(), "showAddOtherWlanWidget", Q_ARG(QString, devName));
}

void NetworkAdaptor::showCreateWiredConnectWidget(const QString &devName)
{
    // handle method call com.lingmo.network.showCreateWiredConnectWidget
    QMetaObject::invokeMethod(parent(), "showCreateWiredConnectWidget", Q_ARG(QString, devName));
}

void NetworkAdaptor::showLingmoNM(int type)
{
    // handle method call com.lingmo.network.showLingmoNM
    QMetaObject::invokeMethod(parent(), "showLingmoNM", Q_ARG(int, type));
}

void NetworkAdaptor::showPropertyWidget(const QString &devName, const QString &ssid)
{
    // handle method call com.lingmo.network.showPropertyWidget
    QMetaObject::invokeMethod(parent(), "showPropertyWidget", Q_ARG(QString, devName), Q_ARG(QString, ssid));
}

