.TH "kdk::KBackgroundGroup" 3 "Thu Oct 12 2023" "Version version:2.3" "LIBLINGMOSDK-APPLICATIONS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdk::KBackgroundGroup \- 提供了一个用于存储部件的容器  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <kbackgroundgroup\&.h>\fP
.PP
Inherits QFrame\&.
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBclicked\fP (QWidget *)"
.br
.RI "点击会发出信号 "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKBackgroundGroup\fP (QWidget *parent=nullptr)"
.br
.ti -1c
.RI "void \fBaddWidget\fP (QWidget *widget)"
.br
.RI "添加一个widget控件 "
.ti -1c
.RI "void \fBaddWidgetList\fP (QList< QWidget * > list)"
.br
.RI "添加一个widget list "
.ti -1c
.RI "void \fBremoveWidgetAt\fP (int i)"
.br
.RI "删除一个指定index的widget "
.ti -1c
.RI "void \fBremoveWidget\fP (QWidget *widget)"
.br
.RI "删除一个widget "
.ti -1c
.RI "void \fBremoveWidgetList\fP (QList< QWidget * > list)"
.br
.RI "删除一个widget list "
.ti -1c
.RI "void \fBinsertWidgetAt\fP (int index, QWidget *widget)"
.br
.RI "指定位置插入一个widget "
.ti -1c
.RI "void \fBinsertWidgetList\fP (int index, QList< QWidget * > list)"
.br
.RI "指定位置插入一个widget list "
.ti -1c
.RI "void \fBsetBorderRadius\fP (int radius)"
.br
.RI "设置KBackgroundGroup的圆角 "
.ti -1c
.RI "int \fBborderRadius\fP ()"
.br
.RI "返回KBackgroundGroup的圆角 "
.ti -1c
.RI "void \fBsetBackgroundRole\fP (QPalette::ColorRole role)"
.br
.RI "设置背景颜色 "
.ti -1c
.RI "QPalette::ColorRole \fBbackgroundRole\fP () const"
.br
.RI "返回背景颜色 "
.ti -1c
.RI "void \fBsetStateEnable\fP (QWidget *widget, bool flag)"
.br
.RI "设置窗体是否可以响应三态 "
.ti -1c
.RI "QList< QWidget * > \fBwidgetList\fP ()"
.br
.RI "返回widget列表 "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBpaintEvent\fP (QPaintEvent *event)"
.br
.ti -1c
.RI "bool \fBeventFilter\fP (QObject *watched, QEvent *event)"
.br
.in -1c
.SH "Detailed Description"
.PP 
提供了一个用于存储部件的容器 


.PP
\fBSince\fP
.RS 4
2\&.0 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void kdk::KBackgroundGroup::addWidget (QWidget * widget)"

.PP
添加一个widget控件 
.PP
\fBParameters\fP
.RS 4
\fIwidget\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::addWidgetList (QList< QWidget * > list)"

.PP
添加一个widget list 
.PP
\fBParameters\fP
.RS 4
\fIlist\fP 
.RE
.PP

.SS "QPalette::ColorRole kdk::KBackgroundGroup::backgroundRole () const"

.PP
返回背景颜色 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int kdk::KBackgroundGroup::borderRadius ()"

.PP
返回KBackgroundGroup的圆角 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "void kdk::KBackgroundGroup::insertWidgetAt (int index, QWidget * widget)"

.PP
指定位置插入一个widget 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP 
.br
\fIwidget\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::insertWidgetList (int index, QList< QWidget * > list)"

.PP
指定位置插入一个widget list 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP 
.br
\fIlist\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::removeWidget (QWidget * widget)"

.PP
删除一个widget 
.PP
\fBParameters\fP
.RS 4
\fIwidget\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::removeWidgetAt (int i)"

.PP
删除一个指定index的widget 
.PP
\fBParameters\fP
.RS 4
\fIi\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::removeWidgetList (QList< QWidget * > list)"

.PP
删除一个widget list 
.PP
\fBParameters\fP
.RS 4
\fIlist\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::setBackgroundRole (QPalette::ColorRole role)"

.PP
设置背景颜色 
.PP
\fBParameters\fP
.RS 4
\fIrole\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::setBorderRadius (int radius)"

.PP
设置KBackgroundGroup的圆角 
.PP
\fBParameters\fP
.RS 4
\fIradius\fP 
.RE
.PP

.SS "void kdk::KBackgroundGroup::setStateEnable (QWidget * widget, bool flag)"

.PP
设置窗体是否可以响应三态 
.PP
\fBParameters\fP
.RS 4
\fIflag\fP 
.br
\fIwidget\fP 
.RE
.PP

.SS "QList<QWidget *> kdk::KBackgroundGroup::widgetList ()"

.PP
返回widget列表 
.PP
\fBReturns\fP
.RS 4

.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for LIBLINGMOSDK-APPLICATIONS from the source code\&.
