.TH "kdk::KSearchLineEdit" 3 "Thu Oct 12 2023" "Version version:2.3" "LIBLINGMOSDK-APPLICATIONS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdk::KSearchLineEdit \- 搜索输入框，可搜索匹配条件的item  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ksearchlineedit\&.h>\fP
.PP
Inherits QLineEdit\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBclear\fP ()"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKSearchLineEdit\fP (QWidget *parent=nullptr)"
.br
.ti -1c
.RI "void \fBsetEnabled\fP (bool)"
.br
.RI "设置是否可用 "
.ti -1c
.RI "bool \fBisEnabled\fP ()"
.br
.RI "返回是否可用 "
.ti -1c
.RI "void \fBsetClearButtonEnabled\fP (bool enable)"
.br
.RI "设置是否显示清除按钮 "
.ti -1c
.RI "bool \fBisClearButtonEnabled\fP () const"
.br
.RI "返回是否显示清除按钮 "
.ti -1c
.RI "QString \fBplaceholderText\fP () const"
.br
.RI "返回placeholder "
.ti -1c
.RI "void \fBsetPlaceholderText\fP (const QString &)"
.br
.RI "设置placeholder "
.ti -1c
.RI "Qt::Alignment \fBplaceholderAlignment\fP () const"
.br
.RI "返回placeholder的对齐方式 "
.ti -1c
.RI "void \fBsetPlaceholderAlignment\fP (Qt::Alignment flag)"
.br
.RI "设置placeholder的对齐方式 "
.ti -1c
.RI "Qt::Alignment \fBalignment\fP () const"
.br
.RI "设置输入文本的对齐方式 "
.ti -1c
.RI "void \fBsetAlignment\fP (Qt::Alignment flag)"
.br
.RI "设置输入文本的对齐方式返回 "
.ti -1c
.RI "void \fBsetTranslucent\fP (bool flag)"
.br
.RI "设置是否启用半透明效果 "
.ti -1c
.RI "bool \fBisTranslucent\fP ()"
.br
.RI "获取是否启用半透明效果 "
.ti -1c
.RI "void \fBreloadStyle\fP ()"
.br
.RI "重新加载style "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBeventFilter\fP (QObject *watched, QEvent *event)"
.br
.ti -1c
.RI "void \fBresizeEvent\fP (QResizeEvent *event)"
.br
.ti -1c
.RI "void \fBsetVisible\fP (bool visible)"
.br
.ti -1c
.RI "QSize \fBsizeHint\fP () const override"
.br
.in -1c
.SH "Detailed Description"
.PP 
搜索输入框，可搜索匹配条件的item 
.PP
\fBExamples\fP
.in +1c
\fBtestsearchlinedit/widget\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LIBLINGMOSDK-APPLICATIONS from the source code\&.
