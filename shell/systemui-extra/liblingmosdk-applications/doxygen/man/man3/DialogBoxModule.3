.TH "DialogBoxModule" 3 "Thu Oct 12 2023" "Version version:2.3" "LIBLINGMOSDK-APPLICATIONS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DialogBoxModule
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBkdk::KAboutDialog\fP"
.br
.RI "关于对话框，支持两种样式，一种是无特定说明的，另一种是有特定说明的。 "
.ti -1c
.RI "class \fBkdk::KDialog\fP"
.br
.RI "继承自 QDialog，支持响应式主题背景切换和图标主题切换、 标题颜色响应窗口激活状态 "
.ti -1c
.RI "class \fBkdk::KInputDialog\fP"
.br
.RI "输入对话框，接口与 QInputDialog 相同。 "
.ti -1c
.RI "class \fBkdk::KProgressDialog\fP"
.br
.RI "进度对话框，会实时显示当前进度 "
.ti -1c
.RI "class \fBkdk::KUninstallDialog\fP"
.br
.RI "卸载对话框，当用户卸载时可能会弹出此提示对话框 "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBInputDialogOption\fP { \fBNoButtons\fP = 0x00000001, \fBUseListViewForComboBoxItems\fP = 0x00000002, \fBUsePlainTextEditForTextInput\fP = 0x00000004 }"
.br
.ti -1c
.RI "enum \fBInputMode\fP { \fBTextInput\fP, \fBIntInput\fP, \fBDoubleInput\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBkdk::KAboutDialog::KAboutDialog\fP (QWidget *parent=nullptr, const QIcon &appIcon=QIcon(), const QString &\fBappName\fP='', const QString &\fBappVersion\fP='', const QString &appInfo='')"
.br
.ti -1c
.RI "void \fBkdk::KAboutDialog::setAppIcon\fP (const QIcon &icon)"
.br
.RI "设置应用程序图标 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::setAppName\fP (const QString &\fBappName\fP)"
.br
.RI "设置应用程序名称 "
.ti -1c
.RI "QString \fBkdk::KAboutDialog::appName\fP ()"
.br
.RI "获取应用程序名称 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::setAppVersion\fP (const QString &\fBappVersion\fP)"
.br
.RI "设置应用程序版本号 "
.ti -1c
.RI "QString \fBkdk::KAboutDialog::appVersion\fP ()"
.br
.RI "获取应用程序版本号 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::setBodyText\fP (const QString &\fBbodyText\fP)"
.br
.RI "设置具体的说明内容 "
.ti -1c
.RI "QString \fBkdk::KAboutDialog::bodyText\fP ()"
.br
.RI "获取具体的说明内容 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::setAppSupport\fP (const QString &\fBappSupport\fP)"
.br
.RI "设置服务与支持邮箱，有默认缺省 "
.ti -1c
.RI "QString \fBkdk::KAboutDialog::appSupport\fP ()"
.br
.RI "获取服务与支持邮箱 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::setBodyTextVisiable\fP (bool flag)"
.br
.RI "设置是否显示说明内容,应设计要求，1\&.2\&.0\&.9中不再显示说明内容 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::setAppPrivacyLabelVisible\fP (bool flag)"
.br
.RI "设置隐私按钮是否可见 "
.ti -1c
.RI "bool \fBkdk::KAboutDialog::AppPrivacyLabelIsVisible\fP ()"
.br
.RI "返回隐私按钮是否可见 "
.ti -1c
.RI "void \fBkdk::KAboutDialog::changeTheme\fP () override"
.br
.ti -1c
.RI "void \fBkdk::KAboutDialog::paintEvent\fP (QPaintEvent *paintEvent) override"
.br
.ti -1c
.RI "\fBkdk::KDialog::KDialog\fP (QWidget *parent=nullptr)"
.br
.ti -1c
.RI "void \fBkdk::KDialog::setWindowIcon\fP (const QIcon &icon)"
.br
.RI "设置对话框图标 "
.ti -1c
.RI "void \fBkdk::KDialog::setWindowIcon\fP (const QString &iconName)"
.br
.RI "设置对话框图标 "
.ti -1c
.RI "void \fBkdk::KDialog::setWindowTitle\fP (const QString &)"
.br
.RI "设置对话框标题名称 "
.ti -1c
.RI "QPushButton * \fBkdk::KDialog::maximumButton\fP ()"
.br
.RI "获取最大化按钮 "
.ti -1c
.RI "QPushButton * \fBkdk::KDialog::minimumButton\fP ()"
.br
.RI "获取最小化按钮 "
.ti -1c
.RI "QPushButton * \fBkdk::KDialog::closeButton\fP ()"
.br
.RI "获取关闭按钮 "
.ti -1c
.RI "\fBKMenuButton\fP * \fBkdk::KDialog::menuButton\fP ()"
.br
.RI "获取下拉菜单按钮 "
.ti -1c
.RI "QWidget * \fBkdk::KDialog::mainWidget\fP ()"
.br
.RI "获取主内容区Widget "
.ti -1c
.RI "bool \fBkdk::KDialog::eventFilter\fP (QObject *target, QEvent *event) override"
.br
.ti -1c
.RI "void \fBkdk::KDialog::changeTheme\fP ()"
.br
.ti -1c
.RI "void \fBkdk::KDialog::changeIconStyle\fP ()"
.br
.ti -1c
.RI "QBoxLayout * \fBkdk::KDialog::mainLayout\fP ()"
.br
.ti -1c
.RI "\fBkdk::KInputDialog::KInputDialog\fP (QWidget *parent=nullptr)"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::setInputMode\fP (InputMode mode)"
.br
.RI "设置输入模式 "
.ti -1c
.RI "InputMode \fBkdk::KInputDialog::inputMode\fP () const"
.br
.RI "返回输入模式 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setLabelText\fP (const QString &text)"
.br
.RI "设置提示信息 "
.ti -1c
.RI "QString \fBkdk::KInputDialog::labelText\fP () const"
.br
.RI "获取提示信息 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setOption\fP (InputDialogOption option, bool on=true)"
.br
.RI "设置option类型 "
.ti -1c
.RI "bool \fBkdk::KInputDialog::testOption\fP (InputDialogOption option) const"
.br
.RI "返回是否设置了option类型 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setOptions\fP (InputDialogOptions \fBoptions\fP)"
.br
.RI "设置options类型 "
.ti -1c
.RI "InputDialogOptions \fBkdk::KInputDialog::options\fP () const"
.br
.RI "返回options类型 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setTextValue\fP (const QString &text)"
.br
.RI "设置文本值 "
.ti -1c
.RI "QString \fBkdk::KInputDialog::textValue\fP () const"
.br
.RI "获取当前文本值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setTextEchoMode\fP (QLineEdit::EchoMode mode)"
.br
.RI "设置保存文本值的回声模式 QLineEdit::EchoMode "
.ti -1c
.RI "QLineEdit::EchoMode \fBkdk::KInputDialog::textEchoMode\fP () const"
.br
.RI "返回保存文本值的回声模式 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setComboBoxEditable\fP (bool editable)"
.br
.RI "设置输入对话框中使用的组合框是否可编辑 "
.ti -1c
.RI "bool \fBkdk::KInputDialog::isComboBoxEditable\fP () const"
.br
.RI "返回输入对话框中使用的组合框是否可编辑 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setComboBoxItems\fP (const QStringList &items)"
.br
.RI "设置输入对话框组合框中使用的项目 "
.ti -1c
.RI "QStringList \fBkdk::KInputDialog::comboBoxItems\fP () const"
.br
.RI "返回输入对话框组合框中使用的项目 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setIntValue\fP (int value)"
.br
.RI "设置int类型值 "
.ti -1c
.RI "int \fBkdk::KInputDialog::intValue\fP () const"
.br
.RI "获取int类型值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setIntMinimum\fP (int min)"
.br
.RI "设置int类型最小值 "
.ti -1c
.RI "int \fBkdk::KInputDialog::intMinimum\fP () const"
.br
.RI "获取int类型最小值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setIntMaximum\fP (int max)"
.br
.RI "设置int类型最大值 "
.ti -1c
.RI "int \fBkdk::KInputDialog::intMaximum\fP () const"
.br
.RI "获取int类型最大值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setIntRange\fP (int min, int max)"
.br
.RI "设置int类型值范围 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setIntStep\fP (int step)"
.br
.RI "设置步长 "
.ti -1c
.RI "int \fBkdk::KInputDialog::intStep\fP () const"
.br
.RI "获取int类型步长 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setDoubleValue\fP (double value)"
.br
.RI "设置double类型值 "
.ti -1c
.RI "double \fBkdk::KInputDialog::doubleValue\fP () const"
.br
.RI "获取double类型值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setDoubleMinimum\fP (double min)"
.br
.RI "设置double类型最小值 "
.ti -1c
.RI "double \fBkdk::KInputDialog::doubleMinimum\fP () const"
.br
.RI "获取double类型最小值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setDoubleMaximum\fP (double max)"
.br
.RI "设置double类型最大值 "
.ti -1c
.RI "double \fBkdk::KInputDialog::doubleMaximum\fP () const"
.br
.RI "获取double类型最大值 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setDoubleRange\fP (double min, double max)"
.br
.RI "设置double类型值范围 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setDoubleDecimals\fP (int decimals)"
.br
.RI "以小数为单位设置双自旋盒的精度 "
.ti -1c
.RI "int \fBkdk::KInputDialog::doubleDecimals\fP () const"
.br
.RI "获取双自旋盒的精度 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setOkButtonText\fP (const QString &text)"
.br
.RI "设置OK按钮的文本 "
.ti -1c
.RI "QString \fBkdk::KInputDialog::okButtonText\fP () const"
.br
.RI "获取OK按钮的文本 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setCancelButtonText\fP (const QString &text)"
.br
.RI "设置cancel按钮的文本 "
.ti -1c
.RI "QString \fBkdk::KInputDialog::cancelButtonText\fP () const"
.br
.RI "获取cancel按钮的文本 "
.ti -1c
.RI "void \fBkdk::KInputDialog::open\fP (QObject *receiver, const char *member)"
.br
.RI "将对话框显示为窗口模式对话框，并立即返回。 "
.ti -1c
.RI "QSize \fBkdk::KInputDialog::minimumSizeHint\fP () const override"
.br
.RI "获取部件的推荐最小尺寸 "
.ti -1c
.RI "QSize \fBkdk::KInputDialog::sizeHint\fP () const override"
.br
.RI "获取保存部件的推荐尺寸 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setVisible\fP (bool visible) override"
.br
.RI "设置窗口部件是否可见 "
.ti -1c
.RI "QString \fBkdk::KInputDialog::placeholderText\fP () const"
.br
.RI "获取背景提示文本 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setPlaceholderText\fP (const QString &)"
.br
.RI "设置背景提示文本 "
.ti -1c
.RI "static QString \fBkdk::KInputDialog::getText\fP (QWidget *parent, const QString &label, QLineEdit::EchoMode echo=QLineEdit::Normal, const QString &text=QString(), bool *ok=nullptr, Qt::WindowFlags flags=Qt::WindowFlags(), Qt::InputMethodHints inputMethodHints=Qt::ImhNone)"
.br
.RI "静态便利函数，用于从用户处获取单行字符串。 "
.ti -1c
.RI "static QString \fBkdk::KInputDialog::getMultiLineText\fP (QWidget *parent, const QString &label, const QString &text=QString(), bool *ok=nullptr, Qt::WindowFlags flags=Qt::WindowFlags(), Qt::InputMethodHints inputMethodHints=Qt::ImhNone)"
.br
.RI "静态便利函数，用于从用户处获取多行字符串。 "
.ti -1c
.RI "static QString \fBkdk::KInputDialog::getItem\fP (QWidget *parent, const QString &label, const QStringList &items, int current=0, bool editable=true, bool *ok=nullptr, Qt::WindowFlags flags=Qt::WindowFlags(), Qt::InputMethodHints inputMethodHints=Qt::ImhNone)"
.br
.RI "静态便利函数，用于让用户从字符串列表中选择一个项目。 "
.ti -1c
.RI "static int \fBkdk::KInputDialog::getInt\fP (QWidget *parent, const QString &label, int value=0, int minValue=\-2147483647, int maxValue=2147483647, int step=1, bool *ok=nullptr, Qt::WindowFlags flags=Qt::WindowFlags())"
.br
.RI "静态便利函数，用于从用户处获取整数输入值。 "
.ti -1c
.RI "static double \fBkdk::KInputDialog::getDouble\fP (QWidget *parent, const QString &label, double value=0, double minValue=\-2147483647, double maxValue=2147483647, int decimals=1, bool *ok=nullptr, Qt::WindowFlags flags=Qt::WindowFlags())"
.br
.RI "静态便利函数，用于从用户处获取浮点数。 "
.ti -1c
.RI "void \fBkdk::KInputDialog::setDoubleStep\fP (double step)"
.br
.RI "设置doubel类型步长 "
.ti -1c
.RI "double \fBkdk::KInputDialog::doubleStep\fP () const"
.br
.RI "获取doubel类型步长 "
.ti -1c
.RI "void \fBkdk::KInputDialog::done\fP (int result) override"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::changeTheme\fP ()"
.br
.ti -1c
.RI "\fBkdk::KProgressDialog::KProgressDialog\fP (QWidget *parent=nullptr)"
.br
.ti -1c
.RI "\fBkdk::KProgressDialog::KProgressDialog\fP (const QString &\fBlabelText\fP, const QString &cancelButtonText='cancel', int \fBminimum\fP=0, int \fBmaximum\fP=100, QWidget *parent=nullptr)"
.br
.ti -1c
.RI "void \fBkdk::KProgressDialog::setLabel\fP (QLabel *label)"
.br
.RI "设置提示文字 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setCancelButton\fP (QPushButton *button)"
.br
.RI "设置取消按钮 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setBar\fP (QProgressBar *bar)"
.br
.RI "设置进度条 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setSuffix\fP (const QString &suffix)"
.br
.RI "设置detail的后缀 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setShowDetail\fP (bool flag)"
.br
.RI "设置是否显示详细信息 "
.ti -1c
.RI "int \fBkdk::KProgressDialog::minimum\fP () const"
.br
.RI "返回最小值 "
.ti -1c
.RI "int \fBkdk::KProgressDialog::maximum\fP () const"
.br
.RI "返回最大值 "
.ti -1c
.RI "int \fBkdk::KProgressDialog::value\fP () const"
.br
.RI "返回当前值 "
.ti -1c
.RI "QString \fBkdk::KProgressDialog::labelText\fP () const"
.br
.RI "返回提示内容 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setAutoReset\fP (bool \fBreset\fP)"
.br
.RI "设置自动重置 "
.ti -1c
.RI "bool \fBkdk::KProgressDialog::autoReset\fP () const"
.br
.RI "返回是否自动重置 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setAutoClose\fP (bool close)"
.br
.RI "设置是否自动关闭对话框 "
.ti -1c
.RI "bool \fBkdk::KProgressDialog::autoClose\fP () const"
.br
.RI "返回是否自动关闭对话框 "
.ti -1c
.RI "QProgressBar * \fBkdk::KProgressDialog::progressBar\fP ()"
.br
.RI "获取进度条 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::changeTheme\fP ()"
.br
.ti -1c
.RI "\fBkdk::KUninstallDialog::KUninstallDialog\fP (QString appName, QString appVersion, QWidget *parent=nullptr)"
.br
.ti -1c
.RI "QLabel * \fBkdk::KUninstallDialog::debAppNameLabel\fP ()"
.br
.RI "debAppNameLabel "
.ti -1c
.RI "QLabel * \fBkdk::KUninstallDialog::debNameLabel\fP ()"
.br
.RI "包名Label "
.ti -1c
.RI "QLabel * \fBkdk::KUninstallDialog::debIconLabel\fP ()"
.br
.RI "包IconLabel "
.ti -1c
.RI "QLabel * \fBkdk::KUninstallDialog::debVersionLabel\fP ()"
.br
.RI "包版本Label "
.ti -1c
.RI "QPushButton * \fBkdk::KUninstallDialog::uninstallButtton\fP ()"
.br
.RI "卸载按钮 "
.ti -1c
.RI "void \fBkdk::KUninstallDialog::changeTheme\fP ()"
.br
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBkdk::KInputDialog::textValueChanged\fP (const QString &text)"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::textValueSelected\fP (const QString &text)"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::intValueChanged\fP (int value)"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::intValueSelected\fP (int value)"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::doubleValueChanged\fP (double value)"
.br
.ti -1c
.RI "void \fBkdk::KInputDialog::doubleValueSelected\fP (double value)"
.br
.ti -1c
.RI "void \fBkdk::KProgressDialog::canceled\fP ()"
.br
.in -1c
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBkdk::KProgressDialog::cancel\fP ()"
.br
.RI "取消进度条 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::reset\fP ()"
.br
.RI "重置进度条 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setMaximum\fP (int \fBmaximum\fP)"
.br
.RI "设置最大值 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setMinimum\fP (int \fBminimum\fP)"
.br
.RI "设置最小值 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setRange\fP (int \fBminimum\fP, int \fBmaximum\fP)"
.br
.RI "设置范围 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setValue\fP (int progress)"
.br
.RI "设置当前值 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setLabelText\fP (const QString &text)"
.br
.RI "设置提示内容 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setCancelButtonText\fP (const QString &text)"
.br
.RI "设置取消按钮内容 "
.ti -1c
.RI "void \fBkdk::KProgressDialog::setSubContent\fP (const QString &text)"
.br
.RI "设置次级内容 "
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "QString kdk::KAboutDialog::appName ()"

.PP
获取应用程序名称 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "bool kdk::KAboutDialog::AppPrivacyLabelIsVisible ()"

.PP
返回隐私按钮是否可见 
.PP
\fBReturns\fP
.RS 4

.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.SS "QString kdk::KAboutDialog::appSupport ()"

.PP
获取服务与支持邮箱 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QString kdk::KAboutDialog::appVersion ()"

.PP
获取应用程序版本号 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "bool kdk::KProgressDialog::autoClose () const"

.PP
返回是否自动关闭对话框 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "bool kdk::KProgressDialog::autoReset () const"

.PP
返回是否自动重置 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QString kdk::KAboutDialog::bodyText ()"

.PP
获取具体的说明内容 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QString kdk::KInputDialog::cancelButtonText () const"

.PP
获取cancel按钮的文本 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QPushButton* kdk::KDialog::closeButton ()"

.PP
获取关闭按钮 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QStringList kdk::KInputDialog::comboBoxItems () const"

.PP
返回输入对话框组合框中使用的项目 
.PP
\fBReturns\fP
.RS 4
QStringList 
.RE
.PP

.SS "QLabel* kdk::KUninstallDialog::debAppNameLabel ()"

.PP
debAppNameLabel 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QLabel* kdk::KUninstallDialog::debIconLabel ()"

.PP
包IconLabel 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QLabel* kdk::KUninstallDialog::debNameLabel ()"

.PP
包名Label 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QLabel* kdk::KUninstallDialog::debVersionLabel ()"

.PP
包版本Label 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int kdk::KInputDialog::doubleDecimals () const"

.PP
获取双自旋盒的精度 
.PP
\fBReturns\fP
.RS 4
int 
.RE
.PP

.SS "double kdk::KInputDialog::doubleMaximum () const"

.PP
获取double类型最大值 
.PP
\fBReturns\fP
.RS 4
double 
.RE
.PP

.SS "double kdk::KInputDialog::doubleMinimum () const"

.PP
获取double类型最小值 
.PP
\fBReturns\fP
.RS 4
double 
.RE
.PP

.SS "double kdk::KInputDialog::doubleStep () const"

.PP
获取doubel类型步长 
.PP
\fBReturns\fP
.RS 4
double 
.RE
.PP

.SS "double kdk::KInputDialog::doubleValue () const"

.PP
获取double类型值 
.PP
\fBReturns\fP
.RS 4
double 
.RE
.PP

.SS "static double kdk::KInputDialog::getDouble (QWidget * parent, const QString & label, double value = \fC0\fP, double minValue = \fC\-2147483647\fP, double maxValue = \fC2147483647\fP, int decimals = \fC1\fP, bool * ok = \fCnullptr\fP, Qt::WindowFlags flags = \fCQt::WindowFlags()\fP)\fC [static]\fP"

.PP
静态便利函数，用于从用户处获取浮点数。 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP 
.br
\fIlabel\fP 
.br
\fIvalue\fP 
.br
\fIminValue\fP 
.br
\fImaxValue\fP 
.br
\fIdecimals\fP 
.br
\fIok\fP 
.br
\fIflags\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "static int kdk::KInputDialog::getInt (QWidget * parent, const QString & label, int value = \fC0\fP, int minValue = \fC\-2147483647\fP, int maxValue = \fC2147483647\fP, int step = \fC1\fP, bool * ok = \fCnullptr\fP, Qt::WindowFlags flags = \fCQt::WindowFlags()\fP)\fC [static]\fP"

.PP
静态便利函数，用于从用户处获取整数输入值。 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP 
.br
\fIlabel\fP 
.br
\fIvalue\fP 
.br
\fIminValue\fP 
.br
\fImaxValue\fP 
.br
\fIstep\fP 
.br
\fIok\fP 
.br
\fIflags\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "static QString kdk::KInputDialog::getItem (QWidget * parent, const QString & label, const QStringList & items, int current = \fC0\fP, bool editable = \fCtrue\fP, bool * ok = \fCnullptr\fP, Qt::WindowFlags flags = \fCQt::WindowFlags()\fP, Qt::InputMethodHints inputMethodHints = \fCQt::ImhNone\fP)\fC [static]\fP"

.PP
静态便利函数，用于让用户从字符串列表中选择一个项目。 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP 
.br
\fIlabel\fP 
.br
\fIitems\fP 
.br
\fIcurrent\fP 
.br
\fIeditable\fP 
.br
\fIok\fP 
.br
\fIflags\fP 
.br
\fIinputMethodHints\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "static QString kdk::KInputDialog::getMultiLineText (QWidget * parent, const QString & label, const QString & text = \fCQString()\fP, bool * ok = \fCnullptr\fP, Qt::WindowFlags flags = \fCQt::WindowFlags()\fP, Qt::InputMethodHints inputMethodHints = \fCQt::ImhNone\fP)\fC [static]\fP"

.PP
静态便利函数，用于从用户处获取多行字符串。 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP 
.br
\fIlabel\fP 
.br
\fItext\fP 
.br
\fIok\fP 
.br
\fIflags\fP 
.br
\fIinputMethodHints\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "static QString kdk::KInputDialog::getText (QWidget * parent, const QString & label, QLineEdit::EchoMode echo = \fCQLineEdit::Normal\fP, const QString & text = \fCQString()\fP, bool * ok = \fCnullptr\fP, Qt::WindowFlags flags = \fCQt::WindowFlags()\fP, Qt::InputMethodHints inputMethodHints = \fCQt::ImhNone\fP)\fC [static]\fP"

.PP
静态便利函数，用于从用户处获取单行字符串。 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP 
.br
\fIlabel\fP 
.br
\fIecho\fP 
.br
\fItext\fP 
.br
\fIok\fP 
.br
\fIflags\fP 
.br
\fIinputMethodHints\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "InputMode kdk::KInputDialog::inputMode () const"

.PP
返回输入模式 
.PP
\fBReturns\fP
.RS 4
InputMode 
.RE
.PP

.SS "int kdk::KInputDialog::intMaximum () const"

.PP
获取int类型最大值 
.PP
\fBReturns\fP
.RS 4
int 
.RE
.PP

.SS "int kdk::KInputDialog::intMinimum () const"

.PP
获取int类型最小值 
.PP
\fBReturns\fP
.RS 4
int 
.RE
.PP

.SS "int kdk::KInputDialog::intStep () const"

.PP
获取int类型步长 
.PP
\fBReturns\fP
.RS 4
int 
.RE
.PP

.SS "int kdk::KInputDialog::intValue () const"

.PP
获取int类型值 
.PP
\fBReturns\fP
.RS 4
int 
.RE
.PP

.SS "bool kdk::KInputDialog::isComboBoxEditable () const"

.PP
返回输入对话框中使用的组合框是否可编辑 
.PP
\fBReturns\fP
.RS 4
bool 
.RE
.PP

.SS "QString kdk::KInputDialog::labelText () const"

.PP
获取提示信息 
.PP
\fBReturns\fP
.RS 4
QString 
.RE
.PP

.SS "QString kdk::KProgressDialog::labelText () const"

.PP
返回提示内容 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QWidget* kdk::KDialog::mainWidget ()"

.PP
获取主内容区Widget 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int kdk::KProgressDialog::maximum () const"

.PP
返回最大值 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QPushButton* kdk::KDialog::maximumButton ()"

.PP
获取最大化按钮 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "\fBKMenuButton\fP* kdk::KDialog::menuButton ()"

.PP
获取下拉菜单按钮 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int kdk::KProgressDialog::minimum () const"

.PP
返回最小值 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QPushButton* kdk::KDialog::minimumButton ()"

.PP
获取最小化按钮 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QSize kdk::KInputDialog::minimumSizeHint () const\fC [override]\fP"

.PP
获取部件的推荐最小尺寸 
.PP
\fBReturns\fP
.RS 4
QSize 
.RE
.PP

.SS "QString kdk::KInputDialog::okButtonText () const"

.PP
获取OK按钮的文本 
.PP
\fBReturns\fP
.RS 4
QString 
.RE
.PP

.SS "void kdk::KInputDialog::open (QObject * receiver, const char * member)"

.PP
将对话框显示为窗口模式对话框，并立即返回。 
.PP
\fBParameters\fP
.RS 4
\fIreceiver\fP 
.br
\fImember\fP 
.RE
.PP

.SS "InputDialogOptions kdk::KInputDialog::options () const"

.PP
返回options类型 
.PP
\fBReturns\fP
.RS 4
InputDialogOptions 
.RE
.PP

.SS "QString kdk::KInputDialog::placeholderText () const"

.PP
获取背景提示文本 
.PP
\fBReturns\fP
.RS 4

.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.SS "QProgressBar* kdk::KProgressDialog::progressBar ()"

.PP
获取进度条 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "void kdk::KAboutDialog::setAppIcon (const QIcon & icon)"

.PP
设置应用程序图标 
.PP
\fBParameters\fP
.RS 4
\fIicon\fP 
.RE
.PP

.SS "void kdk::KAboutDialog::setAppName (const QString & appName)"

.PP
设置应用程序名称 
.PP
\fBParameters\fP
.RS 4
\fIappName\fP 
.RE
.PP

.SS "void kdk::KAboutDialog::setAppPrivacyLabelVisible (bool flag)"

.PP
设置隐私按钮是否可见 
.PP
\fBParameters\fP
.RS 4
\fIflag\fP 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.SS "void kdk::KAboutDialog::setAppSupport (const QString & appSupport)"

.PP
设置服务与支持邮箱，有默认缺省 
.PP
\fBParameters\fP
.RS 4
\fIappSupport\fP 
.RE
.PP

.SS "void kdk::KAboutDialog::setAppVersion (const QString & appVersion)"

.PP
设置应用程序版本号 
.PP
\fBParameters\fP
.RS 4
\fIappVersion\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setAutoClose (bool close)"

.PP
设置是否自动关闭对话框 
.PP
\fBParameters\fP
.RS 4
\fIclose\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setAutoReset (bool reset)"

.PP
设置自动重置 
.PP
\fBParameters\fP
.RS 4
\fIreset\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SS "void kdk::KProgressDialog::setBar (QProgressBar * bar)"

.PP
设置进度条 
.PP
\fBParameters\fP
.RS 4
\fIbar\fP 
.RE
.PP

.SS "void kdk::KAboutDialog::setBodyText (const QString & bodyText)"

.PP
设置具体的说明内容 
.PP
\fBParameters\fP
.RS 4
\fIbodyText\fP 
.RE
.PP

.SS "void kdk::KAboutDialog::setBodyTextVisiable (bool flag)"

.PP
设置是否显示说明内容,应设计要求，1\&.2\&.0\&.9中不再显示说明内容 
.PP
\fBParameters\fP
.RS 4
\fIflag\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setCancelButton (QPushButton * button)"

.PP
设置取消按钮 
.PP
\fBParameters\fP
.RS 4
\fIbutton\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setCancelButtonText (const QString & text)"

.PP
设置cancel按钮的文本 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setComboBoxEditable (bool editable)"

.PP
设置输入对话框中使用的组合框是否可编辑 
.PP
\fBParameters\fP
.RS 4
\fIeditable\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setComboBoxItems (const QStringList & items)"

.PP
设置输入对话框组合框中使用的项目 
.PP
\fBParameters\fP
.RS 4
\fIitems\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setDoubleDecimals (int decimals)"

.PP
以小数为单位设置双自旋盒的精度 
.PP
\fBParameters\fP
.RS 4
\fIdecimals\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setDoubleMaximum (double max)"

.PP
设置double类型最大值 
.PP
\fBParameters\fP
.RS 4
\fImax\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setDoubleMinimum (double min)"

.PP
设置double类型最小值 
.PP
\fBParameters\fP
.RS 4
\fImin\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setDoubleRange (double min, double max)"

.PP
设置double类型值范围 
.PP
\fBParameters\fP
.RS 4
\fImin\fP 
.br
\fImax\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setDoubleStep (double step)"

.PP
设置doubel类型步长 
.PP
\fBParameters\fP
.RS 4
\fIstep\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setDoubleValue (double value)"

.PP
设置double类型值 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setInputMode (InputMode mode)"

.PP
设置输入模式 
.PP
\fBParameters\fP
.RS 4
\fImode\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setIntMaximum (int max)"

.PP
设置int类型最大值 
.PP
\fBParameters\fP
.RS 4
\fImax\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setIntMinimum (int min)"

.PP
设置int类型最小值 
.PP
\fBParameters\fP
.RS 4
\fImin\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setIntRange (int min, int max)"

.PP
设置int类型值范围 
.PP
\fBParameters\fP
.RS 4
\fImin\fP 
.br
\fImax\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setIntStep (int step)"

.PP
设置步长 
.PP
\fBParameters\fP
.RS 4
\fIstep\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setIntValue (int value)"

.PP
设置int类型值 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setLabel (QLabel * label)"

.PP
设置提示文字 
.PP
\fBParameters\fP
.RS 4
\fIlabel\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setLabelText (const QString & text)"

.PP
设置提示信息 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setOkButtonText (const QString & text)"

.PP
设置OK按钮的文本 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setOption (InputDialogOption option, bool on = \fCtrue\fP)"

.PP
设置option类型 
.PP
\fBParameters\fP
.RS 4
\fIoption\fP 
.br
\fIon\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setOptions (InputDialogOptions options)"

.PP
设置options类型 
.PP
\fBParameters\fP
.RS 4
\fIoptions\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setPlaceholderText (const QString &)"

.PP
设置背景提示文本 
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.SS "void kdk::KProgressDialog::setShowDetail (bool flag)"

.PP
设置是否显示详细信息 
.PP
\fBParameters\fP
.RS 4
\fIflag\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SS "void kdk::KProgressDialog::setSuffix (const QString & suffix)"

.PP
设置detail的后缀 
.PP
\fBParameters\fP
.RS 4
\fIsuffix\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SS "void kdk::KInputDialog::setTextEchoMode (QLineEdit::EchoMode mode)"

.PP
设置保存文本值的回声模式 QLineEdit::EchoMode 
.PP
\fBParameters\fP
.RS 4
\fImode\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setTextValue (const QString & text)"

.PP
设置文本值 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.SS "void kdk::KInputDialog::setVisible (bool visible)\fC [override]\fP"

.PP
设置窗口部件是否可见 
.PP
\fBParameters\fP
.RS 4
\fIvisible\fP 
.RE
.PP

.SS "void kdk::KDialog::setWindowIcon (const QIcon & icon)"

.PP
设置对话框图标 
.PP
\fBParameters\fP
.RS 4
\fIicon\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SS "void kdk::KDialog::setWindowIcon (const QString & iconName)"

.PP
设置对话框图标 
.PP
\fBParameters\fP
.RS 4
\fIiconName\fP 
.RE
.PP

.SS "void kdk::KDialog::setWindowTitle (const QString &)"

.PP
设置对话框标题名称 
.PP
\fBParameters\fP
.RS 4
\fIwidgetName\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SS "QSize kdk::KInputDialog::sizeHint () const\fC [override]\fP"

.PP
获取保存部件的推荐尺寸 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "bool kdk::KInputDialog::testOption (InputDialogOption option) const"

.PP
返回是否设置了option类型 
.PP
\fBParameters\fP
.RS 4
\fIoption\fP 
.RE
.PP
\fBReturns\fP
.RS 4
bool 
.RE
.PP

.SS "QLineEdit::EchoMode kdk::KInputDialog::textEchoMode () const"

.PP
返回保存文本值的回声模式 
.PP
\fBReturns\fP
.RS 4
QLineEdit::EchoMode 
.RE
.PP

.SS "QString kdk::KInputDialog::textValue () const"

.PP
获取当前文本值 
.PP
\fBReturns\fP
.RS 4
QString 
.RE
.PP

.SS "QPushButton* kdk::KUninstallDialog::uninstallButtton ()"

.PP
卸载按钮 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int kdk::KProgressDialog::value () const"

.PP
返回当前值 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SH "Public Slots"
.PP 
.SS "void kdk::KProgressDialog::setCancelButtonText (const QString & text)\fC [slot]\fP"

.PP
设置取消按钮内容 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setLabelText (const QString & text)\fC [slot]\fP"

.PP
设置提示内容 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setMaximum (int maximum)\fC [slot]\fP"

.PP
设置最大值 
.PP
\fBParameters\fP
.RS 4
\fImaximum\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setMinimum (int minimum)\fC [slot]\fP"

.PP
设置最小值 
.PP
\fBParameters\fP
.RS 4
\fIminimum\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setRange (int minimum, int maximum)\fC [slot]\fP"

.PP
设置范围 
.PP
\fBParameters\fP
.RS 4
\fIminimum\fP 
.br
\fImaximum\fP 
.RE
.PP

.SS "void kdk::KProgressDialog::setSubContent (const QString & text)\fC [slot]\fP"

.PP
设置次级内容 
.PP
\fBParameters\fP
.RS 4
\fItext\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SS "void kdk::KProgressDialog::setValue (int progress)\fC [slot]\fP"

.PP
设置当前值 
.PP
\fBParameters\fP
.RS 4
\fIprogress\fP 
.RE
.PP

.PP
\fBExamples\fP
.in +1c
\fBtestprogressdialog/widget\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LIBLINGMOSDK-APPLICATIONS from the source code\&.
