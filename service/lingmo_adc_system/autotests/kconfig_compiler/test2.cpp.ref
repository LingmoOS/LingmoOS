// This file is generated by kconfig_compiler_kf5 from test2.kcfg.
// All changes you do to this file will be lost.

#include "test2.h"

Test2::Test2( )
  : MyPrefs( QStringLiteral( "korganizerrc" ) )
{
  setCurrentGroup( QStringLiteral( "General" ) );

  mAutoSaveItem = new MyPrefs::ItemBool( currentGroup(), QStringLiteral( "Auto Save" ), mAutoSave, false );
  mAutoSaveItem->setLabel( QCoreApplication::translate("Test2", "Enable automatic saving of calendar") );
  mAutoSaveItem->setWhatsThis( QCoreApplication::translate("Test2", "WhatsThis text for AutoSave option") );
  addItem( mAutoSaveItem, QStringLiteral( "AutoSave" ) );
  mAutoSaveIntervalItem = new MyPrefs::ItemInt( currentGroup(), QStringLiteral( "Auto Save Interval" ), mAutoSaveInterval, 10 );
  mAutoSaveIntervalItem->setLabel( QCoreApplication::translate("Test2", "Auto Save Interval") );
  addItem( mAutoSaveIntervalItem, QStringLiteral( "AutoSaveInterval" ) );
  mConfirmItem = new MyPrefs::ItemBool( currentGroup(), QStringLiteral( "Confirm Deletes" ), mConfirm, true );
  mConfirmItem->setLabel( QCoreApplication::translate("Test2", "Confirm deletes") );
  addItem( mConfirmItem, QStringLiteral( "Confirm" ) );
  mArchiveFileItem = new MyPrefs::ItemString( currentGroup(), QStringLiteral( "Archive File" ), mArchiveFile );
  mArchiveFileItem->setLabel( QCoreApplication::translate("Test2", "Archive File") );
  addItem( mArchiveFileItem, QStringLiteral( "ArchiveFile" ) );
  QList<MyPrefs::ItemEnum::Choice> valuesDestination;
  {
    MyPrefs::ItemEnum::Choice choice;
    choice.name = QStringLiteral("standardDestination");
    valuesDestination.append( choice );
  }
  {
    MyPrefs::ItemEnum::Choice choice;
    choice.name = QStringLiteral("askDestination");
    valuesDestination.append( choice );
  }
  {
    MyPrefs::ItemEnum::Choice choice;
    choice.name = QStringLiteral("argl1");
    choice.label = QCoreApplication::translate("Test2", "Argl1 Label");
    valuesDestination.append( choice );
  }
  {
    MyPrefs::ItemEnum::Choice choice;
    choice.name = QStringLiteral("argl2");
    choice.whatsThis = QCoreApplication::translate("Test2", "Argl2 Whatsthis");
    valuesDestination.append( choice );
  }
  {
    MyPrefs::ItemEnum::Choice choice;
    choice.name = QStringLiteral("argl3");
    choice.label = QCoreApplication::translate("Test2", "Argl3 Label");
    choice.whatsThis = QCoreApplication::translate("Test2", "Argl3 Whatsthis");
    valuesDestination.append( choice );
  }
  mDestinationItem = new MyPrefs::ItemEnum( currentGroup(), QStringLiteral( "Destination" ), mDestination, valuesDestination, standardDestination );
  mDestinationItem->setLabel( QCoreApplication::translate("Test2", "New Events/Todos Should") );
  addItem( mDestinationItem, QStringLiteral( "Destination" ) );

  setCurrentGroup( QStringLiteral( "Views" ) );

  mHourSizeItem = new MyPrefs::ItemInt( currentGroup(), QStringLiteral( "Hour Size" ), mHourSize, 10 );
  mHourSizeItem->setLabel( QCoreApplication::translate("Test2", "Hour Size") );
  addItem( mHourSizeItem, QStringLiteral( "HourSize" ) );
  mSelectionStartsEditorItem = new MyPrefs::ItemBool( currentGroup(), QStringLiteral( "SelectionStartsEditor" ), mSelectionStartsEditor, false );
  mSelectionStartsEditorItem->setLabel( QCoreApplication::translate("Test2", "Time range selection in agenda view starts event editor") );
  addItem( mSelectionStartsEditorItem, QStringLiteral( "SelectionStartsEditor" ) );

  setCurrentGroup( QStringLiteral( "KOrganizer Plugins" ) );

  QStringList defaultSelectedPlugins;
  defaultSelectedPlugins.append( QString::fromUtf8( "holidays" ) );
  defaultSelectedPlugins.append( QString::fromUtf8( "webexport" ) );

  mSelectedPluginsItem = new MyPrefs::ItemStringList( currentGroup(), QStringLiteral( "SelectedPlugins" ), mSelectedPlugins, defaultSelectedPlugins );
  mSelectedPluginsItem->setLabel( QCoreApplication::translate("Test2", "SelectedPlugins") );
  addItem( mSelectedPluginsItem, QStringLiteral( "SelectedPlugins" ) );

  setCurrentGroup( QStringLiteral( "Colors" ) );

  mHighlightColorItem = new MyPrefs::ItemColor( currentGroup(), QStringLiteral( "Highlight Color" ), mHighlightColor, QColor( 100, 100, 255 ) );
  mHighlightColorItem->setLabel( QCoreApplication::translate("Test2", "Highlight color") );
  addItem( mHighlightColorItem, QStringLiteral( "HighlightColor" ) );
  mAgendaBgColorItem = new MyPrefs::ItemColor( currentGroup(), QStringLiteral( "Agenda Background Color" ), mAgendaBgColor, QColor( 255, 255, 255 ) );
  mAgendaBgColorItem->setLabel( QCoreApplication::translate("Test2", "Agenda view background color") );
  addItem( mAgendaBgColorItem, QStringLiteral( "AgendaBgColor" ) );

  setCurrentGroup( QStringLiteral( "Fonts" ) );

  mTimeBarFontItem = new MyPrefs::ItemFont( currentGroup(), QStringLiteral( "TimeBar Font" ), mTimeBarFont );
  mTimeBarFontItem->setLabel( QCoreApplication::translate("Test2", "Time bar") );
  addItem( mTimeBarFontItem, QStringLiteral( "TimeBarFont" ) );
}

Test2::~Test2()
{
}

