// This file is generated by kconfig_compiler_kf5 from test8b.kcfg.
// All changes you do to this file will be lost.

#include "test8b.h"

#include <qglobal.h>
#include <QFile>

class Test8bHelper
{
  public:
    Test8bHelper() : q(nullptr) {}
    ~Test8bHelper() { delete q; q = nullptr; }
    Test8bHelper(const Test8bHelper&) = delete;
    Test8bHelper& operator=(const Test8bHelper&) = delete;
    Test8b *q;
};
Q_GLOBAL_STATIC(Test8bHelper, s_globalTest8b)
Test8b *Test8b::self()
{
  if (!s_globalTest8b()->q) {
    new Test8b;
    s_globalTest8b()->q->read();
  }

  return s_globalTest8b()->q;
}

Test8b::Test8b( )
  : Test8a()
{
  Q_ASSERT(!s_globalTest8b()->q);
  s_globalTest8b()->q = this;
  setCurrentGroup( QStringLiteral( "Group8b1" ) );

  Test8a::ItemUInt  *itemSomething;
  itemSomething = new Test8a::ItemUInt( currentGroup(), QStringLiteral( "Something" ), mSomething, 60 );
  addItem( itemSomething, QStringLiteral( "Something" ) );

  setCurrentGroup( QStringLiteral( "Group8b2" ) );

  Test8a::ItemBool  *itemFooBoo;
  itemFooBoo = new Test8a::ItemBool( currentGroup(), QStringLiteral( "FooBoo" ), mFooBoo, false );
  addItem( itemFooBoo, QStringLiteral( "FooBoo" ) );
  Test8a::ItemUInt  *itemPort;
  itemPort = new Test8a::ItemUInt( currentGroup(), QStringLiteral( "Port" ), mPort, 1000 );
  addItem( itemPort, QStringLiteral( "Port" ) );
}

Test8b::~Test8b()
{
  if (s_globalTest8b.exists() && !s_globalTest8b.isDestroyed()) {
    s_globalTest8b()->q = nullptr;
  }
}

